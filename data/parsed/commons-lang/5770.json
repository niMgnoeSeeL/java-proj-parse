{
    "363f779eb10514a001de232d2f9b8ce13b012b41": {
        "authored_data": "2005 Apr 17 18:42",
        "commit.message": "Change WordWrapUtils to WordUtils.. Just noticed it in the javadocs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@161678 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Martin van den Bemt",
        "pcid": "5e18fd65ff211107190d8158977091fd7c033776",
        "changes": {
            "src/java/org/apache/commons/lang/WordUtils.java": {
                "old": {
                    "('org.apache.commons.lang#WordUtils', None)": [
                        36,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#WordUtils', None)": [
                        36,
                        38
                    ]
                }
            }
        }
    },
    "5e18fd65ff211107190d8158977091fd7c033776": {
        "authored_data": "2005 Apr 14 06:16",
        "commit.message": "Updated copyright statements for 2005.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@161244 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "4f69e5183a56d6a38a76ebafcb12637c0ecb8f4c",
        "changes": {
            "src/test/org/apache/commons/lang/AllLangTestSuite.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/AllLangTestSuite.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/AllLangTestSuite.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/ArrayUtilsAddTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ArrayUtilsRemoveTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ArrayUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/BitFieldTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/BooleanUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/CharEncodingTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/CharSetUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/CharUtilsPerfTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/CharUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ClassUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/EntitiesPerformanceTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/EntitiesTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/IllegalClassExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/IncompleteArgumentExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/LangTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/NotImplementedExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/NullArgumentExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/NumberRangeTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/NumberUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ObjectUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/RandomStringUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/SerializationUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsEqualsIndexOfTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsIsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsSubstringTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsTrimEmptyTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/UnhandledExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/WordUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/BuilderTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/CompareToBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/DefaultToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/HashCodeBuilderAndEqualsBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/ToStringStyleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enum/Broken1Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken1Enum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken1Enum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken1OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken1OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken1OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken2Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken2Enum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken2Enum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken2OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken2OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken2OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken3Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken3Enum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken3Enum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken3OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken3OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken3OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken4OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken4OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken4OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Broken5OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken5OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Broken5OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/ColorEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ColorEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ColorEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/DummyEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/DummyEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/DummyEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/EnumTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTest.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTest.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/EnumTestSuite.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTestSuite.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTestSuite.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/EnumUtilsTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumUtilsTest.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumUtilsTest.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/Nest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Nest.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/Nest.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/NestBroken.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestBroken.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestBroken.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/NestLinked.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestLinked.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestLinked.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/NestReferenced.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestReferenced.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/NestReferenced.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/ValuedColorEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ValuedColorEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ValuedColorEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/ValuedEnumTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ValuedEnumTest.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/ValuedEnumTest.java",
                    [
                        2
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enums/Broken1Enum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken1OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken2Enum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken2OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken3Enum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken3OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken4OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Broken5OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/ColorEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/DummyEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/EnumEqualsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/EnumTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/EnumTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/EnumUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/Nest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/NestBroken.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/NestLinked.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/NestReferenced.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/OperationEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/ValuedColorEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/NestableErrorTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/NestableExceptionTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/NestableRuntimeExceptionTestCase.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/MathTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/NumberUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/RandomUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableByteTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableFloatTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableIntTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableLongTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableObjectTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableShortTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/InterpolationTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/StrTokenizerTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/TextTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/DateFormatUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/DateUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/DurationFormatUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/FastDateFormatTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/StopWatchTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/TimeTestSuite.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            }
        }
    },
    "4f69e5183a56d6a38a76ebafcb12637c0ecb8f4c": {
        "authored_data": "2005 Apr 14 04:30",
        "commit.message": "Updated copyright statements for 2005.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@161243 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "e0af00ee720e3ae26f33e8ff4c2665529724b8f4",
        "changes": {
            "src/java/org/apache/commons/lang/ArrayUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/BitField.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/BooleanUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharEncoding.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSetUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/Entities.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/IllegalClassException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/IncompleteArgumentException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/IntHashMap.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/NotImplementedException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/NullArgumentException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/NumberRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/NumberUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ObjectUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/RandomStringUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/SerializationException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/SerializationUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/StringEscapeUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/StringPrintWriter.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/SystemUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/UnhandledException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/Validate.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/WordUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/CompareToBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/StandardToStringStyle.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ToStringBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ToStringStyle.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/enum/Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        2
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enum/EnumUtils.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/EnumUtils.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/EnumUtils.java",
                    [
                        2
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enum/ValuedEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        2
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        2
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enums/Enum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/enums/EnumUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/enums/ValuedEnum.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/Nestable.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/NestableDelegate.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/NestableError.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/NestableException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/NestableRuntimeException.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/DoubleRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/FloatRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Fraction.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/IntRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/LongRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/NumberRange.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/NumberUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Range.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/Mutable.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableByte.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableDouble.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableFloat.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableInt.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableLong.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableObject.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableShort.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/MappedMessageFormat.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrBuilder.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrTokenizer.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DateFormatUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DateUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DurationFormatUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/StopWatch.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ]
                }
            }
        }
    },
    "b0053ca69169bf23a8c009095aeecb4e5807d423": {
        "authored_data": "2005 Apr 13 22:36",
        "commit.message": "Removed extra C style parens in return statements (as discussed on commons-dev).\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@161229 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "887d935024ec45d4c22c2676c0c2972c39462fc8",
        "changes": {
            "src/java/org/apache/commons/lang/ArrayUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ArrayUtils', 'contains(Object,Object)')": [
                        1305
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(long,long)')": [
                        1408
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(int,int)')": [
                        1511
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(short,short)')": [
                        1614
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(char,char)')": [
                        1722
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(byte,byte)')": [
                        1825
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(double,double)')": [
                        2032
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(double,double,double)')": [
                        2049
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(float,float)')": [
                        2152
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(boolean,boolean)')": [
                        2255
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ArrayUtils', 'contains(Object,Object)')": [
                        1305
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(long,long)')": [
                        1408
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(int,int)')": [
                        1511
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(short,short)')": [
                        1614
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(char,char)')": [
                        1722
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(byte,byte)')": [
                        1825
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(double,double)')": [
                        2032
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(double,double,double)')": [
                        2049
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(float,float)')": [
                        2152
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'contains(boolean,boolean)')": [
                        2255
                    ]
                }
            },
            "src/java/org/apache/commons/lang/BitField.java": {
                "old": {
                    "('org.apache.commons.lang#BitField', 'getRawValue(int)')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#BitField', 'getRawValue(int)')": [
                        101
                    ]
                }
            },
            "src/java/org/apache/commons/lang/BooleanUtils.java": {
                "old": {
                    "('org.apache.commons.lang#BooleanUtils', 'isTrue(Boolean)')": [
                        87
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'isFalse(Boolean)')": [
                        107
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(boolean)')": [
                        124
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBoolean(Boolean)')": [
                        145
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanDefaultIfNull(Boolean,boolean)')": [
                        165
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBoolean(int)')": [
                        185
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(int)')": [
                        203
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(Integer)')": [
                        226
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(boolean)')": [
                        372
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(boolean)')": [
                        388
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(Boolean)')": [
                        409
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(boolean,int,int)')": [
                        426
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(Boolean,int,int,int)')": [
                        448
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(boolean,Integer,Integer)')": [
                        467
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(Boolean,Integer,Integer,Integer)')": [
                        492
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toString(Boolean,String,String,String)')": [
                        781
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toString(boolean,String,String)')": [
                        853
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'xor(Boolean)')": [
                        925
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#BooleanUtils', 'isTrue(Boolean)')": [
                        87
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'isFalse(Boolean)')": [
                        107
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(boolean)')": [
                        124
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBoolean(Boolean)')": [
                        145
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanDefaultIfNull(Boolean,boolean)')": [
                        165
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBoolean(int)')": [
                        185
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(int)')": [
                        203
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toBooleanObject(Integer)')": [
                        226
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(boolean)')": [
                        372
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(boolean)')": [
                        388
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(Boolean)')": [
                        409
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(boolean,int,int)')": [
                        426
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toInteger(Boolean,int,int,int)')": [
                        448
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(boolean,Integer,Integer)')": [
                        467
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toIntegerObject(Boolean,Integer,Integer,Integer)')": [
                        492
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toString(Boolean,String,String,String)')": [
                        781
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'toString(boolean,String,String)')": [
                        853
                    ],
                    "('org.apache.commons.lang#BooleanUtils', 'xor(Boolean)')": [
                        925
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharRange.java": {
                "old": {
                    "('org.apache.commons.lang#CharRange', 'contains(char)')": [
                        148
                    ],
                    "('org.apache.commons.lang#CharRange', 'contains(CharRange)')": [
                        165,
                        167,
                        171,
                        173
                    ],
                    "('org.apache.commons.lang#CharRange', 'equals(Object)')": [
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharRange', 'contains(char)')": [
                        148
                    ],
                    "('org.apache.commons.lang#CharRange', 'contains(CharRange)')": [
                        165,
                        167,
                        171,
                        173
                    ],
                    "('org.apache.commons.lang#CharRange', 'equals(Object)')": [
                        195
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "('org.apache.commons.lang#CharSet', 'equals(Object)')": [
                        257
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharSet', 'equals(Object)')": [
                        257
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharUtils.java": {
                "old": {
                    "('org.apache.commons.lang#CharUtils', 'toIntValue(char)')": [
                        222
                    ],
                    "('org.apache.commons.lang#CharUtils', 'toIntValue(char,int)')": [
                        244
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAscii(char)')": [
                        406
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiPrintable(char)')": [
                        425
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiControl(char)')": [
                        444
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiAlphaUpper(char)')": [
                        482
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiAlphaLower(char)')": [
                        501
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiNumeric(char)')": [
                        520
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharUtils', 'toIntValue(char)')": [
                        222
                    ],
                    "('org.apache.commons.lang#CharUtils', 'toIntValue(char,int)')": [
                        244
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAscii(char)')": [
                        406
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiPrintable(char)')": [
                        425
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiControl(char)')": [
                        444
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiAlphaUpper(char)')": [
                        482
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiAlphaLower(char)')": [
                        501
                    ],
                    "('org.apache.commons.lang#CharUtils', 'isAsciiNumeric(char)')": [
                        520
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ClassUtils', 'isInnerClass(Class)')": [
                        497
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ClassUtils', 'isInnerClass(Class)')": [
                        497
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ObjectUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ObjectUtils', 'defaultIfNull(Object,Object)')": [
                        86
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'hashCode(Object)')": [
                        132
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'toString(Object)')": [
                        211
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'toString(Object,String)')": [
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ObjectUtils', 'defaultIfNull(Object,Object)')": [
                        86
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'hashCode(Object)')": [
                        132
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'toString(Object)')": [
                        211
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'toString(Object,String)')": [
                        234
                    ]
                }
            },
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtils', 'stripToNull(String)')": [
                        433
                    ],
                    "('org.apache.commons.lang#StringUtils', 'stripToEmpty(String)')": [
                        459
                    ],
                    "('org.apache.commons.lang#StringUtils', 'equals(String,String)')": [
                        669
                    ],
                    "('org.apache.commons.lang#StringUtils', 'equalsIgnoreCase(String,String)')": [
                        694
                    ],
                    "('org.apache.commons.lang#StringUtils', 'contains(String,char)')": [
                        1025
                    ],
                    "('org.apache.commons.lang#StringUtils', 'contains(String,String)')": [
                        1053
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtils', 'stripToNull(String)')": [
                        433
                    ],
                    "('org.apache.commons.lang#StringUtils', 'stripToEmpty(String)')": [
                        459
                    ],
                    "('org.apache.commons.lang#StringUtils', 'equals(String,String)')": [
                        669
                    ],
                    "('org.apache.commons.lang#StringUtils', 'equalsIgnoreCase(String,String)')": [
                        694
                    ],
                    "('org.apache.commons.lang#StringUtils', 'contains(String,char)')": [
                        1025
                    ],
                    "('org.apache.commons.lang#StringUtils', 'contains(String,String)')": [
                        1053
                    ]
                }
            },
            "src/java/org/apache/commons/lang/SystemUtils.java": {
                "old": {
                    "('org.apache.commons.lang#SystemUtils', 'isJavaVersionAtLeast(float)')": [
                        1242
                    ],
                    "('org.apache.commons.lang#SystemUtils', 'isJavaVersionAtLeast(int)')": [
                        1260
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#SystemUtils', 'isJavaVersionAtLeast(float)')": [
                        1242
                    ],
                    "('org.apache.commons.lang#SystemUtils', 'isJavaVersionAtLeast(int)')": [
                        1260
                    ]
                }
            },
            "src/java/org/apache/commons/lang/WordUtils.java": {
                "old": {
                    "('org.apache.commons.lang#WordUtils', None)": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#WordUtils', None)": [
                        117
                    ]
                }
            },
            "src/java/org/apache/commons/lang/enum/Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        137,
                        146
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        137,
                        146
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enums/Enum.java": {
                "old": {
                    "(None, None)": [
                        137,
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        137,
                        146
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'isThrowableNested')": [
                        345
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'isThrowableNested')": [
                        345
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/NestableDelegate.java": {
                "old": {
                    "('org.apache.commons.lang.exception#NestableDelegate', 'getMessage(String)')": [
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#NestableDelegate', 'getMessage(String)')": [
                        160
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/DoubleRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#DoubleRange', 'containsDouble(double)')": [
                        308
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#DoubleRange', 'containsDouble(double)')": [
                        308
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/FloatRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#FloatRange', 'containsFloat(float)')": [
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#FloatRange', 'containsFloat(float)')": [
                        304
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/IntRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#IntRange', 'containsInteger(int)')": [
                        279
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'equals(Object)')": [
                        340
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#IntRange', 'containsInteger(int)')": [
                        279
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'equals(Object)')": [
                        340
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/JVMRandom.java": {
                "old": {
                    "('org.apache.commons.lang.math#JVMRandom', 'nextBoolean')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#JVMRandom', 'nextBoolean')": [
                        139
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/LongRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#LongRange', 'containsLong(long)')": [
                        292
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'equals(Object)')": [
                        353
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#LongRange', 'containsLong(long)')": [
                        292
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'equals(Object)')": [
                        353
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/NumberRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#NumberRange', 'containsNumber(Number)')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#NumberRange', 'containsNumber(Number)')": [
                        172
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Range.java": {
                "old": {
                    "('org.apache.commons.lang.math#Range', 'containsLong(long)')": [
                        201
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsInteger(int)')": [
                        235
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsDouble(double)')": [
                        271
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsFloat(float)')": [
                        307
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#Range', 'containsLong(long)')": [
                        201
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsInteger(int)')": [
                        235
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsDouble(double)')": [
                        271
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsFloat(float)')": [
                        307
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableByte.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableByte', 'compareTo(Object)')": [
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableByte', 'compareTo(Object)')": [
                        183
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableInt.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableInt', 'equals(Object)')": [
                        149
                    ],
                    "('org.apache.commons.lang.mutable#MutableInt', 'compareTo(Object)')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableInt', 'equals(Object)')": [
                        149
                    ],
                    "('org.apache.commons.lang.mutable#MutableInt', 'compareTo(Object)')": [
                        174
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableLong.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableLong', 'compareTo(Object)')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableLong', 'compareTo(Object)')": [
                        174
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableObject.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableObject', 'equals(Object)')": [
                        86
                    ],
                    "('org.apache.commons.lang.mutable#MutableObject', 'hashCode')": [
                        97
                    ],
                    "('org.apache.commons.lang.mutable#MutableObject', 'toString')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableObject', 'equals(Object)')": [
                        86
                    ],
                    "('org.apache.commons.lang.mutable#MutableObject', 'hashCode')": [
                        97
                    ],
                    "('org.apache.commons.lang.mutable#MutableObject', 'toString')": [
                        106
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableShort.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableShort', 'equals(Object)')": [
                        158
                    ],
                    "('org.apache.commons.lang.mutable#MutableShort', 'compareTo(Object)')": [
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableShort', 'equals(Object)')": [
                        158
                    ],
                    "('org.apache.commons.lang.mutable#MutableShort', 'compareTo(Object)')": [
                        183
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DateUtils.java": {
                "old": {
                    "('org.apache.commons.lang.time#DateUtils', 'isSameInstant(Date,Date)')": [
                        188
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'isSameInstant(Calendar,Calendar)')": [
                        206
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#DateUtils', 'isSameInstant(Date,Date)')": [
                        188
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'isSameInstant(Calendar,Calendar)')": [
                        206
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/StopWatch.java": {
                "old": {
                    "('org.apache.commons.lang.time#StopWatch', 'getTime')": [
                        210,
                        216
                    ],
                    "('org.apache.commons.lang.time#StopWatch', 'getSplitTime')": [
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#StopWatch', 'getTime')": [
                        210,
                        216
                    ],
                    "('org.apache.commons.lang.time#StopWatch', 'getSplitTime')": [
                        235
                    ]
                }
            }
        }
    },
    "887d935024ec45d4c22c2676c0c2972c39462fc8": {
        "authored_data": "2005 Apr 11 20:11",
        "commit.message": "In the .text package (not for 2.1):\n- Javadoc nits: missing tags, wrong name in @param, \".\" in 1st line.\n- Refactored magic number \"32\" into static final \"CAPACITY\".\n- Removed extra C-style \"return (expr)\" in return expressions.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@160943 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "fdaa1eb25a032c46acec2e8e4731f587e4263ce0",
        "changes": {
            "src/java/org/apache/commons/lang/text/Interpolation.java": {
                "old": {
                    "('org.apache.commons.lang.text#Interpolation', None)": [
                        36,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#Interpolation', None)": [
                        36,
                        113
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/MappedMessageFormat.java": {
                "new": {
                    "('org.apache.commons.lang.text#MappedMessageFormat', None)": [
                        55
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrBuilder', None)": [
                        83,
                        212,
                        327,
                        494,
                        1093
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'isEmpty')": [
                        226
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'contains(String)')": [
                        1217
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrBuilder', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        88,
                        217,
                        229,
                        499,
                        1098
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'isEmpty')": [
                        232
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'contains(String)')": [
                        1222
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrTokenizer', 'getCSVInstance')": [
                        231
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'getTSVInstance')": [
                        270
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'hasNext')": [
                        545
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'hasPrevious')": [
                        573
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'previousIndex')": [
                        591
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', None)": [
                        605,
                        614,
                        1076,
                        1148,
                        1178,
                        1263
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrTokenizer', None)": [
                        170,
                        187,
                        204,
                        214,
                        233,
                        246,
                        261,
                        275,
                        286,
                        299,
                        615,
                        624,
                        1086,
                        1088,
                        1159,
                        1189,
                        1274
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'getCSVInstance')": [
                        236
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'getTSVInstance')": [
                        278
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'hasNext')": [
                        555
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'hasPrevious')": [
                        583
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'previousIndex')": [
                        601
                    ]
                }
            }
        }
    },
    "fdaa1eb25a032c46acec2e8e4731f587e4263ce0": {
        "authored_data": "2005 Apr 11 00:38",
        "commit.message": "As far as I can tell, this method was in 2.0, so rolling the @since 2.1 back to 2.0. Hopefully this explains why JDiff thought it was a removed and added method signature\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@160809 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "371c34bbea50db863bd53728e0c9c3c79f2034e6",
        "changes": {
            "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        402
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        402
                    ]
                }
            }
        }
    },
    "371c34bbea50db863bd53728e0c9c3c79f2034e6": {
        "authored_data": "2005 Apr 10 23:25",
        "commit.message": "Add StringUtils.defaultIfEmpty\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@160807 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "d5f32c231c74fd8945a7732aa6cb7631b5a82555",
        "changes": {
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtils', None)": [
                        4408,
                        4409,
                        4410
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtils', None)": [
                        4408,
                        4409,
                        4410,
                        4422,
                        4423,
                        4424,
                        4425,
                        4426,
                        4427,
                        4428,
                        4429,
                        4430,
                        4431,
                        4432,
                        4433,
                        4434,
                        4435,
                        4436,
                        4437,
                        4438,
                        4439
                    ],
                    "('org.apache.commons.lang#StringUtils', 'defaultIfEmpty(String,String)')": [
                        4440,
                        4441
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtilsTest', 'testDefault_String')": [
                        1176,
                        1177,
                        1178
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', None)": [
                        1179,
                        1180,
                        1185,
                        1186
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', 'testDefault_StringString')": [
                        1182,
                        1183,
                        1184
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtilsTest', 'testDefault_String')": [
                        1176,
                        1177,
                        1178
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', None)": [
                        1179,
                        1180,
                        1185,
                        1186,
                        1191,
                        1192
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', 'testDefault_StringString')": [
                        1182,
                        1183,
                        1184
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', 'testDefaultIfEmpty_StringString')": [
                        1187,
                        1188,
                        1189,
                        1190
                    ]
                }
            }
        }
    },
    "d5f32c231c74fd8945a7732aa6cb7631b5a82555": {
        "authored_data": "2005 Mar 31 00:56",
        "commit.message": "Removed extra C style parens in return statements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@159551 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "fbe572c3ffdde3ee72a7c4248a19fe7102a910c6",
        "changes": {
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtils', 'isEmpty(String)')": [
                        195
                    ],
                    "('org.apache.commons.lang#StringUtils', 'isNotEmpty(String)')": [
                        213
                    ],
                    "('org.apache.commons.lang#StringUtils', 'clean(String)')": [
                        295
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trim(String)')": [
                        322
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trimToNull(String)')": [
                        349
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trimToEmpty(String)')": [
                        374
                    ],
                    "('org.apache.commons.lang#StringUtils', 'defaultString(String)')": [
                        4400
                    ],
                    "('org.apache.commons.lang#StringUtils', 'defaultString(String,String)')": [
                        4421
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtils', 'isEmpty(String)')": [
                        195
                    ],
                    "('org.apache.commons.lang#StringUtils', 'isNotEmpty(String)')": [
                        213
                    ],
                    "('org.apache.commons.lang#StringUtils', 'clean(String)')": [
                        295
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trim(String)')": [
                        322
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trimToNull(String)')": [
                        349
                    ],
                    "('org.apache.commons.lang#StringUtils', 'trimToEmpty(String)')": [
                        374
                    ],
                    "('org.apache.commons.lang#StringUtils', 'defaultString(String)')": [
                        4400
                    ],
                    "('org.apache.commons.lang#StringUtils', 'defaultString(String,String)')": [
                        4421
                    ]
                }
            }
        }
    }
}