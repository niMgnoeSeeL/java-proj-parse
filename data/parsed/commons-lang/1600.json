{
    "3ee9cc840088762c875a9c02531077279f7c237f": {
        "authored_data": "2018 Aug 26 16:18",
        "commit.message": "Add missing spaces\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "bff752134ba7626ca4cdb11a5a8d743d03af4cd8",
        "changes": {
            "src/main/java/org/apache/commons/lang3/ThreadUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ThreadUtils', None)": [
                        275
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreads(ThreadPredicate)')": [
                        360
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroupPredicate)')": [
                        375
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)')": [
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ThreadUtils', None)": [
                        275
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreads(ThreadPredicate)')": [
                        360
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroupPredicate)')": [
                        375
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)')": [
                        422
                    ]
                }
            }
        }
    },
    "bff752134ba7626ca4cdb11a5a8d743d03af4cd8": {
        "authored_data": "2018 Aug 26 15:32",
        "commit.message": "Use build in methods for comparing numerical values\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "9fb4f47f352dc1c1f5f20de80840d39e1eebb985",
        "changes": {
            "src/main/java/org/apache/commons/lang3/math/Fraction.java": {
                "old": {
                    "('org.apache.commons.lang3.math#Fraction', 'compareTo(Fraction)')": [
                        872,
                        873,
                        874,
                        875,
                        876,
                        877
                    ],
                    "('org.apache.commons.lang3.math#Fraction', None)": [
                        878
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#Fraction', 'compareTo(Fraction)')": [
                        872
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/MemberUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MemberUtils', 'compareParameterTypes(Executable,Executable,Class)')": [
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MemberUtils', 'compareParameterTypes(Executable,Executable,Class)')": [
                        138
                    ]
                }
            }
        }
    },
    "9fb4f47f352dc1c1f5f20de80840d39e1eebb985": {
        "authored_data": "2018 Aug 26 15:25",
        "commit.message": "Identical catch blocks can be combined\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "b1deb442d1a938da8c733fa5d74de5fb120ffe45",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#FieldUtils', None)": [
                        736,
                        738,
                        739
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#FieldUtils', None)": [
                        736
                    ]
                }
            }
        }
    },
    "f013141f60df0bbbd57388c7bdd01a764ddfc1fd": {
        "authored_data": "2018 Aug 24 13:37",
        "commit.message": "Explicit type parameters can be removed\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "487b1a7ec47c624ddada222de8ef92777068117e",
        "changes": {
            "src/main/java/org/apache/commons/lang3/CharSet.java": {
                "old": {
                    "('org.apache.commons.lang3#CharSet', None)": [
                        78,
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharSet', None)": [
                        78,
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ClassUtils', 'hierarchy(Class,Interfaces)')": [
                        1386
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ClassUtils', 'hierarchy(Class,Interfaces)')": [
                        1386
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        906
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        906
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getTypeArguments(ParameterizedType,Class,Map)')": [
                        867
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getTypeArguments(Class,Class,Map)')": [
                        921
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getTypeArguments(ParameterizedType,Class,Map)')": [
                        867
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getTypeArguments(Class,Class,Map)')": [
                        921
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3#ObjectUtilsTest', 'testHashCodeMulti_multiple_likeList')": [
                        210,
                        213,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ObjectUtilsTest', 'testHashCodeMulti_multiple_likeList')": [
                        210,
                        213,
                        216
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectRecursiveGenericInteger')": [
                        436,
                        437,
                        438
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectRecursiveGenericString')": [
                        450,
                        451,
                        452
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectRecursiveGenericInteger')": [
                        436,
                        437,
                        438
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectRecursiveGenericString')": [
                        450,
                        451,
                        452
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testLinkedList')": [
                        68
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testArrayList')": [
                        74
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testCopyOnWriteArrayList')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testLinkedList')": [
                        68
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testArrayList')": [
                        74
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', 'testCopyOnWriteArrayList')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeTest', 'test_toStringExcludeEmptyCollection')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeTest', 'test_toStringExcludeEmptyCollection')": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testLinkedList')": [
                        71
                    ],
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testArrayList')": [
                        76
                    ],
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testCopyOnWriteArrayList')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testLinkedList')": [
                        71
                    ],
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testArrayList')": [
                        76
                    ],
                    "('org.apache.commons.lang3.builder#ToStringStyleConcurrencyTest', 'testCopyOnWriteArrayList')": [
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtilsTest', 'testCreateIfAbsentUncheckedException')": [
                        583
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtilsTest', 'testCreateIfAbsentUncheckedException')": [
                        583
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', None)": [
                        278,
                        282,
                        286,
                        290
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testInvokeMethod')": [
                        444,
                        446,
                        448,
                        450
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testInvokeStaticMethod')": [
                        519,
                        521,
                        523,
                        525
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', None)": [
                        278,
                        282,
                        286,
                        290
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testInvokeMethod')": [
                        444,
                        446,
                        448,
                        450
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testInvokeStaticMethod')": [
                        519,
                        521,
                        523,
                        525
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtilsTest', 'testIsAssignable')": [
                        433
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtilsTest', 'testIsAssignable')": [
                        433
                    ]
                }
            }
        }
    },
    "33bd8349641240def753858ea7809f38650cc662": {
        "authored_data": "2018 Aug 23 17:06",
        "commit.message": "Convert JavaDoc license headers to block comments\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "88b951a227ca8d49df670bbacbd00a2e6c239f3e",
        "changes": {
            "src/main/java/org/apache/commons/lang3/Conversion.java": {
                "old": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/Diff.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/DiffResult.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/Diffable.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/ReflectionDiffBuilder.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/ConversionTest.java": {
                "old": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/DiffResultTest.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/DiffTest.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/ReflectionDiffBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9
                    ]
                }
            }
        }
    },
    "b4609c81e41d678cf03898a7cc4a4660beef0f88": {
        "authored_data": "2018 Aug 23 06:25",
        "commit.message": "LANG-1415: Update Java Language requirement to 1.8\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "d1e72ebede93d73d1a3caf74e391fd83516e0685",
        "changes": {
            "src/test/java/org/apache/commons/lang3/SystemUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3#SystemUtilsTest', 'testIS_JAVA')": [
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ]
                }
            }
        }
    }
}