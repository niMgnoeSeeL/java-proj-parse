{
    "6d8ed9be2caea783ac35c8d8a6e2f397959f9328": {
        "authored_data": "2009 Oct 20 05:35",
        "commit.message": "Switched StringBuffer to StringBuilder whenever a local usage (and not subsequently used in an API) as per LANG-541\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826958 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "7f837535c61f8a2581ed42f09d399f7b07a40cfe",
        "changes": {
            "src/java/org/apache/commons/lang/CharRange.java": {
                "old": {
                    "('org.apache.commons.lang#CharRange', 'toString')": [
                        218
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharRange', 'toString')": [
                        218
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSetUtils.java": {
                "old": {
                    "('org.apache.commons.lang#CharSetUtils', 'squeeze(String,String)')": [
                        94
                    ],
                    "('org.apache.commons.lang#CharSetUtils', 'modify(String,String,boolean)')": [
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharSetUtils', 'squeeze(String,String)')": [
                        94
                    ],
                    "('org.apache.commons.lang#CharSetUtils', 'modify(String,String,boolean)')": [
                        292
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ClassUtils', 'getShortClassName(String)')": [
                        191
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toCanonicalName(String)')": [
                        862
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getCanonicalName(String)')": [
                        1029
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ClassUtils', 'getShortClassName(String)')": [
                        191
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toCanonicalName(String)')": [
                        862
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getCanonicalName(String)')": [
                        1029
                    ]
                }
            },
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtils', 'join(Object,char,int,int)')": [
                        2812
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Object,String,int,int)')": [
                        2901
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,char)')": [
                        2943
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,String)')": [
                        2987
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replace(String,String,String,int)')": [
                        3379
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replaceEach(String,String,String,boolean,int)')": [
                        3614
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replaceChars(String,String,String)')": [
                        3738
                    ],
                    "('org.apache.commons.lang#StringUtils', 'overlay(String,String,int,int)')": [
                        3813
                    ],
                    "('org.apache.commons.lang#StringUtils', 'repeat(String,int)')": [
                        4012
                    ],
                    "('org.apache.commons.lang#StringUtils', 'capitalize(String)')": [
                        4554
                    ],
                    "('org.apache.commons.lang#StringUtils', 'uncapitalize(String)')": [
                        4585
                    ],
                    "('org.apache.commons.lang#StringUtils', 'swapCase(String)')": [
                        4623
                    ],
                    "('org.apache.commons.lang#StringUtils', None)": [
                        5075
                    ],
                    "('org.apache.commons.lang#StringUtils', 'reverse(String)')": [
                        5092
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtils', 'join(Object,char,int,int)')": [
                        2812
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Object,String,int,int)')": [
                        2901
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,char)')": [
                        2943
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,String)')": [
                        2987
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replace(String,String,String,int)')": [
                        3379
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replaceEach(String,String,String,boolean,int)')": [
                        3614
                    ],
                    "('org.apache.commons.lang#StringUtils', 'replaceChars(String,String,String)')": [
                        3738
                    ],
                    "('org.apache.commons.lang#StringUtils', 'overlay(String,String,int,int)')": [
                        3813
                    ],
                    "('org.apache.commons.lang#StringUtils', 'repeat(String,int)')": [
                        4012
                    ],
                    "('org.apache.commons.lang#StringUtils', 'capitalize(String)')": [
                        4554
                    ],
                    "('org.apache.commons.lang#StringUtils', 'uncapitalize(String)')": [
                        4585
                    ],
                    "('org.apache.commons.lang#StringUtils', 'swapCase(String)')": [
                        4623
                    ],
                    "('org.apache.commons.lang#StringUtils', None)": [
                        5075
                    ],
                    "('org.apache.commons.lang#StringUtils', 'reverse(String)')": [
                        5092
                    ]
                }
            },
            "src/java/org/apache/commons/lang/WordUtils.java": {
                "old": {
                    "('org.apache.commons.lang#WordUtils', 'wrap(String,int,String,boolean)')": [
                        175
                    ],
                    "('org.apache.commons.lang#WordUtils', 'capitalize(String,char)')": [
                        281
                    ],
                    "('org.apache.commons.lang#WordUtils', 'uncapitalize(String,char)')": [
                        411
                    ],
                    "('org.apache.commons.lang#WordUtils', 'swapCase(String)')": [
                        457
                    ],
                    "('org.apache.commons.lang#WordUtils', 'abbreviate(String,int,int,String)')": [
                        629
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#WordUtils', 'wrap(String,int,String,boolean)')": [
                        175
                    ],
                    "('org.apache.commons.lang#WordUtils', 'capitalize(String,char)')": [
                        281
                    ],
                    "('org.apache.commons.lang#WordUtils', 'uncapitalize(String,char)')": [
                        411
                    ],
                    "('org.apache.commons.lang#WordUtils', 'swapCase(String)')": [
                        457
                    ],
                    "('org.apache.commons.lang#WordUtils', 'abbreviate(String,int,int,String)')": [
                        629
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/DefaultExceptionContext.java": {
                "old": {
                    "('org.apache.commons.lang.exception#DefaultExceptionContext', 'getFormattedExceptionMessage(String)')": [
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#DefaultExceptionContext', 'getFormattedExceptionMessage(String)')": [
                        90
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/DoubleRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#DoubleRange', 'toString')": [
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#DoubleRange', 'toString')": [
                        424
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/FloatRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#FloatRange', 'toString')": [
                        418
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#FloatRange', 'toString')": [
                        418
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Fraction.java": {
                "old": {
                    "('org.apache.commons.lang.math#Fraction', 'toString')": [
                        905
                    ],
                    "('org.apache.commons.lang.math#Fraction', 'toProperString')": [
                        939,
                        945
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#Fraction', 'toString')": [
                        905
                    ],
                    "('org.apache.commons.lang.math#Fraction', 'toProperString')": [
                        939,
                        945
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/IntRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#IntRange', 'toString')": [
                        392
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#IntRange', 'toString')": [
                        392
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/LongRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#LongRange', 'toString')": [
                        405
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#LongRange', 'toString')": [
                        405
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/NumberRange.java": {
                "old": {
                    "('org.apache.commons.lang.math#NumberRange', 'toString')": [
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#NumberRange', 'toString')": [
                        239
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Range.java": {
                "old": {
                    "('org.apache.commons.lang.math#Range', 'toString')": [
                        425
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#Range', 'toString')": [
                        425
                    ]
                }
            }
        }
    },
    "7f837535c61f8a2581ed42f09d399f7b07a40cfe": {
        "authored_data": "2009 Oct 20 05:18",
        "commit.message": "Adding a StringUtils.repeat(String, String separator, int) method per request in LANG-348\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826955 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "5b601a3d6bb200494c4e8d1b82e6b8953bd4cfb9",
        "changes": {
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "new": {
                    "('org.apache.commons.lang#StringUtils', None)": [
                        4021,
                        4022,
                        4023,
                        4024,
                        4025,
                        4026,
                        4027,
                        4028,
                        4029,
                        4030,
                        4031,
                        4032,
                        4033,
                        4034,
                        4035,
                        4036,
                        4037,
                        4038,
                        4046,
                        4047,
                        4048,
                        4049
                    ],
                    "('org.apache.commons.lang#StringUtils', 'repeat(String,String,int)')": [
                        4039,
                        4040,
                        4041,
                        4042,
                        4043,
                        4044,
                        4045
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang#StringUtilsTest', None)": [
                        1154,
                        1155
                    ],
                    "('org.apache.commons.lang#StringUtilsTest', 'testRepeat_StringStringInt')": [
                        1156,
                        1157,
                        1158,
                        1159,
                        1160,
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166
                    ]
                }
            }
        }
    },
    "5b601a3d6bb200494c4e8d1b82e6b8953bd4cfb9": {
        "authored_data": "2009 Oct 20 04:19",
        "commit.message": "Applying Sebb's patch from LANG-540 making the NumericEntityEscaper class immutable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826947 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "d68da319fab22faa695e0164c5a2180dee07d301",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/NumericEntityEscaper.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', None)": [
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', 'between(int,int)')": [
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', 'outsideOf(int,int)')": [
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', 'between(int,int)')": [
                        47
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', 'outsideOf(int,int)')": [
                        51
                    ]
                }
            }
        }
    },
    "d68da319fab22faa695e0164c5a2180dee07d301": {
        "authored_data": "2009 Oct 20 04:16",
        "commit.message": "Fixing compile error introduced after making variable final but leaving a path in which it can miss getting initialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826946 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "c9a918a842a5ab61d4a85d7ec1925b5d9650480c",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        34,
                        40,
                        41
                    ]
                }
            }
        }
    },
    "c9a918a842a5ab61d4a85d7ec1925b5d9650480c": {
        "authored_data": "2009 Oct 19 04:38",
        "commit.message": "Making private options variable final at Sebb's pointing out of thread safety improvement\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826584 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "bdb8ae03b64a6a8a7692c3f8b35ff6b40b6689ef",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        34
                    ]
                }
            }
        }
    },
    "bdb8ae03b64a6a8a7692c3f8b35ff6b40b6689ef": {
        "authored_data": "2009 Oct 18 20:32",
        "commit.message": "Changing Param to Option. A Parameter is a user supplied value; an Option is a user supplied choice. LANG-507 related. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826518 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "0fd4b3afe14d047c10498f3077393fccc757395c",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        32,
                        34,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'isSet(PARAM)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        32,
                        34,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'isSet(OPTION)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        61
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/translate/UnicodeUnescaperTest.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        39
                    ]
                }
            }
        }
    },
    "0fd4b3afe14d047c10498f3077393fccc757395c": {
        "authored_data": "2009 Oct 18 20:14",
        "commit.message": "Sebb pointed out that the implementation for LANG-507 was not thread safe. Rewriting to pass parameters in to the constructor, but doing so in an experimental way - comments very much desired on whether this makes for a nice API or not\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826514 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "b3cec0c2c33173281925a7a4d61c54fd20af4da1",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        29
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'setEscapingPlus(boolean)')": [
                        31,
                        32
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'isEscapingPlus')": [
                        34,
                        35
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        32,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        41
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'isSet(PARAM)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        61
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/translate/UnicodeUnescaperTest.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        39
                    ]
                }
            }
        }
    },
    "b3cec0c2c33173281925a7a4d61c54fd20af4da1": {
        "authored_data": "2009 Oct 18 12:21",
        "commit.message": "Add missing @Override markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826421 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "b287ebae615cc893884502a90331ae1bcd3ebe77",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/AggregateTranslator.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#AggregateTranslator', None)": [
                        45
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/CodePointTranslator.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#CodePointTranslator', None)": [
                        33
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/EscapeUtils.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#EscapeUtils', None)": [
                        115
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/LookupTranslator.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#LookupTranslator', None)": [
                        56
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/NumericEntityEscaper.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaper', None)": [
                        58
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/NumericEntityUnescaper.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#NumericEntityUnescaper', None)": [
                        32
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/UnescapeUtils.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#UnescapeUtils', None)": [
                        104
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/UnicodeEscaper.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeEscaper', None)": [
                        58
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/translate/UnicodeUnescaper.java": {
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaper', None)": [
                        42
                    ]
                }
            },
            "src/test/org/apache/commons/lang/exception/DefaultExceptionContextTest.java": {
                "new": {
                    "('org.apache.commons.lang.exception#DefaultExceptionContextTest', None)": [
                        38
                    ]
                }
            }
        }
    },
    "b287ebae615cc893884502a90331ae1bcd3ebe77": {
        "authored_data": "2009 Oct 18 12:16",
        "commit.message": "Remove unused imports and throws\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826420 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c634f0c64c55e2a3f3570c13d468b67a707cde2f",
        "changes": {
            "src/test/org/apache/commons/lang/text/translate/NumericEntityEscaperTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testBelow')": [
                        30
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testBetween')": [
                        38
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testAbove')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testBelow')": [
                        27
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testBetween')": [
                        35
                    ],
                    "('org.apache.commons.lang.text.translate#NumericEntityEscaperTest', 'testAbove')": [
                        43
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/translate/UnescapeUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/translate/UnicodeEscaperTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testBelow')": [
                        30
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testBetween')": [
                        38
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testAbove')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testBelow')": [
                        27
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testBetween')": [
                        35
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeEscaperTest', 'testAbove')": [
                        43
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/translate/UnicodeUnescaperTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        31,
                        36
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUuuuu')": [
                        46
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testLessThanFour')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUPlus')": [
                        28,
                        33
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testUuuuu')": [
                        43
                    ],
                    "('org.apache.commons.lang.text.translate#UnicodeUnescaperTest', 'testLessThanFour')": [
                        51
                    ]
                }
            }
        }
    },
    "c634f0c64c55e2a3f3570c13d468b67a707cde2f": {
        "authored_data": "2009 Oct 18 11:40",
        "commit.message": "Constructors, fields and nested classes do not inherit doc comments. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@826413 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "64c615346fa4b9ffc4e2cc8f28691c75fcf5b140",
        "changes": {
            "src/java/org/apache/commons/lang/text/StrBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrBuilder', None)": [
                        2619,
                        2656,
                        2741
                    ]
                }
            }
        }
    }
}