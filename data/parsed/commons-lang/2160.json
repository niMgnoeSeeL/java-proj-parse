{
    "e4c72a5522aabfa6a660088aa9262d849756e464": {
        "authored_data": "2016 Oct 23 17:33",
        "commit.message": "[LANG-1144] \n\nMultiple calls of\norg.apache.commons.lang3.concurrent.LazyInitializer.initialize() are\npossible.",
        "commit.author.name": "Gary Gregory",
        "pcid": "65ed41ff7a8cfb0bbc03620e186382a16e23db56",
        "changes": {
            "src/main/java/org/apache/commons/lang3/concurrent/LazyInitializer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#LazyInitializer', None)": [
                        82
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializer', 'get')": [
                        98,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#LazyInitializer', None)": [
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializer', 'get')": [
                        101,
                        104
                    ]
                }
            }
        }
    },
    "a945ecbbdda782b51d5c2c670345fbf4dffacab7": {
        "authored_data": "2016 Oct 23 17:30",
        "commit.message": "StringUtils#replacePattern: fix source code formatting\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "65ed41ff7a8cfb0bbc03620e186382a16e23db56",
        "changes": {
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'replacePattern(String,String,String)')": [
                        5146
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'replacePattern(String,String,String)')": [
                        5146
                    ]
                }
            }
        }
    },
    "10325422e5a4735aa87a4d47bdb377e09fe963d2": {
        "authored_data": "2016 Oct 23 01:54",
        "commit.message": "LANG-1276: StrBuilder#replaceAll ArrayIndexOutOfBoundsException (closes #200)\n\nAvoid ArrayIndexOutOfBoundsException by keeping variable buf consistent with buffer in StrBuilder#replaceImpl.\n",
        "commit.author.name": "Andy Klimczak",
        "pcid": "e2dbe55d56bd6c1209276050f527d36717e33e1d",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/StrBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrBuilder', 'replaceImpl(StrMatcher,String,int,int,int)')": [
                        2113
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrBuilder', 'replaceImpl(StrMatcher,String,int,int,int)')": [
                        2114
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/text/StrBuilderTest.java": {
                "new": {
                    "('org.apache.commons.lang3.text#StrBuilderTest', 'testReplaceAll_StrMatcher_String')": [
                        900,
                        901,
                        902,
                        903
                    ]
                }
            }
        }
    },
    "e2dbe55d56bd6c1209276050f527d36717e33e1d": {
        "authored_data": "2016 Oct 22 14:39",
        "commit.message": "MethodUtils#invokeMethod(Object object, boolean forceAccess, String methodName, Object[] args, Class<?>[] parameterTypes): do not restore the accessibility of the method object, because Method#setAccessible only modifies the behavior of the AccessibleObject not of the actual method.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "8274993e293a79fc75829df398233915a6387a4b",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'invokeMethod(Object,boolean,String,Object,Class)')": [
                        202,
                        203,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'invokeMethod(Object,boolean,String,Object,Class)')": [
                        202,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testInvokeMethodForceAccessNoArgs')": [
                        766,
                        767,
                        769
                    ]
                }
            }
        }
    },
    "8274993e293a79fc75829df398233915a6387a4b": {
        "authored_data": "2016 Oct 22 12:26",
        "commit.message": "LANG-1216: NumberUtils#isNumber, NumberUtils#isCreateable should return true for \"0.1\"\n\nadd a test\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "8f9271399aca64a6f5afe36d3eec365eb68e310e",
        "changes": {
            "src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang3.math#NumberUtilsTest', 'testIsCreatable')": [
                        1237
                    ]
                }
            }
        }
    },
    "8f9271399aca64a6f5afe36d3eec365eb68e310e": {
        "authored_data": "2016 Oct 22 12:17",
        "commit.message": "fix typo in NumberUtils#isCreatable and NumberUtils#isNumber javadoc\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "91d6bd74fa358fdc8d7cb7681c76c509fd9a8e7d",
        "changes": {
            "src/main/java/org/apache/commons/lang3/math/NumberUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.math#NumberUtils', None)": [
                        1365,
                        1395
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#NumberUtils', None)": [
                        1365,
                        1395
                    ]
                }
            }
        }
    },
    "91d6bd74fa358fdc8d7cb7681c76c509fd9a8e7d": {
        "authored_data": "2016 Oct 21 19:07",
        "commit.message": "LANG-1278: BooleanUtils javadoc issues\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "6423a7665516d738ae50d272e3b4ca72cdb89a9d",
        "changes": {
            "src/main/java/org/apache/commons/lang3/BooleanUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#BooleanUtils', None)": [
                        51,
                        225,
                        308,
                        340,
                        521,
                        639,
                        1029,
                        1030,
                        1031
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#BooleanUtils', None)": [
                        51,
                        225,
                        308,
                        340,
                        521,
                        639
                    ]
                }
            }
        }
    },
    "6423a7665516d738ae50d272e3b4ca72cdb89a9d": {
        "authored_data": "2016 Oct 20 19:51",
        "commit.message": "LANG-1277: StringUtils#getLevenshteinDistance reduce memory consumption\n\nminimal clean-up\n\nadd changes.xml entry\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "103b64a373256feae6ca85f2bf220e7694e48fa4",
        "changes": {
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', None)": [
                        7739,
                        7740,
                        7741,
                        7742,
                        7743
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'getLevenshteinDistance(CharSequence,CharSequence)')": [
                        7771,
                        7772,
                        7773,
                        7774,
                        7775,
                        7776,
                        7777,
                        7802,
                        7809,
                        7814
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', None)": [
                        7739,
                        7740,
                        7741
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'getLevenshteinDistance(CharSequence,CharSequence)')": [
                        7769,
                        7770,
                        7795,
                        7802,
                        7807
                    ]
                }
            }
        }
    }
}