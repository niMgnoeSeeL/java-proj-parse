{
    "8bce2df4211e699419787fde5b71dabb6a43af62": {
        "authored_data": "2002 Sep 18 15:47",
        "commit.message": "change getCause() ExceptionWithoutCause static class:\n- changed signature to match getCause method in JDK 1.4 Exception\n- changed method to return null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137036 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Steven Caswell",
        "pcid": "9b20a5adec803433d2d79db62a09deb52ae3e810",
        "changes": {
            "src/test/org/apache/commons/lang/exception/ExceptionUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtilsTestCase', None)": [
                        126,
                        127,
                        128,
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtilsTestCase', None)": [
                        127,
                        129
                    ]
                }
            }
        }
    },
    "992105bfd3b69d0efc39c04f8df03861a677785c": {
        "authored_data": "2002 Sep 17 22:09",
        "commit.message": "Tidy file layout\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137034 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "93bdcee26259ba0b3c379535fa442671e220b242",
        "changes": {
            "src/java/org/apache/commons/lang/builder/StandardToStringStyle.java": {
                "old": {
                    "(None, None)": [
                        1,
                        55,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        54,
                        66
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ToStringStyle.java": {
                "old": {
                    "(None, None)": [
                        54,
                        55,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        55,
                        75
                    ]
                }
            }
        }
    },
    "93bdcee26259ba0b3c379535fa442671e220b242": {
        "authored_data": "2002 Sep 17 22:07",
        "commit.message": "Tests for initial checkin of ToStringBuilder and assistants\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137033 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "12c32597453bd6e855d96dd9de1cecec90ff8ea2",
        "changes": {
            "src/test/org/apache/commons/lang/builder/BuilderTestSuite.java": {
                "old": {
                    "(None, None)": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        64
                    ],
                    "('org.apache.commons.lang.builder#BuilderTestSuite', 'suite')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ]
                }
            }
        }
    },
    "aea52bdea531f724c47589b2fafce2605161f591": {
        "authored_data": "2002 Sep 17 22:06",
        "commit.message": "Exclude static fields from reflection based builder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137031 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "b1ad52a457a150305cd7b0d9fd016f4f8c2fe2c9",
        "changes": {
            "src/java/org/apache/commons/lang/builder/CompareToBuilder.java": {
                "old": {
                    "(None, None)": [
                        102
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', None)": [
                        131,
                        132,
                        133,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean)')": [
                        161,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ]
                },
                "new": {
                    "(None, None)": [
                        102
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', None)": [
                        131,
                        132,
                        133,
                        134,
                        153,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean)')": [
                        163,
                        164,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "(None, None)": [
                        105
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', None)": [
                        132,
                        133,
                        135,
                        136,
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean)')": [
                        159,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181
                    ]
                },
                "new": {
                    "(None, None)": [
                        105
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', None)": [
                        132,
                        133,
                        134,
                        136,
                        137,
                        154,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean)')": [
                        161,
                        162,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "(None, None)": [
                        105
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object)')": [
                        203
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', None)": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,boolean)')": [
                        224,
                        225
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean)')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ]
                },
                "new": {
                    "(None, None)": [
                        105
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', None)": [
                        168,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        201,
                        202,
                        212,
                        241
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,boolean)')": [
                        199,
                        200
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object)')": [
                        228
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean)')": [
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275
                    ]
                }
            }
        }
    },
    "3468b1f8e0c6075a2d0443f18cdb9aad33f712ba": {
        "authored_data": "2002 Sep 17 09:33",
        "commit.message": "Removed the @see ExtensibleEnum as there is no such class in the\nsystem currently. It was giving a warning in the building of javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137028 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "1369a1bf9e2acd610faae37e6f713f5839767410",
        "changes": {
            "src/java/org/apache/commons/lang/enum/EnumUtils.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/EnumUtils.java",
                    [
                        64,
                        67
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/EnumUtils.java",
                    [
                        66
                    ]
                ]
            }
        }
    }
}