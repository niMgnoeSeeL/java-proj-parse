{
    "bdb5d9723056941a0a29aabc2eaf81b2c96956b5": {
        "authored_data": "2015 Feb 23 20:15",
        "commit.message": "LANG-1086: Remove busy wait from AtomicSafeInitializer.get(). This also fixes #46 from github. Thanks to github user artnaseef.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1661762 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "ffdc4272f4d67e2673910cc3a361144dd34ca22f",
        "changes": {
            "src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', None)": [
                        70
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', 'get')": [
                        76,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', None)": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        77,
                        78
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', 'get')": [
                        84,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrent')": [
                        75,
                        109,
                        110,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrent')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        156,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrentWithException(String,Exception)')": [
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrentOptionallyWithException(boolean,String,Exception)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'createExceptionThrowingInitializer')": [
                        174
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        70,
                        71
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        40,
                        41,
                        56,
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', 'testGetConcurrentWithException')": [
                        36,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', 'createExceptionThrowingInitializer')": [
                        58,
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        273,
                        274
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', None)": [
                        37,
                        40,
                        41,
                        42,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        87,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        170,
                        171,
                        172,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'setUp')": [
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'createExceptionThrowingInitializer')": [
                        69,
                        70
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testExceptionOnInitialize')": [
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testInterruptedWaitingOnInitialize')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testOneThreadWaitingForAnotherToInitialize')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'execTestWithWaitingOnInitialize(boolean)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        87,
                        88
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', None)": [
                        30,
                        31,
                        32,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'setUp')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'createExceptionThrowingInitializer')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'testGetConcurrentWithException')": [
                        59,
                        60,
                        61,
                        62
                    ]
                }
            }
        }
    },
    "813e18ff40a9a788e8b222626456378d3f93fb14": {
        "authored_data": "2015 Jan 23 08:47",
        "commit.message": "Checkstyle: Add missing JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654144 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "4792f854b0194e7083fd00de97d0944011aa5464",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/StrLookup.java": {
                "new": {
                    "('org.apache.commons.lang3.text#StrLookup', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            }
        }
    },
    "4792f854b0194e7083fd00de97d0944011aa5464": {
        "authored_data": "2015 Jan 23 08:45",
        "commit.message": "Checkstyle: Add missing JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654143 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "425d0577398bd071917814d04275ddc423c0815f",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ToStringStyle', None)": [
                        2581
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ToStringStyle', None)": [
                        2580,
                        2581,
                        2582,
                        2583,
                        2584,
                        2585
                    ]
                }
            }
        }
    },
    "425d0577398bd071917814d04275ddc423c0815f": {
        "authored_data": "2015 Jan 23 08:43",
        "commit.message": "Make JavaDoc tool happy by adding missing @return tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654142 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "58320be2fc7b292637cf0105b03d8a7be72c5227",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#MultilineRecursiveToStringStyle', None)": [
                        103,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#MultilineRecursiveToStringStyle', None)": [
                        103,
                        104,
                        106
                    ]
                }
            }
        }
    },
    "58320be2fc7b292637cf0105b03d8a7be72c5227": {
        "authored_data": "2015 Jan 23 08:41",
        "commit.message": "Add some JavaDocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654140 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "6b90fe3a2c6dff71367c3745e927d9e2d09b045d",
        "changes": {
            "src/main/java/org/apache/commons/lang3/JavaVersion.java": {
                "old": {
                    "(None, None)": [
                        190,
                        199,
                        200
                    ]
                },
                "new": {
                    "(None, None)": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210
                    ]
                }
            }
        }
    },
    "6b90fe3a2c6dff71367c3745e927d9e2d09b045d": {
        "authored_data": "2015 Jan 23 08:34",
        "commit.message": "Add missing license header\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654139 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "d8c65c419f70c3fdcf2f9f6e7008be79461e282a",
        "changes": {
            "src/test/java/org/apache/commons/lang3/reflect/testbed/Annotated.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            }
        }
    },
    "ffc38b1f3b35ddfadb942240b9d2f933ec83d1be": {
        "authored_data": "2015 Jan 23 08:25",
        "commit.message": "LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do a left.equals(right) check. This fixes #41 from github. Thanks to Jonathan Baker.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654137 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "3181b407668fa09b83ff80126b5abdfc4074ab9a",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java": {
                "new": {
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,Object,Object)')": [
                        885,
                        886,
                        887,
                        888
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/DiffBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', None)": [
                        324,
                        325,
                        333,
                        334,
                        335
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', 'testObjectsEqual')": [
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', None)": [
                        326,
                        327,
                        328,
                        329,
                        330,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        374,
                        375
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', 'testObjectsSameAndEqual')": [
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', 'testObjectsNotSameButEqual')": [
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilderTest', 'testObjectsNotSameNorEqual')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373
                    ]
                }
            }
        }
    },
    "3181b407668fa09b83ff80126b5abdfc4074ab9a": {
        "authored_data": "2015 Jan 23 08:10",
        "commit.message": "Add an additional test for LANG-1055\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1654135 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "63f1d6b83bc10a2880f5ec17a172fab284d2eff5",
        "changes": {
            "src/test/java/org/apache/commons/lang3/text/StrSubstitutorTest.java": {
                "new": {
                    "('org.apache.commons.lang3.text#StrSubstitutorTest', None)": [
                        593,
                        594,
                        595,
                        602,
                        603,
                        604
                    ],
                    "('org.apache.commons.lang3.text#StrSubstitutorTest', 'testLANG1055')": [
                        596,
                        597,
                        598,
                        599,
                        600,
                        601
                    ]
                }
            }
        }
    }
}