{
    "4a96a5dafeaa6576426100222f7033b7de151c58": {
        "authored_data": "2013 Oct 28 18:33",
        "commit.message": "Add missing JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1536473 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "bf4dabb99884f54eb06e93879270fbfe86d076f0",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java": {
                "new": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', None)": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        74,
                        75,
                        76,
                        77,
                        78
                    ]
                }
            }
        }
    },
    "7494fec3a19b090fbaced76d19bbe7941d576b3b": {
        "authored_data": "2013 Oct 26 02:48",
        "commit.message": "Updating javadoc to not use parseInt as an explanation for why it doesn't support octals larger than \\377\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535915 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "2550d4cfa283603a23283c5495bfab75deff02dc",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            }
        }
    },
    "2550d4cfa283603a23283c5495bfab75deff02dc": {
        "authored_data": "2013 Oct 26 02:45",
        "commit.message": "Rewriting OctalUnescaper as a hand rolled parser (all of 4 characters), instead of trying to handle the conversion via repeated attempts to convert the numbers. This fixes bugs, see LANG-929, and also changes the behaviour for 'illegal' octals such as \\999. Instead of throwing NumberFormatException, it will now ignore them. This seems the better behaviour. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535914 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "6ea7f2f7afcd6d60d62a5cd1392feda3471fc666",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', 'translate(CharSequence,int,Writer)')": [
                        43,
                        44,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', 'translate(CharSequence,int,Writer)')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        60,
                        61
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', None)": [
                        65,
                        68,
                        69
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', 'isOctalDigit(char)')": [
                        66,
                        67
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', 'isZeroToThree(char)')": [
                        70,
                        71
                    ],
                    "(None, None)": [
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/text/translate/OctalUnescaperTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', None)": [
                        72,
                        74
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', 'testOutOfRange')": [
                        75,
                        76,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82,
                        83,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', 'testBetween')": [
                        73,
                        74,
                        75,
                        77,
                        78,
                        79
                    ]
                }
            }
        }
    },
    "6ea7f2f7afcd6d60d62a5cd1392feda3471fc666": {
        "authored_data": "2013 Oct 26 02:14",
        "commit.message": "Applying github pull request https://github.com/apache/commons-lang/pull/5, linked as LANG-928, fixing a bug in OctalEscaper trying to parse octal numbers longer than 3 digits\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535911 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "38f8b88528487efc4e53ac6c91f08fbaaa2a82d6",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/translate/OctalUnescaper.java": {
                "new": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaper', 'translate(CharSequence,int,Writer)')": [
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/text/translate/OctalUnescaperTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', 'testBetween')": [
                        47,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', 'testBetween')": [
                        47,
                        51,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', None)": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.lang3.text.translate#OctalUnescaperTest', 'testOutOfRange')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82,
                        83,
                        84
                    ]
                }
            }
        }
    },
    "38f8b88528487efc4e53ac6c91f08fbaaa2a82d6": {
        "authored_data": "2013 Oct 25 15:25",
        "commit.message": "Validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535763 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "b39f1062587650bc1d6804f87dc66502f6e18474",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        949,
                        951,
                        1117,
                        1153,
                        1168,
                        1183,
                        1202,
                        1638,
                        1665
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterizeWithOwner(Type,Class,Type)')": [
                        1478,
                        1490,
                        1491
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'genericArrayType(Type)')": [
                        1544
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        949,
                        951,
                        1120,
                        1157,
                        1173,
                        1189,
                        1209,
                        1652,
                        1679
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'determineTypeArguments(Class,ParameterizedType)')": [
                        958,
                        959,
                        960
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'normalizeUpperBounds(Type)')": [
                        1125
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getImplicitBounds(TypeVariable)')": [
                        1161
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getImplicitUpperBounds(WildcardType)')": [
                        1178
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'getImplicitLowerBounds(WildcardType)')": [
                        1194
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'typesSatisfyVariables(Map)')": [
                        1214
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterize(Class,Map)')": [
                        1471,
                        1472
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterizeWithOwner(Type,Class,Type)')": [
                        1488,
                        1500,
                        1501,
                        1502,
                        1503
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterizeWithOwner(Type,Class,Map)')": [
                        1519,
                        1520
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'genericArrayType(Type)')": [
                        1558
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'toLongString(TypeVariable)')": [
                        1684
                    ]
                }
            }
        }
    },
    "b39f1062587650bc1d6804f87dc66502f6e18474": {
        "authored_data": "2013 Oct 25 15:07",
        "commit.message": "checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535757 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "70b3504b9fe03f267ce0f97c6ff21de5f5fbd2f3",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        54,
                        55,
                        56,
                        63,
                        64,
                        65,
                        66,
                        67,
                        73,
                        74,
                        75,
                        76,
                        77,
                        83,
                        84,
                        85,
                        99,
                        100,
                        101,
                        102,
                        107,
                        108,
                        109,
                        115,
                        116,
                        117,
                        123,
                        124,
                        125,
                        131,
                        132,
                        133,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        163,
                        164,
                        165,
                        171,
                        172,
                        173,
                        179,
                        180,
                        181,
                        187,
                        188,
                        189,
                        195,
                        196,
                        197,
                        203,
                        204,
                        205,
                        228,
                        229,
                        230,
                        231,
                        232,
                        238,
                        239,
                        240,
                        246,
                        247,
                        248,
                        254,
                        255,
                        256,
                        262,
                        263,
                        264,
                        270,
                        271,
                        272,
                        485,
                        1510,
                        1511,
                        1512,
                        1513,
                        1514,
                        1515
                    ]
                }
            }
        }
    },
    "70b3504b9fe03f267ce0f97c6ff21de5f5fbd2f3": {
        "authored_data": "2013 Oct 25 08:19",
        "commit.message": "Applying Thomas Neidhart's patch for LANG-905; fixing a bug in which EqualsBuilder considers two arrays of the same type to be equal, without considering the contents\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535653 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "4fc5c6b35c1ca02fb0e876d54342c66196aac846",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,String)')": [
                        357,
                        358,
                        359
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,String)')": [
                        358,
                        359,
                        360,
                        362,
                        363,
                        364,
                        365
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        1129,
                        1130
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionArrays')": [
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150
                    ],
                    "(None, None)": [
                        1151,
                        1152
                    ]
                }
            }
        }
    },
    "4fc5c6b35c1ca02fb0e876d54342c66196aac846": {
        "authored_data": "2013 Oct 24 21:23",
        "commit.message": "Applying Sebb's patch from LANG-774 - adding isStarted, isSuspended and isStopped to StopWatch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535555 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "be370cd0ef134bb44fde733e4ee91661a012dae5",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/StopWatch.java": {
                "old": {
                    "('org.apache.commons.lang3.time#StopWatch', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        79,
                        84,
                        134
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'start')": [
                        125,
                        128,
                        133
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'stop')": [
                        149,
                        152,
                        155
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'reset')": [
                        168,
                        169
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'split')": [
                        186,
                        190
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'unsplit')": [
                        207,
                        210
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'suspend')": [
                        227,
                        231
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'resume')": [
                        248,
                        252
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getNanoTime')": [
                        284,
                        286,
                        288
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getSplitNanoTime')": [
                        328
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getStartTime')": [
                        343
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#StopWatch', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        135,
                        140,
                        190,
                        191,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'start')": [
                        181,
                        184,
                        189
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'stop')": [
                        206,
                        209,
                        212
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'reset')": [
                        225,
                        226
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'split')": [
                        243,
                        247
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'unsplit')": [
                        264,
                        267
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'suspend')": [
                        284,
                        288
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'resume')": [
                        305,
                        309
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getNanoTime')": [
                        341,
                        343,
                        345
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getSplitNanoTime')": [
                        385
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'getStartTime')": [
                        400
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'isStarted')": [
                        450,
                        451
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'isSuspended')": [
                        464,
                        465
                    ],
                    "('org.apache.commons.lang3.time#StopWatch', 'isStopped')": [
                        480,
                        481
                    ],
                    "(None, None)": [
                        482,
                        483
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/time/StopWatchTest.java": {
                "new": {
                    "(None, None)": [
                        21,
                        249,
                        250
                    ],
                    "('org.apache.commons.lang3.time#StopWatchTest', None)": [
                        228
                    ],
                    "('org.apache.commons.lang3.time#StopWatchTest', 'testBooleanStates')": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248
                    ]
                }
            }
        }
    },
    "be370cd0ef134bb44fde733e4ee91661a012dae5": {
        "authored_data": "2013 Oct 24 20:54",
        "commit.message": "Applying Thomas' patch from LANG-917 - fixing Arne Burmeister's reported exception when combining custom and choice formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1535547 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "a93703d002bc4850e7adcdfc9b51664fca7b8836",
        "changes": {
            "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java": {
                "old": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormat', 'insertFormats(String,ArrayList)')": [
                        422,
                        423
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormat', 'insertFormats(String,ArrayList)')": [
                        420,
                        421
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java": {
                "new": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testEmbeddedPatternInChoice')": [
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    }
}