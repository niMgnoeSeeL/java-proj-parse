{
    "5df67bf13af9a044f3bf7d8df3bd2daa763843a7": {
        "authored_data": "2016 Nov 17 19:49",
        "commit.message": "Format nit.",
        "commit.author.name": "Gary Gregory",
        "pcid": "050b67d4f88d60e03a57fa5cf2177088b8224092",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FormatCache.java": {
                "new": {
                    "('org.apache.commons.lang3.time#FormatCache', None)": [
                        35
                    ]
                }
            }
        }
    },
    "050b67d4f88d60e03a57fa5cf2177088b8224092": {
        "authored_data": "2016 Nov 17 19:36",
        "commit.message": "Minor formatting.",
        "commit.author.name": "Gary Gregory",
        "pcid": "e6b830bf95f712672cb9e77cd852606cd134c5fc",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java": {
                "new": {
                    "('org.apache.commons.lang3.time#FastDateFormat', None)": [
                        73,
                        84,
                        86,
                        91,
                        96
                    ]
                }
            }
        }
    },
    "e6b830bf95f712672cb9e77cd852606cd134c5fc": {
        "authored_data": "2016 Nov 17 19:27",
        "commit.message": "org.apache.commons.lang3.time.CalendarReflection is no longer needed now\nthat we are on Java 7. Deprecate for now. Might remove depending on\ndiscussion on dev ML.",
        "commit.author.name": "Gary Gregory",
        "pcid": "46c42fcdaa16542b0f167ea429b613fd653e6fc8",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/CalendarReflection.java": {
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', None)": [
                        1295
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', None)": [
                        1295
                    ]
                }
            }
        }
    },
    "46c42fcdaa16542b0f167ea429b613fd653e6fc8": {
        "authored_data": "2016 Nov 17 18:02",
        "commit.message": "Document empty block.",
        "commit.author.name": "Gary Gregory",
        "pcid": "b836907ddbc53d8c47d2e2a6a36a690faa2d82e6",
        "changes": {
            "src/test/java/org/apache/commons/lang3/time/FastDateParserTest.java": {
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParserTest', 'testLang1121')": [
                        676
                    ]
                }
            }
        }
    },
    "b836907ddbc53d8c47d2e2a6a36a690faa2d82e6": {
        "authored_data": "2016 Nov 17 17:51",
        "commit.message": "When writing about the hash code, use 'hash code', the compound 'hashcode' is not a work in English. The text 'hashCode()' is left as in of course.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "cf950e7365848130c5c2d57c871652e6f83e96a8",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilder', None)": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilder', None)": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java": {
                "old": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilder', None)": [
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilder', None)": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/IDKey.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#IDKey', None)": [
                        38,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#IDKey', None)": [
                        38,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/ToStringStyle.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ToStringStyle', None)": [
                        2317
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ToStringStyle', None)": [
                        2317
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/math/Fraction.java": {
                "old": {
                    "('org.apache.commons.lang3.math#Fraction', 'hashCode')": [
                        851
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#Fraction', 'hashCode')": [
                        851
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FastDateFormat.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateFormat', None)": [
                        639,
                        640,
                        641
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateFormat', None)": [
                        639,
                        640,
                        641
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        311,
                        313
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        311,
                        313
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', None)": [
                        640,
                        641,
                        642
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', None)": [
                        640,
                        641,
                        642
                    ]
                }
            }
        }
    },
    "cf950e7365848130c5c2d57c871652e6f83e96a8": {
        "authored_data": "2016 Nov 17 00:48",
        "commit.message": "Change indirect access to static members to direct access.",
        "commit.author.name": "Gary Gregory",
        "pcid": "71a1c49eb3610984173728751b1a5e78ddf40c6f",
        "changes": {
            "src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testBuiltInChoiceFormat')": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testBuiltInChoiceFormat')": [
                        213
                    ]
                }
            }
        }
    },
    "71a1c49eb3610984173728751b1a5e78ddf40c6f": {
        "authored_data": "2016 Nov 17 00:47",
        "commit.message": "Remove unused imports.",
        "commit.author.name": "Gary Gregory",
        "pcid": "23c706ff915c4be7d371d3098fc8de2cc3aa2b67",
        "changes": {
            "src/test/java/org/apache/commons/lang3/time/FastDateParser_MoreOrLessTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            }
        }
    },
    "23c706ff915c4be7d371d3098fc8de2cc3aa2b67": {
        "authored_data": "2016 Nov 17 00:47",
        "commit.message": "Add missing '@Override' annotations.",
        "commit.author.name": "Gary Gregory",
        "pcid": "c9a5e54a7c0b4c0be46940d136677a2c9f052ed7",
        "changes": {
            "src/main/java/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.java": {
                "new": {
                    "('org.apache.commons.lang3.concurrent#AbstractCircuitBreaker', None)": [
                        52,
                        60,
                        68,
                        74,
                        80,
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang3#ArrayUtilsTest', 'testIsSortedComparator')": [
                        4292
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/CharSequenceUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang3#CharSequenceUtilsTest', None)": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/JsonToStringStyleTest.java": {
                "new": {
                    "('org.apache.commons.lang3.builder#JsonToStringStyleTest', 'testNestingPerson')": [
                        232
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreakerTest.java": {
                "new": {
                    "('org.apache.commons.lang3.concurrent#EventCountCircuitBreakerTest', None)": [
                        382
                    ]
                }
            }
        }
    },
    "c9a5e54a7c0b4c0be46940d136677a2c9f052ed7": {
        "authored_data": "2016 Nov 17 00:46",
        "commit.message": "Add final modifier to local variables.",
        "commit.author.name": "Gary Gregory",
        "pcid": "0f87dceb80b432b434dbd81ed4f1ab97c740efc1",
        "changes": {
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'capitalize(String)')": [
                        6635
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'uncapitalize(String)')": [
                        6680
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'swapCase(String)')": [
                        6724
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'getJaroWinklerSimilarity(CharSequence,CharSequence)')": [
                        8174,
                        8175,
                        8179,
                        8180
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'unwrap(String,String)')": [
                        9036,
                        9037,
                        9038
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'unwrap(String,char)')": [
                        9077,
                        9078
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'capitalize(String)')": [
                        6635
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'uncapitalize(String)')": [
                        6680
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'swapCase(String)')": [
                        6724
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'getJaroWinklerSimilarity(CharSequence,CharSequence)')": [
                        8174,
                        8175,
                        8179,
                        8180
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'unwrap(String,String)')": [
                        9036,
                        9037,
                        9038
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'unwrap(String,char)')": [
                        9077,
                        9078
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/Memoizer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#Memoizer', 'compute(I)')": [
                        118,
                        125,
                        134,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#Memoizer', 'compute(I)')": [
                        118,
                        125,
                        134,
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/MemoizerTest.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testOnlyCallComputableOnceIfDoesNotThrowException')": [
                        37,
                        38
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDefaultBehaviourNotToRecalculateExecutionExceptions')": [
                        48,
                        49,
                        50,
                        57
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDoesNotRecalculateWhenSetToFalse')": [
                        66,
                        67,
                        68,
                        75
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDoesRecalculateWhenSetToTrue')": [
                        84,
                        85,
                        86,
                        87,
                        94
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testWhenComputableThrowsRuntimeException')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testWhenComputableThrowsError')": [
                        114,
                        115,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testOnlyCallComputableOnceIfDoesNotThrowException')": [
                        37,
                        38
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDefaultBehaviourNotToRecalculateExecutionExceptions')": [
                        48,
                        49,
                        50,
                        57
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDoesNotRecalculateWhenSetToFalse')": [
                        66,
                        67,
                        68,
                        75
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testDoesRecalculateWhenSetToTrue')": [
                        84,
                        85,
                        86,
                        87,
                        94
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testWhenComputableThrowsRuntimeException')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.lang3.concurrent#MemoizerTest', 'testWhenComputableThrowsError')": [
                        114,
                        115,
                        116
                    ]
                }
            }
        }
    },
    "0f87dceb80b432b434dbd81ed4f1ab97c740efc1": {
        "authored_data": "2016 Nov 17 00:45",
        "commit.message": "Add final modifier to method parameters.",
        "commit.author.name": "Gary Gregory",
        "pcid": "f015fb2b31a5621689a57ce9d2d300e5f32357e1",
        "changes": {
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'abbreviate(String,int,int)')": [
                        7435
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'abbreviate(String,int,int)')": [
                        7435
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setTestTransients(boolean)')": [
                        237
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setTestRecursive(boolean)')": [
                        248
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setReflectUpToClass(Class)')": [
                        259
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setExcludeFields(String)')": [
                        270
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,boolean,String)')": [
                        426
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setTestTransients(boolean)')": [
                        237
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setTestRecursive(boolean)')": [
                        248
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setReflectUpToClass(Class)')": [
                        259
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'setExcludeFields(String)')": [
                        270
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,boolean,String)')": [
                        426
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        154,
                        155,
                        176,
                        188,
                        193,
                        206
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        154,
                        155,
                        176,
                        188,
                        193,
                        206
                    ]
                }
            }
        }
    }
}