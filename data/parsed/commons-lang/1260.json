{
    "c8289bfcc9200ccf832a716cb3f34689c6bc8d83": {
        "authored_data": "2019 Dec 30 18:41",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "0ef55fe145922d334d645e054fc194207de65b8a",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/StopWatch.java": {
                "old": {
                    "('org.apache.commons.lang3.time#StopWatch', None)": [
                        134,
                        135,
                        137,
                        138,
                        139,
                        145,
                        146,
                        150,
                        151,
                        157,
                        169,
                        218,
                        243,
                        265,
                        283,
                        300,
                        316,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        365,
                        392,
                        412,
                        433,
                        457,
                        479,
                        532
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#StopWatch', None)": [
                        134,
                        136,
                        137,
                        143,
                        147,
                        153,
                        165,
                        176,
                        215,
                        240,
                        262,
                        280,
                        297,
                        313,
                        333,
                        334,
                        335,
                        336,
                        345,
                        346,
                        347,
                        348,
                        349,
                        358,
                        385,
                        405,
                        426,
                        450,
                        472,
                        525
                    ]
                }
            }
        }
    },
    "0ef55fe145922d334d645e054fc194207de65b8a": {
        "authored_data": "2019 Dec 27 00:26",
        "commit.message": "Don't generate gratuitous garbage.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "d5948be13f788fddbf384643ae6fbac6cca87a18",
        "changes": {
            "src/main/java/org/apache/commons/lang3/ArrayUtils.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.lang3#ArrayUtils', None)": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getAllFields(Class)')": [
                        202
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getFieldsWithAnnotation(Class,Class)')": [
                        240
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getAllFields(Class)')": [
                        203
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getFieldsWithAnnotation(Class,Class)')": [
                        241
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class,boolean,boolean)')": [
                        881
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class,boolean,boolean)')": [
                        881
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        223,
                        224,
                        234,
                        235
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'normalizeUpperBounds(Type)')": [
                        1152
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        232,
                        233
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'normalizeUpperBounds(Type)')": [
                        1150
                    ]
                }
            }
        }
    },
    "d5948be13f788fddbf384643ae6fbac6cca87a18": {
        "authored_data": "2019 Dec 26 22:51",
        "commit.message": "Use ArrayUtils#EMPTY_STRING_ARRAY instead of creating new empty String arrays.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "84668a2d980316a580030fd64764cb072b520b09",
        "changes": {
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        7510
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        7738
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        7926
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        8025
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        8838
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        7510
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        7738
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        7926
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        8025
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        8838
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        277
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        328
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        277
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        328
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'checkTokenized')": [
                        607,
                        610
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'checkTokenized')": [
                        607,
                        610
                    ]
                }
            }
        }
    },
    "84668a2d980316a580030fd64764cb072b520b09": {
        "authored_data": "2019 Dec 26 21:48",
        "commit.message": "Use Collection#toArray(new T[0]) instead of a presized array as it is faster on modern JVMs.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "fe44a99852719ff842ff5ce08b5a37d9b0a0d7fb",
        "changes": {
            "src/main/java/org/apache/commons/lang3/CharSet.java": {
                "old": {
                    "('org.apache.commons.lang3#CharSet', 'getCharRanges')": [
                        228
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharSet', 'getCharRanges')": [
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        7510
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        7738
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        7926
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        8025
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        8838
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        7510
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        7738
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        7926
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        8025
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        8838
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        277
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        328
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        277
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        328
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/FieldUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getAllFields(Class)')": [
                        202
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getFieldsWithAnnotation(Class,Class)')": [
                        240
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getAllFields(Class)')": [
                        202
                    ],
                    "('org.apache.commons.lang3.reflect#FieldUtils', 'getFieldsWithAnnotation(Class,Class)')": [
                        240
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class,boolean,boolean)')": [
                        881
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class,boolean,boolean)')": [
                        881
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'normalizeUpperBounds(Type)')": [
                        1152
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'normalizeUpperBounds(Type)')": [
                        1152
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'checkTokenized')": [
                        607,
                        610
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'checkTokenized')": [
                        607,
                        610
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.time#DurationFormatUtils', 'lexx(String)')": [
                        567
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#DurationFormatUtils', 'lexx(String)')": [
                        567
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FastDatePrinter.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', 'init')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDatePrinter', 'init')": [
                        163
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/EventCountCircuitBreakerTest.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#EventCountCircuitBreakerTest', None)": [
                        410
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#EventCountCircuitBreakerTest', None)": [
                        410
                    ]
                }
            }
        }
    },
    "fe44a99852719ff842ff5ce08b5a37d9b0a0d7fb": {
        "authored_data": "2019 Dec 26 09:25",
        "commit.message": "CompareToBuilder: Fix checkstyle violation.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "37442639705892348d2cd6d7717fff4d9841ca09",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        288
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        288
                    ]
                }
            }
        }
    },
    "37442639705892348d2cd6d7717fff4d9841ca09": {
        "authored_data": "2019 Dec 26 04:00",
        "commit.message": "Use Objects.requireNonNull() instead of custom check. Minor formatting.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ff05749cdc68fae72f12fcb6e06d41a4528ea4b6",
        "changes": {
            "src/main/java/org/apache/commons/lang3/Functions.java": {
                "old": {
                    "('org.apache.commons.lang3#Functions', 'tryWithResources(FailableRunnable,FailableConsumer,FailableRunnable)')": [
                        436,
                        437,
                        438,
                        439
                    ],
                    "('org.apache.commons.lang3#Functions', 'rethrow(Throwable)')": [
                        517,
                        518,
                        519
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.lang3#Functions', 'tryWithResources(FailableRunnable,FailableConsumer,FailableRunnable)')": [
                        437,
                        438
                    ],
                    "('org.apache.commons.lang3#Functions', 'rethrow(Throwable)')": [
                        516,
                        517
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/Validate.java": {
                "old": {
                    "('org.apache.commons.lang3#Validate', 'notNull(T,String,Object)')": [
                        224,
                        225,
                        226,
                        227
                    ],
                    "('org.apache.commons.lang3#Validate', 'notEmpty(T,String,Object)')": [
                        250,
                        251,
                        252,
                        299,
                        300,
                        301,
                        348,
                        349,
                        350,
                        397,
                        398,
                        399
                    ],
                    "('org.apache.commons.lang3#Validate', 'notBlank(T,String,Object)')": [
                        450,
                        451,
                        452
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.lang3#Validate', 'notNull(T,String,Object)')": [
                        225
                    ],
                    "('org.apache.commons.lang3#Validate', 'notEmpty(T,String,Object)')": [
                        248,
                        295,
                        342,
                        389
                    ],
                    "('org.apache.commons.lang3#Validate', 'notBlank(T,String,Object)')": [
                        440
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/CompareToBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        285,
                        286,
                        287
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        286,
                        287,
                        288
                    ]
                }
            }
        }
    },
    "ff05749cdc68fae72f12fcb6e06d41a4528ea4b6": {
        "authored_data": "2019 Dec 22 11:42",
        "commit.message": "Conversion#binaryToHexDigit(boolean[], int): Simplify implementation by removing redundant conditions.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "670a832d4d78c0206180ec2106a5e09592f65cc0",
        "changes": {
            "src/main/java/org/apache/commons/lang3/Conversion.java": {
                "old": {
                    "('org.apache.commons.lang3#Conversion', 'binaryToHexDigit(boolean,int)')": [
                        314,
                        315,
                        320,
                        326
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#Conversion', 'binaryToHexDigit(boolean,int)')": [
                        314,
                        315,
                        320,
                        326
                    ]
                }
            }
        }
    },
    "670a832d4d78c0206180ec2106a5e09592f65cc0": {
        "authored_data": "2019 Dec 21 22:28",
        "commit.message": "[LANG-1503] Add factory methods to Pair classes with Map.Entry input.\n#454.\n\nAlso adds tests that were not in the PR.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "e910e9c908f4808a524d600737edaeb0ff8c6f0f",
        "changes": {
            "src/main/java/org/apache/commons/lang3/tuple/ImmutablePair.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#ImmutablePair', None)": [
                        83,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePair', None)": [
                        85,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        123,
                        124
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePair', 'of(Map)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/tuple/MutablePair.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#MutablePair', None)": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePair', None)": [
                        61,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        98,
                        99
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePair', 'of(Map)')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/tuple/Pair.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#Pair', None)": [
                        92
                    ],
                    "('org.apache.commons.lang3.tuple#Pair', 'of(L,R)')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.tuple#Pair', None)": [
                        92,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.lang3.tuple#Pair', 'of(L,R)')": [
                        104
                    ],
                    "('org.apache.commons.lang3.tuple#Pair', 'of(Map)')": [
                        119,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/tuple/ImmutablePairTest.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', 'testBasic')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', 'testPairOf')": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', 'testBasic')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', None)": [
                        78,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', 'testPairOfMapEntry')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ],
                    "('org.apache.commons.lang3.tuple#ImmutablePairTest', 'testPairOfObjects')": [
                        146,
                        157,
                        158,
                        159
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/tuple/MutablePairTest.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#MutablePairTest', 'testBasic')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePairTest', 'testPairOf')": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePairTest', 'testBasic')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePairTest', None)": [
                        73,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePairTest', 'testPairOfMapEntry')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.lang3.tuple#MutablePairTest', 'testPairOfObjects')": [
                        119,
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/tuple/PairTest.java": {
                "old": {
                    "('org.apache.commons.lang3.tuple#PairTest', 'testPairOf')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.tuple#PairTest', 'testPairOfMapEntry')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.lang3.tuple#PairTest', None)": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.lang3.tuple#PairTest', 'testPairOfObjects')": [
                        117,
                        126,
                        127,
                        128
                    ]
                }
            }
        }
    },
    "23931d528e829e7f76235b9df0ec03a9d4e93fca": {
        "authored_data": "2019 Dec 21 13:42",
        "commit.message": "Functions Javadoc (#466)\n\n* LANG-1480 getAbbreviatedName refactored to create appropriate length short class names\r\n\r\n* LANG-1480 code fixed for special extreme case \"..\" abbreviated to 1 length should result \"..\" it was throwing exception. Tests are added\r\n\r\n* import changed to avoid wild cards\r\napache master merged into current branch\r\n\r\n* Mutable object import was moved to it's original place\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* some accidental formatting reverted\r\n\r\n* added another test case\r\n\r\n* LANG-1480 fixing JavaDoc documentation as per requested by garydgregory\r\n\r\n* LANG-1480 shortcut implemented, argument renamed, more tests\r\n\r\n* LANG-1480 checkstyle update\r\n\r\n* LANG-1492 tests methods modified to be public\r\n\r\n* LANG-1480 imports rearranged\r\n\r\n* LANG-1480 imports rearranged\r\n\r\n* LANG-1480 imports rearranged\r\n\r\n* javadoc was added that explains why there is a return type for a method that never returns\r\n\r\n* wording changed in comment\r\n\r\n* fixes based on code review by garydgregory\r\n",
        "commit.author.name": "Peter Verhas",
        "pcid": "cb674720a99a4701ac63af9720a62d7ca40cb7ff",
        "changes": {
            "src/main/java/org/apache/commons/lang3/Functions.java": {
                "old": {
                    "('org.apache.commons.lang3#Functions', None)": [
                        494,
                        495,
                        496
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#Functions', None)": [
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514
                    ]
                }
            }
        }
    }
}