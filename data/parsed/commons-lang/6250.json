{
    "4aa1a9cd4cc98cc8caaa306660be6b469a97cbde": {
        "authored_data": "2003 Aug 06 01:44",
        "commit.message": "Minor javadoc change: techinally, \"time zone\" is two words, not one. \nThis also argues for changing statics from *TIMEZONE* to *TIME_ZONE*\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137575 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "76cfb62b92ae3194d6a6b3b5e36d2e4c706ff463",
        "changes": {
            "src/java/org/apache/commons/lang/time/DateFormatUtils.java": {
                "old": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.lang.time#DateFormatUtils', None)": [
                        76,
                        83,
                        90,
                        97,
                        100,
                        106,
                        113,
                        120,
                        129,
                        155,
                        166,
                        177,
                        189,
                        223,
                        227,
                        235,
                        236,
                        237,
                        238,
                        239,
                        271,
                        272,
                        273,
                        274,
                        275,
                        284,
                        285,
                        286,
                        287,
                        288
                    ]
                },
                "new": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.lang.time#DateFormatUtils', None)": [
                        76,
                        83,
                        90,
                        97,
                        100,
                        106,
                        113,
                        120,
                        129,
                        155,
                        166,
                        177,
                        189,
                        223,
                        227,
                        235,
                        236,
                        237,
                        238,
                        239,
                        271,
                        272,
                        273,
                        274,
                        275,
                        284,
                        285,
                        286,
                        287,
                        288
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DateUtils.java": {
                "old": {
                    "(None, None)": [
                        76
                    ],
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        76
                    ],
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        81
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "(None, None)": [
                        84,
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        84,
                        101
                    ]
                }
            }
        }
    },
    "76cfb62b92ae3194d6a6b3b5e36d2e4c706ff463": {
        "authored_data": "2003 Aug 06 00:42",
        "commit.message": "corrected the test of parseCVS with \"h:mm z\" format by replacing the current date/time with a series of calls using hard-coded time values\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137574 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Steven Caswell",
        "pcid": "8b2c1cf865abac77d11b320003d81da8bd778a09",
        "changes": {
            "src/test/org/apache/commons/lang/time/DateUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang.time#DateUtilsTest', 'testParseCVS')": [
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#DateUtilsTest', 'testParseCVS')": [
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454
                    ]
                }
            }
        }
    },
    "8b2c1cf865abac77d11b320003d81da8bd778a09": {
        "authored_data": "2003 Aug 06 00:04",
        "commit.message": "applied Javadoc corrections\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137573 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Steven Caswell",
        "pcid": "f491166adba3816ff1e3b69264a15495ed3fcbe9",
        "changes": {
            "src/java/org/apache/commons/lang/CharRange.java": {
                "old": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharRange', None)": [
                        71,
                        74,
                        76,
                        78,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharRange', None)": [
                        71,
                        74,
                        76,
                        78,
                        81
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "(None, None)": [
                        72
                    ],
                    "('org.apache.commons.lang#CharSet', None)": [
                        76,
                        79,
                        81,
                        83,
                        85,
                        87,
                        105,
                        107,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        72
                    ],
                    "('org.apache.commons.lang#CharSet', None)": [
                        76,
                        79,
                        81,
                        83,
                        85,
                        87,
                        105,
                        107,
                        110
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSetUtils.java": {
                "old": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharSetUtils', None)": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharSetUtils', None)": [
                        100
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/IntRange.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRange', None)": [
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRange', None)": [
                        79
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "(None, None)": [
                        101
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        121,
                        125,
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        101
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        121,
                        125,
                        129
                    ]
                }
            }
        }
    },
    "f491166adba3816ff1e3b69264a15495ed3fcbe9": {
        "authored_data": "2003 Aug 05 21:15",
        "commit.message": "- fixed javadoc typos\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137572 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Steven Caswell",
        "pcid": "70d01514525b49e6e6d8780676a7e4eb713e587e",
        "changes": {
            "src/java/org/apache/commons/lang/time/DateUtils.java": {
                "old": {
                    "(None, None)": [
                        76
                    ],
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        555,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        676
                    ]
                },
                "new": {
                    "(None, None)": [
                        76
                    ],
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        555,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        676
                    ]
                }
            }
        }
    },
    "70d01514525b49e6e6d8780676a7e4eb713e587e": {
        "authored_data": "2003 Aug 05 00:24",
        "commit.message": "Rework Enum JDK1.2 solution to avoid needing to store Class\nin Serialized object.\nAdded more tests, improved performance\nbug 19030\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137571 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "8b1992ee2ffefeaf763477216241a02a80e0522e",
        "changes": {
            "src/java/org/apache/commons/lang/enum/Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        166,
                        189,
                        190,
                        191,
                        219,
                        240,
                        241,
                        242,
                        243,
                        283,
                        285,
                        286,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        319,
                        320,
                        323,
                        346,
                        392,
                        414,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        516,
                        580
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        166,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        223,
                        262,
                        263,
                        264,
                        265,
                        269,
                        270,
                        271,
                        272,
                        288,
                        289,
                        293,
                        295,
                        303,
                        306,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        348,
                        394,
                        416,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        519,
                        583
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enum/ValuedEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        136,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        136
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/EnumTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTest.java",
                    [
                        70
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/EnumTest.java",
                    [
                        70,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        64,
                        99
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        64,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                ]
            }
        }
    },
    "8b1992ee2ffefeaf763477216241a02a80e0522e": {
        "authored_data": "2003 Aug 04 23:52",
        "commit.message": "Rework Functional Enums to work on JDK1.2\nbug 19030\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137570 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "cf7f46f6546b4f7c978584ffca3e18ab97dac0cb",
        "changes": {
            "src/java/org/apache/commons/lang/enum/Enum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        78,
                        79,
                        80,
                        128,
                        162,
                        163,
                        166,
                        167,
                        168,
                        171,
                        172,
                        173,
                        176,
                        179,
                        207,
                        212,
                        267,
                        271,
                        272,
                        275,
                        283,
                        284,
                        285,
                        295,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        476,
                        540,
                        541
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/Enum.java",
                    [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        131,
                        165,
                        166,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        186,
                        189,
                        211,
                        212,
                        219,
                        224,
                        240,
                        241,
                        242,
                        243,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        329,
                        346,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        516,
                        580
                    ]
                ]
            },
            "src/java/org/apache/commons/lang/enum/ValuedEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        136,
                        141,
                        151,
                        152,
                        220,
                        221
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/java/org/apache/commons/lang/enum/ValuedEnum.java",
                    [
                        136,
                        141,
                        151,
                        152,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        232
                    ]
                ]
            },
            "src/test/org/apache/commons/lang/enum/OperationEnum.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        64,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        84
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enum/OperationEnum.java",
                    [
                        64,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        99
                    ]
                ]
            }
        }
    },
    "cf7f46f6546b4f7c978584ffca3e18ab97dac0cb": {
        "authored_data": "2003 Aug 04 19:51",
        "commit.message": "Extra tests inspired by Clover\nbug 22098, from Phil Steitz\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137569 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "30426cf21e4de22096d5fa2eb093cf0e8dc46cdd",
        "changes": {
            "src/test/org/apache/commons/lang/util/ValidateTest.java": {
                "old": {
                    "(None, None)": [
                        70
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyString2')": [
                        281
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsArray1')": [
                        305
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsArray2')": [
                        322
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsCollection1')": [
                        341
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsCollection2')": [
                        360
                    ]
                },
                "new": {
                    "(None, None)": [
                        70
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testIsTrue1')": [
                        101
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testIsTrue2')": [
                        112
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testIsTrue3')": [
                        123
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testIsTrue4')": [
                        134
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testIsTrue5')": [
                        145
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotNull1')": [
                        156
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotNull2')": [
                        167
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyArray1')": [
                        178,
                        184
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyArray2')": [
                        195,
                        201
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyCollection1')": [
                        212,
                        218
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyCollection2')": [
                        231,
                        237
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyMap1')": [
                        250,
                        256
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyMap2')": [
                        269,
                        275
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyString1')": [
                        288,
                        294
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNotEmptyString2')": [
                        302,
                        305,
                        311
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsArray1')": [
                        323,
                        329,
                        330
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsArray2')": [
                        342,
                        348,
                        349
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsCollection1')": [
                        363,
                        369,
                        370
                    ],
                    "('org.apache.commons.lang.util#ValidateTest', 'testNoNullElementsCollection2')": [
                        384,
                        390,
                        391
                    ]
                }
            }
        }
    },
    "30426cf21e4de22096d5fa2eb093cf0e8dc46cdd": {
        "authored_data": "2003 Aug 04 02:01",
        "commit.message": "Extra tests suggested by Clover\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137568 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "8e8b50466bcb8fa150fa74ef13f91511dae68c3f",
        "changes": {
            "src/java/org/apache/commons/lang/math/Fraction.java": {
                "old": {
                    "(None, None)": [
                        69
                    ],
                    "('org.apache.commons.lang.math#Fraction', 'getReducedFraction(int,int)')": [
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.lang.math#Fraction', 'reduce')": [
                        437,
                        438,
                        439
                    ],
                    "('org.apache.commons.lang.math#Fraction', None)": [
                        510
                    ]
                },
                "new": {
                    "(None, None)": [
                        69
                    ],
                    "('org.apache.commons.lang.math#Fraction', None)": [
                        504
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/AbstractRangeTest.java": {
                "old": {
                    "(None, None)": [
                        62
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testToString')": [
                        382
                    ]
                },
                "new": {
                    "(None, None)": [
                        62
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsRange')": [
                        299
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testOverlapsRange')": [
                        329
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testEquals')": [
                        370
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testToString')": [
                        385,
                        386,
                        387
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/DoubleRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRangeTest', 'testToString')": [
                        200
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRangeTest', 'testToString')": [
                        200,
                        201,
                        202
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/FloatRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRangeTest', 'testToString')": [
                        200
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRangeTest', 'testToString')": [
                        200,
                        201,
                        202
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/FractionTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FractionTest', 'testToString')": [
                        848
                    ],
                    "('org.apache.commons.lang.math#FractionTest', 'testToProperString')": [
                        867
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FractionTest', 'testSubtract')": [
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717
                    ],
                    "('org.apache.commons.lang.math#FractionTest', 'testToString')": [
                        860,
                        861,
                        862
                    ],
                    "('org.apache.commons.lang.math#FractionTest', 'testToProperString')": [
                        881,
                        882,
                        883
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/IntRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRangeTest', 'testConstructor2b')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/NumberUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        76
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinLong')": [
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinInt')": [
                        317,
                        318,
                        319,
                        320
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinShort')": [
                        345,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumShort')": [
                        579,
                        580,
                        581,
                        582
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumByte')": [
                        589,
                        590,
                        591,
                        592
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumShort')": [
                        615,
                        616,
                        617,
                        618
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumByte')": [
                        625,
                        626,
                        627,
                        628
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57,
                        78
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', None)": [
                        96,
                        104,
                        105,
                        613,
                        614,
                        624,
                        625,
                        671,
                        672,
                        682,
                        683
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testConstructor')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinLong')": [
                        301,
                        302
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinInt')": [
                        327,
                        328
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinShort')": [
                        353,
                        354
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinDouble')": [
                        386,
                        387
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinFloat')": [
                        419,
                        420
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaxLong')": [
                        449,
                        450
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaxInt')": [
                        479,
                        480
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaxShort')": [
                        509,
                        510
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaxDouble')": [
                        542,
                        543
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaxFloat')": [
                        575,
                        576
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumShort')": [
                        599,
                        600,
                        601,
                        602
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumByte')": [
                        609,
                        610,
                        611,
                        612
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumDouble')": [
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMinimumFloat')": [
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumShort')": [
                        657,
                        658,
                        659,
                        660
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumByte')": [
                        667,
                        668,
                        669,
                        670
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumDouble')": [
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681
                    ],
                    "('org.apache.commons.lang.math#NumberUtilsTest', 'testMaximumFloat')": [
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692
                    ]
                }
            }
        }
    },
    "8e8b50466bcb8fa150fa74ef13f91511dae68c3f": {
        "authored_data": "2003 Aug 04 01:20",
        "commit.message": "Make serialvers consistent\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137567 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "93e3168da1aba3523c1a1006cc8715f81881dd90",
        "changes": {
            "src/java/org/apache/commons/lang/CharRange.java": {
                "old": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharRange', None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.lang#CharRange', None)": [
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "(None, None)": [
                        72
                    ],
                    "('org.apache.commons.lang#CharSet', None)": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        72
                    ],
                    "('org.apache.commons.lang#CharSet', None)": [
                        77
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Fraction.java": {
                "old": {
                    "(None, None)": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        69
                    ],
                    "('org.apache.commons.lang.math#Fraction', None)": [
                        73
                    ]
                }
            }
        }
    },
    "93e3168da1aba3523c1a1006cc8715f81881dd90": {
        "authored_data": "2003 Aug 04 01:14",
        "commit.message": "Rename  includeXxx()  to  containsXxx()\nfor consistency with rest of [lang] and Java\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137566 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "d43b3199020157f47f230f97d626f70846e1e3dc",
        "changes": {
            "src/java/org/apache/commons/lang/math/DoubleRange.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'includesNumber(Number)')": [
                        327,
                        331
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'includesDouble(double)')": [
                        345
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'includesRange(Range)')": [
                        362,
                        366,
                        367
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'overlapsRange(Range)')": [
                        383,
                        384,
                        385
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'containsNumber(Number)')": [
                        327,
                        331
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'containsDouble(double)')": [
                        345
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'containsRange(Range)')": [
                        362,
                        366,
                        367
                    ],
                    "('org.apache.commons.lang.math#DoubleRange', 'overlapsRange(Range)')": [
                        383,
                        384,
                        385
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/FloatRange.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'includesNumber(Number)')": [
                        323,
                        327
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'includesFloat(float)')": [
                        341
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'includesRange(Range)')": [
                        358,
                        362,
                        363
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'overlapsRange(Range)')": [
                        379,
                        380,
                        381
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'containsNumber(Number)')": [
                        323,
                        327
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'containsFloat(float)')": [
                        341
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'containsRange(Range)')": [
                        358,
                        362,
                        363
                    ],
                    "('org.apache.commons.lang.math#FloatRange', 'overlapsRange(Range)')": [
                        379,
                        380,
                        381
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/IntRange.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'includesNumber(Number)')": [
                        298,
                        302
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'includesInteger(int)')": [
                        316
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'includesRange(Range)')": [
                        333,
                        337,
                        338
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'overlapsRange(Range)')": [
                        354,
                        355,
                        356
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'containsNumber(Number)')": [
                        298,
                        302
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'containsInteger(int)')": [
                        316
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'containsRange(Range)')": [
                        333,
                        337,
                        338
                    ],
                    "('org.apache.commons.lang.math#IntRange', 'overlapsRange(Range)')": [
                        354,
                        355,
                        356
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/LongRange.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'includesNumber(Number)')": [
                        305,
                        309
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'includesLong(long)')": [
                        323
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'includesRange(Range)')": [
                        340,
                        344,
                        345
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'overlapsRange(Range)')": [
                        361,
                        362,
                        363
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'containsNumber(Number)')": [
                        305,
                        309
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'containsLong(long)')": [
                        323
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'containsRange(Range)')": [
                        340,
                        344,
                        345
                    ],
                    "('org.apache.commons.lang.math#LongRange', 'overlapsRange(Range)')": [
                        361,
                        362,
                        363
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/NumberRange.java": {
                "old": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#NumberRange', 'includesNumber(Number)')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#NumberRange', 'containsNumber(Number)')": [
                        201
                    ]
                }
            },
            "src/java/org/apache/commons/lang/math/Range.java": {
                "old": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesNumber(Number)')": [
                        206
                    ],
                    "('org.apache.commons.lang.math#Range', None)": [
                        214,
                        248,
                        282,
                        318,
                        360,
                        385,
                        386
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesLong(Number)')": [
                        220,
                        224
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesLong(long)')": [
                        238
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesInteger(Number)')": [
                        254,
                        258
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesInteger(int)')": [
                        272
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesDouble(Number)')": [
                        288,
                        292
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesDouble(double)')": [
                        306
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesFloat(Number)')": [
                        324,
                        328
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesFloat(float)')": [
                        342
                    ],
                    "('org.apache.commons.lang.math#Range', 'includesRange(Range)')": [
                        368,
                        372,
                        373
                    ],
                    "('org.apache.commons.lang.math#Range', 'overlapsRange(Range)')": [
                        398,
                        399,
                        400
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsNumber(Number)')": [
                        206
                    ],
                    "('org.apache.commons.lang.math#Range', None)": [
                        214,
                        248,
                        282,
                        318,
                        360,
                        385,
                        386
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsLong(Number)')": [
                        220,
                        224
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsLong(long)')": [
                        238
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsInteger(Number)')": [
                        254,
                        258
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsInteger(int)')": [
                        272
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsDouble(Number)')": [
                        288,
                        292
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsDouble(double)')": [
                        306
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsFloat(Number)')": [
                        324,
                        328
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsFloat(float)')": [
                        342
                    ],
                    "('org.apache.commons.lang.math#Range', 'containsRange(Range)')": [
                        368,
                        372,
                        373
                    ],
                    "('org.apache.commons.lang.math#Range', 'overlapsRange(Range)')": [
                        398,
                        399,
                        400
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/AbstractRangeTest.java": {
                "old": {
                    "(None, None)": [
                        62
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testIncludesLong')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', None)": [
                        189,
                        190,
                        224,
                        225,
                        259,
                        260
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testIncludesInteger')": [
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testIncludesDouble')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testIncludesFloat')": [
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testIncludesRange')": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324
                    ]
                },
                "new": {
                    "(None, None)": [
                        62
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsLong')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', None)": [
                        189,
                        190,
                        224,
                        225,
                        259,
                        260
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsInteger')": [
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsDouble')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsFloat')": [
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.lang.math#AbstractRangeTest', 'testContainsRange')": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/DoubleRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRangeTest', 'testIncludesNumber')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#DoubleRangeTest', 'testContainsNumber')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/FloatRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRangeTest', 'testIncludesNumber')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#FloatRangeTest', 'testContainsNumber')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/IntRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRangeTest', 'testIncludesNumber')": [
                        151,
                        152,
                        153,
                        155,
                        156,
                        157,
                        158,
                        159,
                        161,
                        162,
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        170,
                        171,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.lang.math#IntRangeTest', 'testIncludesIntegerBig')": [
                        180,
                        182,
                        183
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#IntRangeTest', 'testContainsNumber')": [
                        151,
                        152,
                        153,
                        155,
                        156,
                        157,
                        158,
                        159,
                        161,
                        162,
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        170,
                        171,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.lang.math#IntRangeTest', 'testContainsIntegerBig')": [
                        180,
                        182,
                        183
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/LongRangeTest.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#LongRangeTest', 'testIncludesNumber')": [
                        151,
                        152,
                        153,
                        155,
                        156,
                        157,
                        158,
                        159,
                        161,
                        162,
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        170,
                        171,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.lang.math#LongRangeTest', 'testIncludesLongBig')": [
                        180,
                        182,
                        183
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.lang.math#LongRangeTest', 'testContainsNumber')": [
                        151,
                        152,
                        153,
                        155,
                        156,
                        157,
                        158,
                        159,
                        161,
                        162,
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        170,
                        171,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.lang.math#LongRangeTest', 'testContainsLongBig')": [
                        180,
                        182,
                        183
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/NumberRangeTest.java": {
                "old": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#NumberRangeTest', 'testIncludesNumber')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        178
                    ],
                    "('org.apache.commons.lang.math#NumberRangeTest', 'testIncludesLongBig')": [
                        183,
                        186,
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.lang.math#NumberRangeTest', 'testContainsNumber')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        178
                    ],
                    "('org.apache.commons.lang.math#NumberRangeTest', 'testContainsLongBig')": [
                        183,
                        186,
                        187
                    ]
                }
            }
        }
    }
}