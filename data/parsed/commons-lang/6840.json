{
    "6fdd16815acb4d46bf82f94236e09291aba0ff5b": {
        "authored_data": "2002 Aug 14 21:05",
        "commit.message": "getCause(Throwable): Refactored into two methods which are called\ninternally.  This will allow more cause method names to be added with\nease.\n\ngetCauseUsingWellKnownTypes(Throwable): Extracted from getCause().\n\ngetCauseUsingMethodName(String, Throwable): Extracted from getCause().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136966 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "f7c60dc9f667bbd971d4834b094deafa01078280",
        "changes": {
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCause(Throwable)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCause(Throwable)')": [
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', None)": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCauseUsingWellKnownTypes(Throwable)')": [
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCauseUsingMethodName(String,Throwable)')": [
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "(None, None)": [
                        206
                    ]
                }
            }
        }
    },
    "f740ef88932fe3001f1202584686a6486327cf44": {
        "authored_data": "2002 Aug 13 19:58",
        "commit.message": "getCause(Throwable): Added detection of SQLException and its\ngetNextException() method pointed out by Costin M., Paul Jack, and\nNicola Ken Barozzi.  They've also suggested some more general patterns\nwhich we're discussing the addition of on the\ncommons-dev@jakarta.apache.org list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136964 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "72200fffeb098118bbeeddf8ecacd5a399f39d77",
        "changes": {
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "new": {
                    "(None, None)": [
                        59
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCause(Throwable)')": [
                        113,
                        114,
                        115,
                        116
                    ]
                }
            }
        }
    },
    "72200fffeb098118bbeeddf8ecacd5a399f39d77": {
        "authored_data": "2002 Aug 13 18:19",
        "commit.message": "getCause(Throwable): Adjusted JavaDoc of method to note the return\ntype of the getCause() method it checks for.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136963 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "d5525cc4c0269e12ca8ea518599f0c17f18c56fd",
        "changes": {
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', None)": [
                        88,
                        89,
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', None)": [
                        88,
                        89,
                        90,
                        94,
                        95
                    ]
                }
            }
        }
    },
    "d5525cc4c0269e12ca8ea518599f0c17f18c56fd": {
        "authored_data": "2002 Aug 13 18:17",
        "commit.message": "getCause(Throwable): Perform a softer check on the return type of the\nargument's getCause() method, doing isAssignableFrom() instead of a\nhard memory address comparison.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136962 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "6053ce341fc1f6b4e3c5e2a56535d07fb2bc505d",
        "changes": {
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCause(Throwable)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCause(Throwable)')": [
                        127,
                        128
                    ]
                }
            }
        }
    },
    "6053ce341fc1f6b4e3c5e2a56535d07fb2bc505d": {
        "authored_data": "2002 Aug 13 18:05",
        "commit.message": "Added a utility for examining Throwable objects, as proposed by Costin\n<costinm@covalent.net> and Henri Yandell <bayard@apache.org>.  Comes complete\nwith a full suite of tests for initial functionality.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136961 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "aef23069676deaff4120a60cff9db951d9e2cb54",
        "changes": {
            "src/test/org/apache/commons/lang/exception/ExceptionTestSuite.java": {
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionTestSuite', 'suite')": [
                        91
                    ]
                }
            }
        }
    },
    "1ca31bba23375a480f07be507f0d912aa46b692d": {
        "authored_data": "2002 Aug 11 17:52",
        "commit.message": "CONSTANT: Adjusted documentation, making it into JavaDoc.  Incidently,\nthis constant could use a more descriptive name which better indicates\nits use.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@136957 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Daniel Rall",
        "pcid": "6b2b84f0e79349517b605a88225426ccb2527738",
        "changes": {
            "src/java/org/apache/commons/lang/HashCodeUtils.java": {
                "old": {
                    "(None, None)": [
                        89
                    ],
                    "('org.apache.commons.lang#HashCodeUtils', None)": [
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        89
                    ],
                    "('org.apache.commons.lang#HashCodeUtils', None)": [
                        93,
                        94,
                        95,
                        96
                    ]
                }
            }
        }
    }
}