{
    "56541a7485205c2b46d27fd3004bd096fa89dc76": {
        "authored_data": "2006 May 02 04:58",
        "commit.message": "Fix Javadoc nit: use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@398809 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "5b7e9f59f10e44ce7bebb68117c1755240297608",
        "changes": {
            "src/java/org/apache/commons/lang/time/DateFormatUtils.java": {
                "old": {
                    "('org.apache.commons.lang.time#DateFormatUtils', None)": [
                        119,
                        130,
                        141,
                        153,
                        165,
                        176,
                        187,
                        199,
                        211,
                        223,
                        235,
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#DateFormatUtils', None)": [
                        119,
                        130,
                        141,
                        153,
                        165,
                        176,
                        187,
                        199,
                        211,
                        223,
                        235,
                        248
                    ]
                }
            }
        }
    },
    "5b7e9f59f10e44ce7bebb68117c1755240297608": {
        "authored_data": "2006 May 02 04:56",
        "commit.message": "Fix Javadoc nits.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@398808 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "048e444c840cb81d15e7e81845dadef296122261",
        "changes": {
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        548,
                        890,
                        948,
                        963,
                        986
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        548,
                        890,
                        948,
                        963,
                        986
                    ]
                }
            }
        }
    },
    "048e444c840cb81d15e7e81845dadef296122261": {
        "authored_data": "2006 May 02 04:54",
        "commit.message": "Can't believe that Gary meant for the enums.EnumTest to import the enum.ColorEnum class. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@398807 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "da0e534f156783c7b61979c5ea54f7859d3e0b3d",
        "changes": {
            "src/test/org/apache/commons/lang/enums/EnumTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/org/apache/commons/lang/enums/EnumTest.java",
                    [
                        34
                    ]
                ]
            }
        }
    },
    "da0e534f156783c7b61979c5ea54f7859d3e0b3d": {
        "authored_data": "2006 May 01 06:37",
        "commit.message": "Archimedes Trajano offered another method for the class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@398536 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "79c3898c900ccab9e5ac8f0b85f004720317b610",
        "changes": {
            "src/java/org/apache/commons/lang/text/CompositeFormat.java": {
                "new": {
                    "(None, None)": [
                        21,
                        92,
                        93
                    ],
                    "('org.apache.commons.lang.text#CompositeFormat', None)": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.lang.text#CompositeFormat', 'reformat(String)')": [
                        90,
                        91
                    ]
                }
            },
            "src/test/org/apache/commons/lang/text/CompositeFormatTest.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        107,
                        108
                    ],
                    "('org.apache.commons.lang.text#CompositeFormatTest', 'testUsage')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ]
                }
            }
        }
    },
    "79c3898c900ccab9e5ac8f0b85f004720317b610": {
        "authored_data": "2006 May 01 05:32",
        "commit.message": "Adding unit test for #39410. Implementing fix by switching from using Math.log to Integer.toString to figure out the number of digits. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@398530 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "2f4408d33c1de88bceff83d7ea03e47b3aadacaf",
        "changes": {
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        96,
                        97,
                        98,
                        1286
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        1285,
                        1286
                    ]
                }
            },
            "src/test/org/apache/commons/lang/time/FastDateFormatTest.java": {
                "new": {
                    "('org.apache.commons.lang.time#FastDateFormatTest', None)": [
                        254,
                        255,
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.lang.time#FastDateFormatTest', 'testMilleniumBug')": [
                        256,
                        257,
                        258,
                        259,
                        260,
                        261
                    ]
                }
            }
        }
    },
    "2f4408d33c1de88bceff83d7ea03e47b3aadacaf": {
        "authored_data": "2006 Apr 25 23:15",
        "commit.message": "Applying Pete Gieser's enhancement for the CompareToBuilder - a clone of the EqualsBuilder and HashCodeBuilder fixes previously applied. Bugzilla issue #39398\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@397016 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "8393f10b791c4fd28a1031f0a6427a2c9af04977",
        "changes": {
            "src/java/org/apache/commons/lang/builder/CompareToBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object)')": [
                        137
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean)')": [
                        169
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class)')": [
                        203,
                        215,
                        218
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean)')": [
                        238,
                        244
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        24
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object)')": [
                        140
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean)')": [
                        172
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', None)": [
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        267
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,String)')": [
                        203,
                        204
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        238,
                        250,
                        253
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)')": [
                        274,
                        275,
                        278,
                        282,
                        283
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/CompareToBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', None)": [
                        114
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompare')": [
                        145
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompareTransients')": [
                        149,
                        158,
                        163
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'assertXYZCompareOrder(Object,Object,Object,boolean)')": [
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompare(boolean)')": [
                        180,
                        188,
                        189,
                        190,
                        191,
                        192,
                        198,
                        200
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'assertReflectionCompareContract(Object,Object,Object,boolean)')": [
                        211,
                        214,
                        217,
                        218,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'reflectionCompareSignum(Object,Object,boolean)')": [
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', None)": [
                        114,
                        146,
                        147,
                        229,
                        258
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompare')": [
                        145
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompareExcludeFields')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompareTransients')": [
                        168,
                        177,
                        182
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'assertXYZCompareOrder(Object,Object,Object,boolean,String)')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'testReflectionHierarchyCompare(boolean,String)')": [
                        199,
                        207,
                        208,
                        209,
                        210,
                        211,
                        217,
                        219
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'assertReflectionCompareContract(Object,Object,Object,boolean,String)')": [
                        231,
                        234,
                        237,
                        238,
                        239,
                        243,
                        244
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilderTest', 'reflectionCompareSignum(Object,Object,boolean,String)')": [
                        261
                    ]
                }
            }
        }
    },
    "8393f10b791c4fd28a1031f0a6427a2c9af04977": {
        "authored_data": "2006 Apr 24 07:00",
        "commit.message": "Adding new excludeFields functionality for EqualsBuilder and HashCodeBuilder, as submitted by Pete Gieser, Bugzilla: #39315\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@396461 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "fc9b4cc1d839079cd37380ea6566a7575d9f4900",
        "changes": {
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object)')": [
                        121
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean)')": [
                        145
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class)')": [
                        205,
                        208
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean)')": [
                        236,
                        241
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object)')": [
                        124
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', None)": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        287
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,String)')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean)')": [
                        171
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class)')": [
                        200
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,String)')": [
                        229,
                        230,
                        262,
                        265
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)')": [
                        294,
                        295,
                        297,
                        301,
                        302
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object)')": [
                        150
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,boolean)')": [
                        176
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object)')": [
                        205
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean)')": [
                        237
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class)')": [
                        276,
                        283,
                        286
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean)')": [
                        300,
                        305
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object)')": [
                        153
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', None)": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        294
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,String)')": [
                        177,
                        178
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,boolean)')": [
                        204
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object)')": [
                        233
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean)')": [
                        265
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class,String)')": [
                        305,
                        306,
                        313,
                        316
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)')": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        337,
                        341,
                        342
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java": {
                "new": {
                    "(None, None)": [
                        18,
                        994,
                        995
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilderTest', None)": [
                        960,
                        983,
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilderTest', 'testReflectionEqualsExcludeFields')": [
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979,
                        980,
                        981,
                        982
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/HashCodeBuilderTest.java": {
                "new": {
                    "('org.apache.commons.lang.builder#HashCodeBuilderTest', 'testReflectionHashCodeExcludeFields')": [
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilderTest', None)": [
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466
                    ],
                    "(None, None)": [
                        467,
                        468
                    ]
                }
            }
        }
    },
    "fc9b4cc1d839079cd37380ea6566a7575d9f4900": {
        "authored_data": "2006 Apr 19 06:30",
        "commit.message": "Added new method to allow work-arounds for Java bug 4071957; as specified in issue 34351\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@395153 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "2330a3343cbd0a531afd118451bef83b4a8d49d2",
        "changes": {
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ],
                    "('org.apache.commons.lang#ClassUtils', None)": [
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        640,
                        641
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPublicMethod(Class,String,Class)')": [
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ClassUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        26,
                        27,
                        28,
                        556,
                        557
                    ],
                    "('org.apache.commons.lang#ClassUtilsTest', None)": [
                        527,
                        528,
                        536,
                        537,
                        538,
                        539,
                        540
                    ],
                    "('org.apache.commons.lang#ClassUtilsTest', 'testShowJavaBug')": [
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535
                    ],
                    "('org.apache.commons.lang#ClassUtilsTest', 'testGetPublicMethod')": [
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555
                    ]
                }
            }
        }
    },
    "2330a3343cbd0a531afd118451bef83b4a8d49d2": {
        "authored_data": "2006 Apr 18 07:23",
        "commit.message": "Fixing issue #38569\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@394875 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "4143a12a0e3f7fbfd40a3acd004b48ea0e892794",
        "changes": {
            "src/java/org/apache/commons/lang/Entities.java": {
                "new": {
                    "('org.apache.commons.lang#Entities', 'unescape(String)')": [
                        823,
                        824,
                        825,
                        826,
                        827,
                        828
                    ],
                    "('org.apache.commons.lang#Entities', 'unescape(Writer,String)')": [
                        889,
                        890,
                        891,
                        892,
                        893,
                        894
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        306
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringEscapeUtilsTest', None)": [
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testStandaloneAmphersand')": [
                        308,
                        309,
                        310,
                        311,
                        312
                    ],
                    "(None, None)": [
                        313,
                        314
                    ]
                }
            }
        }
    },
    "4143a12a0e3f7fbfd40a3acd004b48ea0e892794": {
        "authored_data": "2006 Apr 17 19:56",
        "commit.message": "Test the getXxx methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@394763 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "f19304cd06f9ef3b67001b05ea4e10920062df11",
        "changes": {
            "src/test/org/apache/commons/lang/text/CompositeFormatTest.java": {
                "old": {
                    "('org.apache.commons.lang.text#CompositeFormatTest', 'testCompositeFormat')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#CompositeFormatTest', 'testCompositeFormat')": [
                        89,
                        93,
                        94
                    ]
                }
            }
        }
    }
}