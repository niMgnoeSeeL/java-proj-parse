{
    "8338eb2544f0f3f4a6067af7a1416338067a49e3": {
        "authored_data": "2009 Mar 17 14:40",
        "commit.message": "Specify encoding to use; Use better JUnit; Add JCIP annotation depend\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@755269 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "654fb75d80a63fa551ced73c3b652f4120573590",
        "changes": {
            "src/java/org/apache/commons/lang/EnumUtils.java": {
                "old": {
                    "('org.apache.commons.lang#EnumUtils', 'getEnumMap(Class)')": [
                        41,
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#EnumUtils', 'getEnumMap(Class)')": [
                        41,
                        42,
                        43,
                        44
                    ]
                }
            }
        }
    },
    "654fb75d80a63fa551ced73c3b652f4120573590": {
        "authored_data": "2009 Mar 16 03:35",
        "commit.message": "Genericize some more classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754810 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "950def5b6f5fa146ea6035229f3751f224981f5e",
        "changes": {
            "src/java/org/apache/commons/lang/ArrayUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ArrayUtils', None)": [
                        59
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'toMap(Object)')": [
                        236,
                        240
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'subarray(Object,int,int)')": [
                        452
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,Object)')": [
                        3232
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'copyArrayGrow1(Object,Class)')": [
                        3463
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,int,Object)')": [
                        3502
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,int,Object,Class)')": [
                        3773
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ArrayUtils', None)": [
                        59
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'toMap(Object)')": [
                        236,
                        240
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'subarray(Object,int,int)')": [
                        452
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,Object)')": [
                        3232
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'copyArrayGrow1(Object,Class)')": [
                        3463
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,int,Object)')": [
                        3502
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(Object,int,Object,Class)')": [
                        3773
                    ]
                }
            },
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ClassUtils', None)": [
                        72,
                        88,
                        90,
                        91,
                        92,
                        102,
                        107
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getShortClassName(Class)')": [
                        168
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPackageName(Class)')": [
                        223
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getAllInterfaces(Class)')": [
                        285,
                        289,
                        291,
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassNamesToClasses(List)')": [
                        323,
                        327,
                        328,
                        329
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassesToClassNames(List)')": [
                        351,
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isAssignable(Class,Class)')": [
                        401,
                        482
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isAssignable(Class,Class,boolean)')": [
                        437,
                        513
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'primitiveToWrapper(Class)')": [
                        598,
                        599,
                        601
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'primitivesToWrappers(Class)')": [
                        616,
                        625
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'wrapperToPrimitive(Class)')": [
                        648,
                        649
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'wrappersToPrimitives(Class)')": [
                        666,
                        675
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isInnerClass(Class)')": [
                        691
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(ClassLoader,String,boolean)')": [
                        711,
                        713
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(ClassLoader,String)')": [
                        734
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(String)')": [
                        748
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(String,boolean)')": [
                        763
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPublicMethod(Class,String,Class)')": [
                        792,
                        800,
                        804,
                        805
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toCanonicalName(String)')": [
                        841
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toClass(Object)')": [
                        861,
                        867
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getShortCanonicalName(Class)')": [
                        898
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPackageCanonicalName(Class)')": [
                        942
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getCanonicalName(String)')": [
                        1000,
                        1001
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ClassUtils', None)": [
                        72,
                        88,
                        90,
                        91,
                        92,
                        102,
                        107
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getShortClassName(Class)')": [
                        168
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPackageName(Class)')": [
                        223
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getAllInterfaces(Class)')": [
                        285,
                        289,
                        291,
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassNamesToClasses(List)')": [
                        323,
                        327,
                        328,
                        329
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassesToClassNames(List)')": [
                        351,
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isAssignable(Class,Class)')": [
                        401,
                        482
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isAssignable(Class,Class,boolean)')": [
                        437,
                        513
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'primitiveToWrapper(Class)')": [
                        598,
                        599,
                        601
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'primitivesToWrappers(Class)')": [
                        616,
                        625
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'wrapperToPrimitive(Class)')": [
                        648,
                        649
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'wrappersToPrimitives(Class)')": [
                        666,
                        675
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'isInnerClass(Class)')": [
                        691
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(ClassLoader,String,boolean)')": [
                        711,
                        713
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(ClassLoader,String)')": [
                        734
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(String)')": [
                        748
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getClass(String,boolean)')": [
                        763
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPublicMethod(Class,String,Class)')": [
                        792,
                        800,
                        804,
                        805
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toCanonicalName(String)')": [
                        841
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'toClass(Object)')": [
                        861,
                        867
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getShortCanonicalName(Class)')": [
                        898
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPackageCanonicalName(Class)')": [
                        942
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getCanonicalName(String)')": [
                        1000
                    ]
                }
            },
            "src/java/org/apache/commons/lang/Entities.java": {
                "old": {
                    "('org.apache.commons.lang#Entities', None)": [
                        453,
                        485,
                        486,
                        487,
                        501,
                        521,
                        522,
                        531,
                        532
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#Entities', None)": [
                        453,
                        485,
                        486,
                        487,
                        501,
                        521,
                        522,
                        531,
                        532
                    ]
                }
            },
            "src/java/org/apache/commons/lang/IllegalClassException.java": {
                "old": {
                    "('org.apache.commons.lang#IllegalClassException', None)": [
                        61,
                        75
                    ],
                    "('org.apache.commons.lang#IllegalClassException', 'safeGetClassName(Class)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#IllegalClassException', None)": [
                        61,
                        75
                    ],
                    "('org.apache.commons.lang#IllegalClassException', 'safeGetClassName(Class)')": [
                        99
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/CompareToBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,Collection)')": [
                        206
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class)')": [
                        275
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        316,
                        325
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)')": [
                        352
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,Collection)')": [
                        206
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class)')": [
                        275
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionCompare(Object,Object,boolean,Class,String)')": [
                        316,
                        325
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)')": [
                        352
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,Collection)')": [
                        147
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class)')": [
                        223
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,String)')": [
                        253,
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)')": [
                        316
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'append(Object,Object)')": [
                        378
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,Collection)')": [
                        147
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class)')": [
                        223
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionEquals(Object,Object,boolean,Class,String)')": [
                        253,
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)')": [
                        316
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'append(Object,Object)')": [
                        378
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', None)": [
                        105,
                        107,
                        110
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'getRegistry')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)')": [
                        174
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class)')": [
                        308
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class,String)')": [
                        359,
                        365
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,Collection)')": [
                        476
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', None)": [
                        105,
                        107,
                        110
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'getRegistry')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)')": [
                        174
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class)')": [
                        308
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class,String)')": [
                        359,
                        365
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(Object,Collection)')": [
                        476
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString(Object,ToStringStyle,boolean,boolean,Class)')": [
                        286
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toStringExclude(Object,Collection)')": [
                        313
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Collection)')": [
                        326
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Object)')": [
                        343,
                        350
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        385,
                        468
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        522
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'getUpToClass')": [
                        563
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setUpToClass(Class)')": [
                        674
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString')": [
                        690
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString(Object,ToStringStyle,boolean,boolean,Class)')": [
                        286
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toStringExclude(Object,Collection)')": [
                        313
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Collection)')": [
                        326
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Object)')": [
                        343,
                        350
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        385,
                        468
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        522
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'getUpToClass')": [
                        563
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setUpToClass(Class)')": [
                        674
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString')": [
                        690
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ToStringStyle.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ToStringStyle', None)": [
                        136,
                        138,
                        141
                    ],
                    "('org.apache.commons.lang.builder#ToStringStyle', 'getRegistry')": [
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#ToStringStyle', None)": [
                        136,
                        138,
                        141
                    ],
                    "('org.apache.commons.lang.builder#ToStringStyle', 'getRegistry')": [
                        153,
                        154
                    ]
                }
            },
            "src/java/org/apache/commons/lang/reflect/ConstructorUtils.java": {
                "old": {
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeConstructor(Class,Object)')": [
                        84,
                        108,
                        114
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeConstructor(Class,Object,Class)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeExactConstructor(Class,Object)')": [
                        175,
                        199,
                        206
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeExactConstructor(Class,Object,Class)')": [
                        231,
                        232
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'getAccessibleConstructor(Class,Class)')": [
                        258,
                        259,
                        271,
                        272
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'getMatchingAccessibleConstructor(Class,Class)')": [
                        307,
                        308
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeConstructor(Class,Object)')": [
                        84,
                        108,
                        114
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeConstructor(Class,Object,Class)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeExactConstructor(Class,Object)')": [
                        175,
                        199,
                        206
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'invokeExactConstructor(Class,Object,Class)')": [
                        231,
                        232
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'getAccessibleConstructor(Class,Class)')": [
                        258,
                        259,
                        271,
                        272
                    ],
                    "('org.apache.commons.lang.reflect#ConstructorUtils', 'getMatchingAccessibleConstructor(Class,Class)')": [
                        307,
                        308
                    ]
                }
            },
            "src/java/org/apache/commons/lang/reflect/FieldUtils.java": {
                "old": {
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getField(Class,String)')": [
                        59
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getField(Class,String,boolean)')": [
                        77,
                        98,
                        119,
                        122
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getDeclaredField(Class,String)')": [
                        148
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getDeclaredField(Class,String,boolean)')": [
                        163
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readStaticField(Class,String)')": [
                        224
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readStaticField(Class,String,boolean)')": [
                        239
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredStaticField(Class,String)')": [
                        258
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredStaticField(Class,String,boolean)')": [
                        275
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readField(Object,String,boolean)')": [
                        346
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredField(Object,String,boolean)')": [
                        384
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeStaticField(Class,String,Object)')": [
                        432
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeStaticField(Class,String,Object,boolean)')": [
                        447
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredStaticField(Class,String,Object)')": [
                        465
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredStaticField(Class,String,Object,boolean)')": [
                        481
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeField(Object,String,Object,boolean)')": [
                        554
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredField(Object,String,Object,boolean)')": [
                        591
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getField(Class,String)')": [
                        59
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getField(Class,String,boolean)')": [
                        77,
                        98,
                        119,
                        122
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getDeclaredField(Class,String)')": [
                        148
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'getDeclaredField(Class,String,boolean)')": [
                        163
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readStaticField(Class,String)')": [
                        224
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readStaticField(Class,String,boolean)')": [
                        239
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredStaticField(Class,String)')": [
                        258
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredStaticField(Class,String,boolean)')": [
                        275
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readField(Object,String,boolean)')": [
                        346
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'readDeclaredField(Object,String,boolean)')": [
                        384
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeStaticField(Class,String,Object)')": [
                        432
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeStaticField(Class,String,Object,boolean)')": [
                        447
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredStaticField(Class,String,Object)')": [
                        465
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredStaticField(Class,String,Object,boolean)')": [
                        481
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeField(Object,String,Object,boolean)')": [
                        554
                    ],
                    "('org.apache.commons.lang.reflect#FieldUtils', 'writeDeclaredField(Object,String,Object,boolean)')": [
                        591
                    ]
                }
            },
            "src/java/org/apache/commons/lang/reflect/MemberUtils.java": {
                "old": {
                    "('org.apache.commons.lang.reflect#MemberUtils', None)": [
                        57
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'compareParameterTypes(Class,Class,Class)')": [
                        131
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getTotalTransformationCost(Class,Class)')": [
                        144,
                        145,
                        148
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getObjectTransformationCost(Class,Class)')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getPrimitivePromotionCost(Class,Class)')": [
                        200,
                        201,
                        203
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.reflect#MemberUtils', None)": [
                        57
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'compareParameterTypes(Class,Class,Class)')": [
                        131
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getTotalTransformationCost(Class,Class)')": [
                        144,
                        145,
                        148
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getObjectTransformationCost(Class,Class)')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.lang.reflect#MemberUtils', 'getPrimitivePromotionCost(Class,Class)')": [
                        200,
                        201,
                        203
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrSubstitutor.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrSubstitutor', 'substitute(StrBuilder,int,int,List)')": [
                        536,
                        578
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', 'checkCyclicSubstitution(String,List)')": [
                        621
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrSubstitutor', 'substitute(StrBuilder,int,int,List)')": [
                        536,
                        578
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', 'checkCyclicSubstitution(String,List)')": [
                        621
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/FastDateFormat.java": {
                "old": {
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getInstance(String,TimeZone,Locale)')": [
                        214
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getDateInstance(int,TimeZone,Locale)')": [
                        281,
                        292
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getTimeInstance(int,TimeZone,Locale)')": [
                        366,
                        374
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getDateTimeInstance(int,int,TimeZone,Locale)')": [
                        460,
                        469
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getTimeZoneDisplay(TimeZone,boolean,int,Locale)')": [
                        498
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'init')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'parsePattern')": [
                        577,
                        579
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#FastDateFormat', None)": [
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getInstance(String,TimeZone,Locale)')": [
                        214
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getDateInstance(int,TimeZone,Locale)')": [
                        281,
                        292
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getTimeInstance(int,TimeZone,Locale)')": [
                        366,
                        374
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getDateTimeInstance(int,int,TimeZone,Locale)')": [
                        460,
                        469
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'getTimeZoneDisplay(TimeZone,boolean,int,Locale)')": [
                        498
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'init')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.lang.time#FastDateFormat', 'parsePattern')": [
                        577,
                        579
                    ]
                }
            }
        }
    },
    "950def5b6f5fa146ea6035229f3751f224981f5e": {
        "authored_data": "2009 Mar 16 02:11",
        "commit.message": "Genericize some more classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754808 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "9aa057fea0fbb315cfda307ac6ccc5bc5b643eff",
        "changes": {
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ClassUtils', 'getAllSuperclasses(Class)')": [
                        259,
                        263,
                        264
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ClassUtils', 'getAllSuperclasses(Class)')": [
                        259,
                        263,
                        264
                    ]
                }
            },
            "src/java/org/apache/commons/lang/NotImplementedException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.lang#NotImplementedException', None)": [
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.lang#NotImplementedException', None)": [
                        106
                    ]
                }
            },
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'addCauseMethodName(String)')": [
                        124
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'removeCauseMethodName(String)')": [
                        143
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'toArray(List)')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCauseMethodNameList')": [
                        224,
                        226
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCause(Throwable)')": [
                        346
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'isNestedThrowable(Throwable)')": [
                        465
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        536,
                        537
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getThrowableList(Throwable)')": [
                        559,
                        560
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfThrowable(Throwable,Class)')": [
                        583
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfThrowable(Throwable,Class,int)')": [
                        606
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfType(Throwable,Class)')": [
                        626
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfType(Throwable,Class,int)')": [
                        650
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOf(Throwable,Class,int,boolean)')": [
                        665
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        801,
                        802,
                        804,
                        818
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'removeCommonFrames(List,List)')": [
                        829,
                        838,
                        839
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        924
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getStackFrameList(Throwable)')": [
                        943,
                        947
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'addCauseMethodName(String)')": [
                        124
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'removeCauseMethodName(String)')": [
                        143
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'toArray(List)')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getCauseMethodNameList')": [
                        224,
                        226
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCause(Throwable)')": [
                        346
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'isNestedThrowable(Throwable)')": [
                        465
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getThrowables(Throwable)')": [
                        536,
                        537
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getThrowableList(Throwable)')": [
                        559,
                        560
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfThrowable(Throwable,Class)')": [
                        583
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfThrowable(Throwable,Class,int)')": [
                        606
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfType(Throwable,Class)')": [
                        626
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOfType(Throwable,Class,int)')": [
                        650
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'indexOf(Throwable,Class,int,boolean)')": [
                        665
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        801,
                        802,
                        804,
                        818
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'removeCommonFrames(List,List)')": [
                        829,
                        838,
                        839
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getStackFrames(String)')": [
                        924
                    ],
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getStackFrameList(Throwable)')": [
                        943,
                        947
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java": {
                "old": {
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', None)": [
                        81,
                        111,
                        123
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'applyPattern(String)')": [
                        150,
                        151,
                        200,
                        201
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'getFormat(String)')": [
                        261
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'insertFormats(String,ArrayList)')": [
                        350,
                        370
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'containsElements(Collection)')": [
                        470,
                        474
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', None)": [
                        81,
                        111,
                        123
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'applyPattern(String)')": [
                        150,
                        151,
                        200,
                        201
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'getFormat(String)')": [
                        261
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'insertFormats(String,ArrayList)')": [
                        350,
                        370
                    ],
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', 'containsElements(Collection)')": [
                        470,
                        474
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrTokenizer', None)": [
                        88
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'next')": [
                        532
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'previous')": [
                        563
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'set(Object)')": [
                        593
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'add(Object)')": [
                        602
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrTokenizer', None)": [
                        88
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'next')": [
                        532
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'previous')": [
                        563
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'set(String)')": [
                        593
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'add(String)')": [
                        602
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DateUtils.java": {
                "old": {
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        264,
                        1568,
                        1599,
                        1604
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Date,int)')": [
                        928
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Calendar,int)')": [
                        961
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Object,int)')": [
                        1052
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#DateUtils', None)": [
                        264,
                        1568,
                        1599,
                        1604
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Date,int)')": [
                        928
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Calendar,int)')": [
                        961
                    ],
                    "('org.apache.commons.lang.time#DateUtils', 'iterator(Object,int)')": [
                        1052
                    ]
                }
            },
            "src/java/org/apache/commons/lang/time/DurationFormatUtils.java": {
                "old": {
                    "('org.apache.commons.lang.time#DurationFormatUtils', None)": [
                        488
                    ],
                    "('org.apache.commons.lang.time#DurationFormatUtils', 'lexx(String)')": [
                        492,
                        501,
                        543
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.time#DurationFormatUtils', None)": [
                        488
                    ],
                    "('org.apache.commons.lang.time#DurationFormatUtils', 'lexx(String)')": [
                        492,
                        501,
                        543
                    ]
                }
            }
        }
    },
    "9aa057fea0fbb315cfda307ac6ccc5bc5b643eff": {
        "authored_data": "2009 Mar 16 02:11",
        "commit.message": "Add test with empty string array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754806 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "e0914986c41d6feb574a2db381ec7f358cb63219",
        "changes": {
            "src/test/org/apache/commons/lang/time/DateUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang.time#DateUtilsTest', 'testParseDate')": [
                        288,
                        289,
                        290
                    ],
                    "('org.apache.commons.lang.time#DateUtilsTest', None)": [
                        291
                    ]
                }
            }
        }
    },
    "e0914986c41d6feb574a2db381ec7f358cb63219": {
        "authored_data": "2009 Mar 16 02:08",
        "commit.message": "Byte.valueOf() is definitely faster than new Byte()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754805 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "909dd449490c1069fd0f5e574710940317ebe47b",
        "changes": {
            "src/java/org/apache/commons/lang/math/NumberUtils.java": {
                "old": {
                    "('org.apache.commons.lang.math#NumberUtils', None)": [
                        59,
                        61,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#NumberUtils', None)": [
                        59,
                        61,
                        63
                    ]
                }
            }
        }
    },
    "909dd449490c1069fd0f5e574710940317ebe47b": {
        "authored_data": "2009 Mar 16 02:06",
        "commit.message": "Byte.valueOf() is definitely faster than new Byte()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754804 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "64dfea8d862246dba831fac5f6c073422c220db4",
        "changes": {
            "src/java/org/apache/commons/lang/ArrayUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ArrayUtils', 'toObject(byte)')": [
                        2606
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(byte,int,byte)')": [
                        3604
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ArrayUtils', 'toObject(byte)')": [
                        2606
                    ],
                    "('org.apache.commons.lang#ArrayUtils', 'add(byte,int,byte)')": [
                        3604
                    ]
                }
            },
            "src/java/org/apache/commons/lang/mutable/MutableByte.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableByte', 'getValue')": [
                        76
                    ],
                    "('org.apache.commons.lang.mutable#MutableByte', 'toByte')": [
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableByte', 'getValue')": [
                        76
                    ],
                    "('org.apache.commons.lang.mutable#MutableByte', 'toByte')": [
                        162
                    ]
                }
            },
            "src/test/org/apache/commons/lang/ArrayUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToPrimitive_byte')": [
                        2111,
                        2112,
                        2116
                    ],
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToPrimitive_byte_byte')": [
                        2130,
                        2131,
                        2137,
                        2138
                    ],
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToObject_byte')": [
                        2150,
                        2151
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToPrimitive_byte')": [
                        2111,
                        2112,
                        2116
                    ],
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToPrimitive_byte_byte')": [
                        2130,
                        2131,
                        2137,
                        2138
                    ],
                    "('org.apache.commons.lang#ArrayUtilsTest', 'testToObject_byte')": [
                        2150,
                        2151
                    ]
                }
            },
            "src/test/org/apache/commons/lang/math/RangeTest.java": {
                "old": {
                    "('org.apache.commons.lang.math#RangeTest', None)": [
                        55,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#RangeTest', None)": [
                        55,
                        60
                    ]
                }
            },
            "src/test/org/apache/commons/lang/mutable/MutableByteTest.java": {
                "old": {
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testConstructors')": [
                        50
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testGetSet')": [
                        61,
                        65,
                        67,
                        69,
                        73
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testEquals')": [
                        97
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testHashCode')": [
                        109
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testCompareTo')": [
                        123
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testToByte')": [
                        144,
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testConstructors')": [
                        50
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testGetSet')": [
                        61,
                        65,
                        67,
                        69,
                        73
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testEquals')": [
                        97
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testHashCode')": [
                        109
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testCompareTo')": [
                        123
                    ],
                    "('org.apache.commons.lang.mutable#MutableByteTest', 'testToByte')": [
                        144,
                        145
                    ]
                }
            }
        }
    },
    "64dfea8d862246dba831fac5f6c073422c220db4": {
        "authored_data": "2009 Mar 15 22:36",
        "commit.message": "Fixing javadoc to not reference removed method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754782 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "f3a2199a83826271d2d3a62366c91ac977c1d1cf",
        "changes": {
            "src/java/org/apache/commons/lang/math/NumberUtils.java": {
                "old": {
                    "('org.apache.commons.lang.math#NumberUtils', None)": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.math#NumberUtils', None)": [
                        79
                    ]
                }
            }
        }
    },
    "f3a2199a83826271d2d3a62366c91ac977c1d1cf": {
        "authored_data": "2009 Mar 15 16:27",
        "commit.message": "Genericize\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754686 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c06b74202d51d0717de1ee3316f3349d53b11642",
        "changes": {
            "src/java/org/apache/commons/lang/text/StrBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrBuilder', 'appendAll(Collection)')": [
                        949,
                        951
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendAll(Iterator)')": [
                        968
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendWithSeparators(Collection,String)')": [
                        1010,
                        1013
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendWithSeparators(Iterator,String)')": [
                        1034
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'insert(int,String)')": [
                        1306
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', None)": [
                        2579
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrBuilder', 'appendAll(Collection)')": [
                        949,
                        951
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendAll(Iterator)')": [
                        968
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendWithSeparators(Collection,String)')": [
                        1010,
                        1013
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'appendWithSeparators(Iterator,String)')": [
                        1034
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', None)": [
                        1295,
                        2580
                    ],
                    "('org.apache.commons.lang.text#StrBuilder', 'insert(int,String)')": [
                        1307
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrTokenizer', 'getTokenList')": [
                        458,
                        460
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'checkTokenized')": [
                        615,
                        616,
                        618,
                        619
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'tokenize(char,int,int)')": [
                        644,
                        646,
                        649
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'addToken(List,String)')": [
                        671
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'readNextToken(char,int,int,StrBuilder,List)')": [
                        694
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'readWithQuotes(char,int,int,StrBuilder,List,int,int)')": [
                        745
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrTokenizer', 'getTokenList')": [
                        458,
                        460
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'checkTokenized')": [
                        615,
                        616,
                        618,
                        619
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'tokenize(char,int,int)')": [
                        644,
                        646,
                        649
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'addToken(List,String)')": [
                        671
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'readNextToken(char,int,int,StrBuilder,List)')": [
                        694
                    ],
                    "('org.apache.commons.lang.text#StrTokenizer', 'readWithQuotes(char,int,int,StrBuilder,List,int,int)')": [
                        745
                    ]
                }
            }
        }
    },
    "c06b74202d51d0717de1ee3316f3349d53b11642": {
        "authored_data": "2009 Mar 15 16:11",
        "commit.message": "Genericize; remove invalid Javadoc reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754682 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "ebfe3a9c1d2b8bca58fa3f931d3ee5ae79c1b704",
        "changes": {
            "src/java/org/apache/commons/lang/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringUtils', 'substringsBetween(String,String,String)')": [
                        1992,
                        2010
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        2289,
                        2333
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitWorker(String,char,boolean)')": [
                        2423,
                        2444
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        2550,
                        2620
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        2696,
                        2717
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,char)')": [
                        2928
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,String)')": [
                        2972
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Collection,char)')": [
                        3018
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Collection,String)')": [
                        3039
                    ],
                    "('org.apache.commons.lang#StringUtils', None)": [
                        5582
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringUtils', 'substringsBetween(String,String,String)')": [
                        1992,
                        2010
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        2289,
                        2333
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitWorker(String,char,boolean)')": [
                        2423,
                        2444
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        2550,
                        2620
                    ],
                    "('org.apache.commons.lang#StringUtils', 'splitByCharacterType(String,boolean)')": [
                        2696,
                        2717
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,char)')": [
                        2928
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Iterator,String)')": [
                        2972
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Collection,char)')": [
                        3018
                    ],
                    "('org.apache.commons.lang#StringUtils', 'join(Collection,String)')": [
                        3039
                    ]
                }
            }
        }
    },
    "ebfe3a9c1d2b8bca58fa3f931d3ee5ae79c1b704": {
        "authored_data": "2009 Mar 15 15:27",
        "commit.message": "Genericize; add final qualifier to private var\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@754678 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "d85758d68870e524fb62e68957f1eb2fff6c3fae",
        "changes": {
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "('org.apache.commons.lang#CharSet', None)": [
                        82,
                        95
                    ],
                    "('org.apache.commons.lang#CharSet', 'getCharRanges')": [
                        234
                    ],
                    "('org.apache.commons.lang#CharSet', 'contains(char)')": [
                        246,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharSet', None)": [
                        82,
                        95
                    ],
                    "('org.apache.commons.lang#CharSet', 'getCharRanges')": [
                        234
                    ],
                    "('org.apache.commons.lang#CharSet', 'contains(char)')": [
                        246,
                        247
                    ]
                }
            }
        }
    }
}