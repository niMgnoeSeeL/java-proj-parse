{
    "3b6867fc25b5dbf27925fdced660553ea8289dda": {
        "authored_data": "2017 Oct 09 20:44",
        "commit.message": "Refactor \"GMT\" magic string.",
        "commit.author.name": "Gary Gregory",
        "pcid": "f4bfd9c71f51fb541d0fd203f0df2e609632dc62",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        924
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        924
                    ]
                }
            }
        }
    },
    "f4bfd9c71f51fb541d0fd203f0df2e609632dc62": {
        "authored_data": "2017 Oct 09 20:41",
        "commit.message": "Refactor \"GMT\" magic string.",
        "commit.author.name": "Gary Gregory",
        "pcid": "fd60085a2a3891ab6db46dd3b75e9dd67a7c734a",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        811
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        811
                    ]
                }
            }
        }
    },
    "fd60085a2a3891ab6db46dd3b75e9dd67a7c734a": {
        "authored_data": "2017 Oct 09 20:40",
        "commit.message": "Refactor \"GMT\" magic string.",
        "commit.author.name": "Gary Gregory",
        "pcid": "44854912194177d67cdfa1dc765ba684eb013a4c",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        847,
                        892,
                        894
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        847,
                        892,
                        894
                    ]
                }
            }
        }
    },
    "44854912194177d67cdfa1dc765ba684eb013a4c": {
        "authored_data": "2017 Oct 09 20:30",
        "commit.message": "[LANG-1357] org.apache.commons.lang3.time.FastDateParser should use\ntoUpperCase(Locale)",
        "commit.author.name": "Gary Gregory",
        "pcid": "00feb98f807cf44c993296052726043a90d70b7e",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        890,
                        891,
                        892,
                        894,
                        895,
                        898
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        890,
                        891,
                        892,
                        894,
                        895,
                        898
                    ]
                }
            }
        }
    },
    "cc6beb2d05347fba64d933906ae2b712b1a43302": {
        "authored_data": "2017 Sep 29 00:51",
        "commit.message": "LANG-1348 - StackOverflowError on TypeUtils.toString(...) for a generic return type of Enum.valueOf (closes #292)\n",
        "commit.author.name": "mbusso",
        "pcid": "36217ee164239391c672fdfc8f5bd080beab5c4b",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/TypeUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterizedTypeToString(ParameterizedType)')": [
                        1791,
                        1803
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'appendAllTo(StringBuilder,String,Type)')": [
                        1843
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'parameterizedTypeToString(ParameterizedType)')": [
                        1791,
                        1803,
                        1804,
                        1805,
                        1806,
                        1807,
                        1808,
                        1809,
                        1810
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', None)": [
                        1812,
                        1813,
                        1823,
                        1824,
                        1825,
                        1837,
                        1838
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'appendRecursiveTypes(StringBuilder,int,Type)')": [
                        1814,
                        1815,
                        1816,
                        1817,
                        1818,
                        1819,
                        1820,
                        1821,
                        1822
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'findRecursiveTypes(ParameterizedType)')": [
                        1826,
                        1827,
                        1828,
                        1829,
                        1830,
                        1831,
                        1832,
                        1833,
                        1834,
                        1835,
                        1836
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'containsVariableTypeSameParametrizedTypeBound(TypeVariable,ParameterizedType)')": [
                        1839,
                        1840
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'appendAllTo(StringBuilder,String,T)')": [
                        1879
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtils', 'toString(T)')": [
                        1890,
                        1891
                    ],
                    "(None, None)": [
                        1892,
                        1893
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/TypeUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang3.reflect#TypeUtilsTest', None)": [
                        784,
                        788,
                        789
                    ],
                    "('org.apache.commons.lang3.reflect#TypeUtilsTest', 'testLANG1348')": [
                        785,
                        786,
                        787
                    ]
                }
            }
        }
    },
    "36217ee164239391c672fdfc8f5bd080beab5c4b": {
        "authored_data": "2017 Oct 05 18:46",
        "commit.message": "ExtendedMessageFormatTest integers (#295)\n\nUse the decimal \"5\" instead of the octal notation \"05\" to make the\ncode more straight forward and easier to read.\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "cc748d35e50cc290ffbecd287e04bec9db906a76",
        "changes": {
            "src/test/java/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testExtendedAndBuiltInFormats')": [
                        113
                    ],
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testBuiltInDateTimeFormat')": [
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testExtendedAndBuiltInFormats')": [
                        113
                    ],
                    "('org.apache.commons.lang3.text#ExtendedMessageFormatTest', 'testBuiltInDateTimeFormat')": [
                        232
                    ]
                }
            }
        }
    },
    "d65b9d2bed09847ef28b9ceb30c9f8a96e0c12fe": {
        "authored_data": "2017 Sep 30 12:32",
        "commit.message": "Improve tests for CharUtils illegal usages (closes #293)\n\nCharUtilsTest has several instances of the following pattern:\n\n    try {\n        CharUtils.someMethod(\"illegal input\");\n    } catch (final IllegalArgumentException ex) {}\n\nThis pattern is not very useful for testing, as the test would pass\nwhether an IllegalArgumentException is thrown or not. This patch\nenhances the test by explicitly failing it if the exception is not\nthrown:\n\n    try {\n        CharUtils.someMethod(\"illegal input\");\n        fail(\"An IllegalArgumentException should have been thrown\");\n    } catch (final IllegalArgumentException ex) {}\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "ae862ae116f2056421ab8d6e997e7b64a95828a5",
        "changes": {
            "src/test/java/org/apache/commons/lang3/CharUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.lang3#CharUtilsTest', 'testToChar_Character')": [
                        88
                    ],
                    "('org.apache.commons.lang3#CharUtilsTest', 'testToChar_String')": [
                        105,
                        109
                    ],
                    "('org.apache.commons.lang3#CharUtilsTest', 'testToIntValue_char')": [
                        135
                    ],
                    "('org.apache.commons.lang3#CharUtilsTest', 'testToIntValue_Character')": [
                        152,
                        156
                    ]
                }
            }
        }
    }
}