{
    "a060733e63a9cc476342ca190d04ad027a241d33": {
        "authored_data": "2017 Apr 22 20:25",
        "commit.message": "use Assert#assertFalse instead of Assert#assertTrue with a negated condition\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "d5be24a12668a94712247d31f06ef7d416b8118c",
        "changes": {
            "src/test/java/org/apache/commons/lang3/BitFieldTest.java": {
                "old": {
                    "('org.apache.commons.lang3#BitFieldTest', 'testIsSet')": [
                        91,
                        92,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.lang3#BitFieldTest', 'testIsAllSet')": [
                        109,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#BitFieldTest', 'testIsSet')": [
                        91,
                        92,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.lang3#BitFieldTest', 'testIsAllSet')": [
                        109,
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEquals')": [
                        216,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionHierarchyEquals')": [
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionHierarchyEquals(boolean)')": [
                        262,
                        263,
                        265,
                        266,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEqualsEquivalenceRelationship(TestObject,TestObject,TestObject,TestObject,TestObject,boolean)')": [
                        343,
                        344,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObject')": [
                        369,
                        373,
                        374,
                        375,
                        376
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLong')": [
                        457
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testInt')": [
                        465
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShort')": [
                        473
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testChar')": [
                        481
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByte')": [
                        489
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDouble')": [
                        497,
                        498
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloat')": [
                        508,
                        509
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBoolean')": [
                        539
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectArray')": [
                        557,
                        561,
                        566
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLongArray')": [
                        582,
                        585
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testIntArray')": [
                        601,
                        604
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShortArray')": [
                        620,
                        623
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testCharArray')": [
                        639,
                        642
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByteArray')": [
                        658,
                        661
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDoubleArray')": [
                        677,
                        680
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloatArray')": [
                        696,
                        699
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBooleanArray')": [
                        715,
                        718
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiLongArray')": [
                        736
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiIntArray')": [
                        752
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiShortArray')": [
                        768
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiCharArray')": [
                        784
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiByteArray')": [
                        800
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiFloatArray')": [
                        816
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiDoubleArray')": [
                        832
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiBooleanArray')": [
                        848
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testRaggedArray')": [
                        873
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMixedArray')": [
                        891
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectArrayHiddenByObject')": [
                        909
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLongArrayHiddenByObject')": [
                        927
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testIntArrayHiddenByObject')": [
                        945
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShortArrayHiddenByObject')": [
                        963
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testCharArrayHiddenByObject')": [
                        981
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByteArrayHiddenByObject')": [
                        999
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDoubleArrayHiddenByObject')": [
                        1017
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloatArrayHiddenByObject')": [
                        1035
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBooleanArrayHiddenByObject')": [
                        1053
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEqualsExcludeFields')": [
                        1163,
                        1166,
                        1167,
                        1168,
                        1171,
                        1172
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionArrays')": [
                        1256,
                        1264
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEquals')": [
                        216,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionHierarchyEquals')": [
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionHierarchyEquals(boolean)')": [
                        262,
                        263,
                        265,
                        266,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEqualsEquivalenceRelationship(TestObject,TestObject,TestObject,TestObject,TestObject,boolean)')": [
                        343,
                        344,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObject')": [
                        369,
                        373,
                        374,
                        375,
                        376
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLong')": [
                        457
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testInt')": [
                        465
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShort')": [
                        473
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testChar')": [
                        481
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByte')": [
                        489
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDouble')": [
                        497,
                        498
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloat')": [
                        508,
                        509
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBoolean')": [
                        539
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectArray')": [
                        557,
                        561,
                        566
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLongArray')": [
                        582,
                        585
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testIntArray')": [
                        601,
                        604
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShortArray')": [
                        620,
                        623
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testCharArray')": [
                        639,
                        642
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByteArray')": [
                        658,
                        661
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDoubleArray')": [
                        677,
                        680
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloatArray')": [
                        696,
                        699
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBooleanArray')": [
                        715,
                        718
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiLongArray')": [
                        736
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiIntArray')": [
                        752
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiShortArray')": [
                        768
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiCharArray')": [
                        784
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiByteArray')": [
                        800
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiFloatArray')": [
                        816
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiDoubleArray')": [
                        832
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiBooleanArray')": [
                        848
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testRaggedArray')": [
                        873
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMixedArray')": [
                        891
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testObjectArrayHiddenByObject')": [
                        909
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testLongArrayHiddenByObject')": [
                        927
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testIntArrayHiddenByObject')": [
                        945
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testShortArrayHiddenByObject')": [
                        963
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testCharArrayHiddenByObject')": [
                        981
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testByteArrayHiddenByObject')": [
                        999
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testDoubleArrayHiddenByObject')": [
                        1017
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testFloatArrayHiddenByObject')": [
                        1035
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testBooleanArrayHiddenByObject')": [
                        1053
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionEqualsExcludeFields')": [
                        1163,
                        1166,
                        1167,
                        1168,
                        1171,
                        1172
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testReflectionArrays')": [
                        1256,
                        1264
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testAddContextValue')": [
                        88
                    ],
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testSetContextValue')": [
                        108,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testAddContextValue')": [
                        89
                    ],
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testSetContextValue')": [
                        109,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableStream')": [
                        396
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableWriter')": [
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableStream')": [
                        396
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableWriter')": [
                        422
                    ]
                }
            }
        }
    },
    "d5be24a12668a94712247d31f06ef7d416b8118c": {
        "authored_data": "2017 Apr 22 19:59",
        "commit.message": "Use String#contains where possible (closes #263)\n\nSince the project defines a JDK 7 source compatibility, it's safe to use JDK 5's features.\nThis patch replaces usages of String#indexOf with String#contains where possible to make the code easier to read and maintain.\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "8cafd87c83f4197f7e8d14de8cba453c844266c0",
        "changes": {
            "src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeTest', 'validateNonSecretField(String)')": [
                        123,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeTest', 'validateNonSecretField(String)')": [
                        123,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/AbstractExceptionContextTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testAddContextValue')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        88
                    ],
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testSetContextValue')": [
                        97,
                        98,
                        99,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testAddContextValue')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        88
                    ],
                    "('org.apache.commons.lang3.exception#AbstractExceptionContextTest', 'testSetContextValue')": [
                        97,
                        98,
                        99,
                        121
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/ContextedExceptionTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedException')": [
                        44
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionString')": [
                        54
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionThrowable')": [
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionStringThrowable')": [
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionStringThrowableContext')": [
                        83,
                        84,
                        85,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedException')": [
                        44
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionString')": [
                        54
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionThrowable')": [
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionStringThrowable')": [
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.lang3.exception#ContextedExceptionTest', 'testContextedExceptionStringThrowableContext')": [
                        83,
                        84,
                        85,
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedException')": [
                        46
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionString')": [
                        56
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionThrowable')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionStringThrowable')": [
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionStringThrowableContext')": [
                        87,
                        88,
                        89,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedException')": [
                        46
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionString')": [
                        56
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionThrowable')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionStringThrowable')": [
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.lang3.exception#ContextedRuntimeExceptionTest', 'testContextedExceptionStringThrowableContext')": [
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/exception/ExceptionUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableStream')": [
                        391,
                        396
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableWriter')": [
                        417,
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableStream')": [
                        391,
                        396
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtilsTest', 'testPrintRootCauseStackTrace_ThrowableWriter')": [
                        417,
                        422
                    ]
                }
            }
        }
    },
    "8cafd87c83f4197f7e8d14de8cba453c844266c0": {
        "authored_data": "2017 Apr 21 08:53",
        "commit.message": "LANG-1317: Add MethodUtils#findAnnotation and extend MethodUtils#getMethodsWithAnnotation for non-public, super-class and interface methods\n\nfix bug introduced by last commit\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "314b6b56bec4af56dba667d66a25c1613f4bc800",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        907
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        907
                    ]
                }
            }
        }
    },
    "314b6b56bec4af56dba667d66a25c1613f4bc800": {
        "authored_data": "2017 Apr 21 08:45",
        "commit.message": "LANG-1317: Add MethodUtils#findAnnotation and extend MethodUtils#getMethodsWithAnnotation for non-public, super-class and interface methods\n\nAdd changes.xml entry and minimal clean-up.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "46007c151e4cd79891eed4d289ff372ba39d5b8c",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', None)": [
                        869,
                        871,
                        891,
                        893,
                        921,
                        922,
                        923,
                        926,
                        934,
                        984
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        907
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAnnotation(Method,Class,boolean,boolean)')": [
                        947,
                        953,
                        962
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAllSuperclassesAndInterfaces(Class)')": [
                        991,
                        993,
                        995,
                        996,
                        997,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', None)": [
                        869,
                        871,
                        891,
                        893,
                        921,
                        922,
                        923,
                        926,
                        934,
                        935
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        907
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAnnotation(Method,Class,boolean,boolean)')": [
                        948,
                        954,
                        963
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAllSuperclassesAndInterfaces(Class)')": [
                        991,
                        993,
                        995,
                        996,
                        997,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012
                    ]
                }
            }
        }
    },
    "46007c151e4cd79891eed4d289ff372ba39d5b8c": {
        "authored_data": "2017 Mar 25 21:19",
        "commit.message": "LANG-1317: Adds MethodUtils#findAnnotation and extend MethodUtils#getMethodsWithAnnotation for non-public, super-class and interface methods (closes #261)\n",
        "commit.author.name": "Yasser Zamani",
        "pcid": "859224ffadb79147088840732236c1fad341d842",
        "changes": {
            "src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', None)": [
                        833,
                        846,
                        847,
                        848,
                        849
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class)')": [
                        844,
                        845
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class)')": [
                        862,
                        864,
                        865,
                        866
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.reflect#MethodUtils', None)": [
                        833,
                        845,
                        846,
                        847,
                        848,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874,
                        875,
                        876,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        898,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979,
                        980,
                        981,
                        982,
                        983,
                        984,
                        985
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class)')": [
                        844
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class)')": [
                        859
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsWithAnnotation(Class,Class,boolean,boolean)')": [
                        877,
                        878,
                        879,
                        880,
                        881
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getMethodsListWithAnnotation(Class,Class,boolean,boolean)')": [
                        899,
                        900,
                        901,
                        902,
                        905,
                        906,
                        907,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAnnotation(Method,Class,boolean,boolean)')": [
                        942,
                        943,
                        944,
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtils', 'getAllSuperclassesAndInterfaces(Class)')": [
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012
                    ],
                    "(None, None)": [
                        1013
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/MethodUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        50
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', None)": [
                        685,
                        703,
                        704,
                        705,
                        717,
                        718,
                        719,
                        733,
                        734,
                        735,
                        746,
                        747,
                        748,
                        760,
                        761,
                        762,
                        774,
                        775,
                        776,
                        788,
                        789,
                        790,
                        802,
                        803,
                        845,
                        846,
                        847,
                        851,
                        852,
                        853,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetMethodsWithAnnotationSearchSupersAndIgnoreAccess')": [
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetMethodsWithAnnotationNotSearchSupersButIgnoreAccess')": [
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetMethodsWithAnnotationSearchSupersButNotIgnoreAccess')": [
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetMethodsWithAnnotationNotSearchSupersAndNotIgnoreAccess')": [
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationSearchSupersAndIgnoreAccess')": [
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationNotSearchSupersButIgnoreAccess')": [
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        772,
                        773
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationSearchSupersButNotIgnoreAccess')": [
                        777,
                        778,
                        779,
                        780,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationNotSearchSupersAndNotIgnoreAccess')": [
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationIllegalArgumentException1')": [
                        848,
                        849,
                        850
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationIllegalArgumentException2')": [
                        854,
                        855
                    ],
                    "('org.apache.commons.lang3.reflect#MethodUtilsTest', 'testGetAnnotationIllegalArgumentException3')": [
                        859,
                        860
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/testbed/Foo.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/testbed/Parent.java": {
                "new": {
                    "('org.apache.commons.lang3.reflect.testbed#Parent', None)": [
                        31,
                        32,
                        34,
                        35
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#Parent', 'parentProtectedAnnotatedMethod')": [
                        33
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#Parent', 'parentNotAnnotatedMethod')": [
                        36
                    ],
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/reflect/testbed/PublicChild.java": {
                "new": {
                    "('org.apache.commons.lang3.reflect.testbed#PublicChild', None)": [
                        23,
                        24,
                        26,
                        27,
                        28,
                        30,
                        31,
                        32,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#PublicChild', 'parentProtectedAnnotatedMethod')": [
                        25
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#PublicChild', 'parentNotAnnotatedMethod')": [
                        29
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#PublicChild', 'privateAnnotatedMethod')": [
                        33
                    ],
                    "('org.apache.commons.lang3.reflect.testbed#PublicChild', 'publicAnnotatedMethod')": [
                        37
                    ],
                    "(None, None)": [
                        38
                    ]
                }
            }
        }
    },
    "859224ffadb79147088840732236c1fad341d842": {
        "authored_data": "2017 Apr 20 17:15",
        "commit.message": "LANG-1167: Add null filter to ReflectionToStringBuilder\n\nFix/add since javadoc tags, fix checkstyle violations and do other small clean-ups.\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "0446364ffa1c476dfdd95df5be94444f847973f3",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', None)": [
                        345,
                        354,
                        568
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'toString(T,ToStringStyle,boolean,boolean,boolean,Class)')": [
                        358,
                        359
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        644
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', None)": [
                        345,
                        354,
                        568,
                        725,
                        777
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'toString(T,ToStringStyle,boolean,boolean,boolean,Class)')": [
                        358,
                        359
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        644
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeNullValuesTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeNullValuesTest', None)": [
                        26,
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderExcludeNullValuesTest', None)": [
                        27,
                        28,
                        30,
                        32,
                        33
                    ]
                }
            }
        }
    },
    "ff6b0ada72106d67aef1ee21d51bacac2f3af7ac": {
        "authored_data": "2017 Apr 19 19:07",
        "commit.message": "use Validate#isTrue to validate arguments\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "52d6e24d19465e6f468839650c969d5931f66d65",
        "changes": {
            "src/main/java/org/apache/commons/lang3/CharRange.java": {
                "old": {
                    "('org.apache.commons.lang3#CharRange', 'contains(CharRange)')": [
                        182,
                        183,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharRange', 'contains(CharRange)')": [
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/CharUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#CharUtils', 'toChar(Character)')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.lang3#CharUtils', 'toChar(String)')": [
                        174,
                        175,
                        176
                    ],
                    "('org.apache.commons.lang3#CharUtils', 'toIntValue(Character)')": [
                        264,
                        265,
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharUtils', 'toChar(Character)')": [
                        131
                    ],
                    "('org.apache.commons.lang3#CharUtils', 'toChar(String)')": [
                        172
                    ],
                    "('org.apache.commons.lang3#CharUtils', 'toIntValue(Character)')": [
                        260
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/SerializationUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#SerializationUtils', 'serialize(Serializable,OutputStream)')": [
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.lang3#SerializationUtils', 'deserialize(InputStream)')": [
                        193,
                        194,
                        195
                    ],
                    "('org.apache.commons.lang3#SerializationUtils', 'deserialize(byte)')": [
                        226,
                        227,
                        228
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#SerializationUtils', 'serialize(Serializable,OutputStream)')": [
                        136
                    ],
                    "('org.apache.commons.lang3#SerializationUtils', 'deserialize(InputStream)')": [
                        191
                    ],
                    "('org.apache.commons.lang3#SerializationUtils', 'deserialize(byte)')": [
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/ThreadUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadById(long,ThreadGroup)')": [
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadById(long,String)')": [
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadsByName(String,String)')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', None)": [
                        314,
                        315,
                        316
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreads(ThreadGroup,boolean,ThreadPredicate)')": [
                        401,
                        402,
                        403,
                        404,
                        405,
                        406
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)')": [
                        437,
                        438,
                        439,
                        440,
                        441,
                        442
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadById(long,ThreadGroup)')": [
                        53
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadById(long,String)')": [
                        76
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadsByName(String,String)')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', None)": [
                        306
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreads(ThreadGroup,boolean,ThreadPredicate)')": [
                        391,
                        392
                    ],
                    "('org.apache.commons.lang3#ThreadUtils', 'findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)')": [
                        423,
                        424
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/DiffBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#DiffBuilder', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,boolean,boolean)')": [
                        170,
                        171,
                        172,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,byte,byte)')": [
                        253,
                        254,
                        255,
                        294,
                        295,
                        296
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,char,char)')": [
                        336,
                        337,
                        338,
                        378,
                        379,
                        380
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,double,double)')": [
                        420,
                        421,
                        422,
                        462,
                        463,
                        464
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,float,float)')": [
                        504,
                        505,
                        506,
                        546,
                        547,
                        548
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,int,int)')": [
                        588,
                        589,
                        590,
                        630,
                        631,
                        632
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,long,long)')": [
                        672,
                        673,
                        674,
                        714,
                        715,
                        716
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,short,short)')": [
                        756,
                        757,
                        758,
                        798,
                        799,
                        800
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,Object,Object)')": [
                        840,
                        841,
                        842,
                        926,
                        927,
                        928
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,DiffResult)')": [
                        990,
                        991,
                        992,
                        993,
                        994,
                        995
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        981,
                        982
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', None)": [
                        106,
                        107
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,boolean,boolean)')": [
                        167,
                        207
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,byte,byte)')": [
                        246,
                        285
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,char,char)')": [
                        325,
                        365
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,double,double)')": [
                        405,
                        445
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,float,float)')": [
                        485,
                        525
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,int,int)')": [
                        565,
                        605
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,long,long)')": [
                        645,
                        685
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,short,short)')": [
                        725,
                        765
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,Object,Object)')": [
                        805,
                        889
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'append(String,DiffResult)')": [
                        951,
                        952
                    ],
                    "('org.apache.commons.lang3.builder#DiffBuilder', 'validateFieldNameNotNull(String)')": [
                        979,
                        980
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/DiffResult.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#DiffResult', None)": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.lang3.builder#DiffResult', None)": [
                        76,
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/HashCodeBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#HashCodeBuilder', 'reflectionHashCode(int,int,T,boolean,Class,String)')": [
                        357,
                        358,
                        359,
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#HashCodeBuilder', 'reflectionHashCode(int,int,T,boolean,Class,String)')": [
                        357
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'checkNotNull(Object)')": [
                        367,
                        368,
                        369
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilder', 'checkNotNull(Object)')": [
                        368
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/builder/ToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#ToStringBuilder', 'setDefaultStyle(ToStringStyle)')": [
                        135,
                        136,
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.lang3.builder#ToStringBuilder', 'setDefaultStyle(ToStringStyle)')": [
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#CallableBackgroundInitializer', 'checkCallable(Callable)')": [
                        121,
                        122
                    ],
                    "(None, None)": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.lang3.concurrent#CallableBackgroundInitializer', 'checkCallable(Callable)')": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#MultiBackgroundInitializer', 'addInitializer(String,BackgroundInitializer)')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.lang3.concurrent#MultiBackgroundInitializer', 'addInitializer(String,BackgroundInitializer)')": [
                        136,
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'printRootCauseStackTrace(Throwable,PrintStream)')": [
                        457,
                        458,
                        459
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'printRootCauseStackTrace(Throwable,PrintWriter)')": [
                        490,
                        491,
                        492
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'printRootCauseStackTrace(Throwable,PrintStream)')": [
                        458
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'printRootCauseStackTrace(Throwable,PrintWriter)')": [
                        489
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/math/Fraction.java": {
                "old": {
                    "('org.apache.commons.lang3.math#Fraction', 'getFraction(String)')": [
                        316,
                        317,
                        318
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'addSub(Fraction,boolean)')": [
                        736,
                        737,
                        738
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'multiplyBy(Fraction)')": [
                        786,
                        787,
                        788
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'divideBy(Fraction)')": [
                        811,
                        812,
                        813
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'getFraction(String)')": [
                        318
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'addSub(Fraction,boolean)')": [
                        736
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'multiplyBy(Fraction)')": [
                        784
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'divideBy(Fraction)')": [
                        807
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'min(double)')": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'min(float)')": [
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'max(double)')": [
                        159,
                        160,
                        161,
                        162
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'max(float)')": [
                        184,
                        185,
                        186,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'min(double)')": [
                        40,
                        41
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'min(float)')": [
                        62
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'max(double)')": [
                        152
                    ],
                    "('org.apache.commons.lang3.math#IEEE754rUtils', 'max(float)')": [
                        174
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/math/NumberUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.math#NumberUtils', 'validateArray(Object)')": [
                        1116,
                        1117,
                        1118
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#NumberUtils', 'validateArray(Object)')": [
                        1116
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/DateUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.time#DateUtils', 'add(Date,int,int)')": [
                        514,
                        515,
                        516
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'set(Date,int,int)')": [
                        643,
                        644,
                        645
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'round(Date,int)')": [
                        711,
                        712,
                        713
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'truncate(Date,int)')": [
                        814,
                        815,
                        816
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'ceiling(Date,int)')": [
                        894,
                        895,
                        896
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'iterator(Date,int)')": [
                        1133,
                        1134,
                        1135
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'getFragment(Date,int,TimeUnit)')": [
                        1658,
                        1659,
                        1660
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'add(Date,int,int)')": [
                        516
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'set(Date,int,int)')": [
                        643
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'round(Date,int)')": [
                        709
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'truncate(Date,int)')": [
                        810
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'ceiling(Date,int)')": [
                        888
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'iterator(Date,int)')": [
                        1125
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'getFragment(Date,int,TimeUnit)')": [
                        1648
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', 'validateDateNotNull(Date)')": [
                        1785,
                        1786
                    ],
                    "('org.apache.commons.lang3.time#DateUtils', None)": [
                        1787
                    ]
                }
            }
        }
    },
    "52d6e24d19465e6f468839650c969d5931f66d65": {
        "authored_data": "2017 Apr 19 18:17",
        "commit.message": "use Validate#notNull instead of \"throw new NullPointerException\"\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "82cc24437f43d07880d8883229477735431e5d02",
        "changes": {
            "src/main/java/org/apache/commons/lang3/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ClassUtils', 'toCanonicalName(String)')": [
                        1056,
                        1057,
                        1058
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ClassUtils', 'toCanonicalName(String)')": [
                        1056,
                        1057
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/ObjectUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(Appendable,Object)')": [
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StrBuilder,Object)')": [
                        382,
                        383,
                        384
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StringBuffer,Object)')": [
                        406,
                        407,
                        408
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StringBuilder,Object)')": [
                        430,
                        431,
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(Appendable,Object)')": [
                        356
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StrBuilder,Object)')": [
                        380
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StringBuffer,Object)')": [
                        402
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'identityToString(StringBuilder,Object)')": [
                        424
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/Range.java": {
                "old": {
                    "('org.apache.commons.lang3#Range', 'elementCompareTo(T)')": [
                        288,
                        289,
                        290,
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#Range', 'elementCompareTo(T)')": [
                        288,
                        289
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/BasicThreadFactory.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#BasicThreadFactory', None)": [
                        281,
                        282,
                        283,
                        284,
                        299,
                        300,
                        301,
                        302,
                        344,
                        345,
                        346,
                        347
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.lang3.concurrent#BasicThreadFactory', None)": [
                        283,
                        298,
                        340
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/FormatCache.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FormatCache', 'getInstance(String,TimeZone,Locale)')": [
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.lang3.time#FormatCache', 'getInstance(String,TimeZone,Locale)')": [
                        72
                    ]
                }
            }
        }
    }
}