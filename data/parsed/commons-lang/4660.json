{
    "ac719ec4ab1b3348489e40a56ac1905e69d16a9c": {
        "authored_data": "2009 Nov 17 09:19",
        "commit.message": "Move firstNonNull() to better place in file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881205 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "a14051481e520da590e49464f66caa4419398c59",
        "changes": {
            "src/java/org/apache/commons/lang/ObjectUtils.java": {
                "old": {
                    "('org.apache.commons.lang#ObjectUtils', None)": [
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'firstNonNull(T)')": [
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ],
                    "(None, None)": [
                        351,
                        352
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ObjectUtils', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.lang#ObjectUtils', 'firstNonNull(T)')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                }
            }
        }
    },
    "a14051481e520da590e49464f66caa4419398c59": {
        "authored_data": "2009 Nov 17 09:13",
        "commit.message": "Enhance Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881204 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "0714795b6fd29dd895d65a6e7397ee7f768cb1bf",
        "changes": {
            "src/java/org/apache/commons/lang/text/ExtendedMessageFormat.java": {
                "old": {
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', None)": [
                        87,
                        97,
                        98,
                        108,
                        109,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#ExtendedMessageFormat', None)": [
                        87,
                        97,
                        98,
                        108,
                        109,
                        119,
                        120,
                        121
                    ]
                }
            }
        }
    },
    "0714795b6fd29dd895d65a6e7397ee7f768cb1bf": {
        "authored_data": "2009 Nov 17 08:45",
        "commit.message": "Removing the EscapeUtils/UnescapeUtils classes, and making StringEscapeUtils the replacement. Writer variants of StringEscapeUtils are dropped - instead you hit those via the translator objects. Some javadoc/testing cleanup needed. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881197 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "c090db27a496c00c1c28bf22e54cc57b7f593298",
        "changes": {
            "src/java/org/apache/commons/lang/StringEscapeUtils.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        41,
                        42,
                        44
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', None)": [
                        81,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        102,
                        103,
                        104,
                        105,
                        106,
                        112,
                        113,
                        122,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        151,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        175,
                        176,
                        177,
                        178,
                        185,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        230,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        275,
                        276,
                        290,
                        292,
                        293,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        363,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        404,
                        425,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeJava(String)')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeJava(Writer,String)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeJavaScript(String)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeJavaScript(Writer,String)')": [
                        141,
                        142
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeJava(String)')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeJava(Writer,String)')": [
                        173,
                        174
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeJavaScript(String)')": [
                        188,
                        189
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeJavaScript(Writer,String)')": [
                        208,
                        209
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeHtml(String)')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeHtml(Writer,String)')": [
                        273,
                        274
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeHtml(String)')": [
                        294,
                        295
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeHtml(Writer,String)')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeXml(Writer,String)')": [
                        340,
                        341
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeXml(String)')": [
                        361,
                        362
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeXml(Writer,String)')": [
                        383,
                        384
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeXml(String)')": [
                        402,
                        403
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeCsv(String)')": [
                        430,
                        431
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeCsv(Writer,String)')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeCsv(String)')": [
                        483,
                        484
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeCsv(Writer,String)')": [
                        510,
                        511
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        234,
                        239,
                        240,
                        241,
                        242,
                        243,
                        249,
                        250,
                        251,
                        252,
                        261,
                        274,
                        279,
                        280,
                        281,
                        282,
                        289,
                        314,
                        326,
                        327,
                        330,
                        331,
                        345,
                        347,
                        350,
                        351,
                        370,
                        376,
                        377,
                        391,
                        397,
                        398,
                        419,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        445
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeJava(String)')": [
                        237,
                        238
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeEcmaScript(String)')": [
                        264,
                        265
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeJava(String)')": [
                        277,
                        278
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeEcmaScript(String)')": [
                        292,
                        293
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeHtml4(String)')": [
                        324,
                        325
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeHtml3(String)')": [
                        328,
                        329
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeHtml4(String)')": [
                        348,
                        349
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeHtml3(String)')": [
                        352,
                        353
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeXml(String)')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeXml(String)')": [
                        395,
                        396
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'escapeCsv(String)')": [
                        424,
                        425
                    ],
                    "('org.apache.commons.lang#StringEscapeUtils', 'unescapeCsv(String)')": [
                        450,
                        451
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeJava')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'assertEscapeJava(String,String,String)')": [
                        126
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeJava')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'assertUnescapeJava(String,String,String)')": [
                        180
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeJavaScript')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        202,
                        204
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtml')": [
                        230,
                        233
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeHtml')": [
                        241,
                        246,
                        250,
                        259,
                        261,
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeHexCharsHtml')": [
                        269,
                        270,
                        278
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeUnknownEntity')": [
                        284
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlVersions')": [
                        289,
                        290
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeXml')": [
                        313,
                        320
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testStandaloneAmphersand')": [
                        329,
                        330
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testLang313')": [
                        336
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'checkCsvEscapeWriter(String,String)')": [
                        364
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'checkCsvUnescapeWriter(String,String)')": [
                        400
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlHighUnicode')": [
                        417,
                        420
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', None)": [
                        424
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHiragana')": [
                        432,
                        433,
                        436
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeJava')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'assertEscapeJava(String,String,String)')": [
                        126
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeJava')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'assertUnescapeJava(String,String,String)')": [
                        180
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeEcmaScript')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        202,
                        204
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtml')": [
                        230,
                        233
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeHtml4')": [
                        241,
                        246,
                        250,
                        259,
                        261,
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeHexCharsHtml')": [
                        269,
                        270,
                        278
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testUnescapeUnknownEntity')": [
                        284
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlVersions')": [
                        289,
                        290
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeXml')": [
                        313,
                        320
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testStandaloneAmphersand')": [
                        329,
                        330
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testLang313')": [
                        336
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'checkCsvEscapeWriter(String,String)')": [
                        364
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'checkCsvUnescapeWriter(String,String)')": [
                        400
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlHighUnicode')": [
                        417,
                        420
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', None)": [
                        424
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHiragana')": [
                        432,
                        433,
                        436
                    ]
                }
            }
        }
    },
    "c090db27a496c00c1c28bf22e54cc57b7f593298": {
        "authored_data": "2009 Nov 17 07:52",
        "commit.message": "Remove SQL from javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@881181 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "ab1bf739dab2d8290ee19857344330088ea1ebd5",
        "changes": {
            "src/java/org/apache/commons/lang/StringEscapeUtils.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            }
        }
    },
    "ab1bf739dab2d8290ee19857344330088ea1ebd5": {
        "authored_data": "2009 Nov 14 10:46",
        "commit.message": "Changing the note on high > 0x7f characters being escaped. LANG-516\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@836152 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "000bac6b9484209a2e0fda4586b2def38b6f9108",
        "changes": {
            "src/java/org/apache/commons/lang/StringEscapeUtils.java": {
                "old": {
                    "('org.apache.commons.lang#StringEscapeUtils', None)": [
                        331,
                        332,
                        354,
                        355
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringEscapeUtils', None)": [
                        331,
                        332,
                        354,
                        355
                    ]
                }
            }
        }
    },
    "000bac6b9484209a2e0fda4586b2def38b6f9108": {
        "authored_data": "2009 Nov 14 10:45",
        "commit.message": "Changing the standard escapeXml method to not escape high characters. It's easier to add that back on that remove it. LANG-516 and LANG-517\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@836151 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "9adbbb0bbfe1d76549dd8b6704f183dacb1de29f",
        "changes": {
            "src/java/org/apache/commons/lang/text/translate/EscapeUtils.java": {
                "old": {
                    "('org.apache.commons.lang.text.translate#EscapeUtils', None)": [
                        69,
                        70,
                        80,
                        81,
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text.translate#EscapeUtils', None)": [
                        69,
                        79,
                        90
                    ]
                }
            },
            "src/test/org/apache/commons/lang/StringEscapeUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang#StringEscapeUtilsTest', None)": [
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeXml')": [
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlHighUnicode')": [
                        416,
                        418,
                        419
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHiragana')": [
                        425,
                        426,
                        427,
                        431
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#StringEscapeUtilsTest', None)": [
                        221,
                        222,
                        422,
                        423,
                        424,
                        425
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeXml')": [
                        300,
                        301,
                        302
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHtmlHighUnicode')": [
                        415,
                        416,
                        417,
                        418,
                        419,
                        421
                    ],
                    "('org.apache.commons.lang#StringEscapeUtilsTest', 'testEscapeHiragana')": [
                        431,
                        432,
                        433,
                        434,
                        438
                    ]
                }
            }
        }
    },
    "9adbbb0bbfe1d76549dd8b6704f183dacb1de29f": {
        "authored_data": "2009 Nov 14 10:10",
        "commit.message": "Rolling back r611543 for LANG-393, and removing the special handling of BigDecimal to use compareTo instead of equals because it creates an inequality with HashCodeBuilder [reported in LANG-467 by David Jones]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@836149 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "56463552475746e982e46f54c1b18487ef434c17",
        "changes": {
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'append(Object,Object)')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'append(Object,Object)')": [
                        380,
                        381
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang.builder#EqualsBuilderTest', None)": [
                        387,
                        393,
                        394
                    ],
                    "('org.apache.commons.lang.builder#EqualsBuilderTest', 'testBigDecimal')": [
                        388,
                        389,
                        390,
                        391,
                        392
                    ]
                }
            }
        }
    },
    "452a6c0cd87ed01dc6f60ab65578c6353c0d0522": {
        "authored_data": "2009 Nov 13 08:51",
        "commit.message": "Adding elementCompareTo method as requested in LANG-386 (which called the method positionOfXxx)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@835777 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "4c124cea2831d2579bd78895c132f6750c8f9915",
        "changes": {
            "src/java/org/apache/commons/lang/Range.java": {
                "new": {
                    "('org.apache.commons.lang#Range', None)": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.lang#Range', 'elementCompareTo(T)')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222
                    ]
                }
            },
            "src/test/org/apache/commons/lang/RangeTest.java": {
                "new": {
                    "('org.apache.commons.lang#RangeTest', 'testElementCompareTo')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.lang#RangeTest', None)": [
                        162,
                        163
                    ]
                }
            }
        }
    }
}