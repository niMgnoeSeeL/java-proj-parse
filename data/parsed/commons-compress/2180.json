{
    "77e54b78d8d63abc62bc12c160e2ba5c0ca1d8b8": {
        "authored_data": "2014 Jan 01 20:41",
        "commit.message": "even if those arrays are small, ensure they are read completely - also make draining more efficient.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1554674 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6106e8dac1f5df7391b124ee33abe8c4989ff789",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        98,
                        118,
                        119,
                        120,
                        122,
                        123,
                        124,
                        129
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getBSDLongName(String)')": [
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        85,
                        92,
                        112,
                        113,
                        114,
                        116,
                        117,
                        118,
                        123
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getBSDLongName(String)')": [
                        348,
                        349
                    ]
                }
            }
        }
    },
    "6106e8dac1f5df7391b124ee33abe8c4989ff789": {
        "authored_data": "2014 Jan 01 20:23",
        "commit.message": "use skip for more efficient draining of archive entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1554670 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "885d2053f4fc29d986904c9b8cfe69bcfbe7b361",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'getNextEntry')": [
                        315,
                        316,
                        317
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'getNextEntry')": [
                        316,
                        317,
                        318
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'closeEntry')": [
                        200,
                        201,
                        204,
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'closeEntry')": [
                        200,
                        201,
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        68,
                        69
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'drainPreviousEntry')": [
                        834,
                        835,
                        836
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'drainPreviousEntry')": [
                        833,
                        834
                    ]
                }
            }
        }
    },
    "885d2053f4fc29d986904c9b8cfe69bcfbe7b361": {
        "authored_data": "2014 Jan 01 19:56",
        "commit.message": "extract \"close and swallow exception\" code to IOUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1554668 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "661db5c4d23221b32c4f22f75d6bf34103025c93",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(InputStream)')": [
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(InputStream)')": [
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        263,
                        264,
                        265,
                        266
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'closeQuietly(ZipFile)')": [
                        260,
                        261,
                        262
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        222,
                        223
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'closeQuietly(ZipFile)')": [
                        256
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', 'finish')": [
                        123,
                        124,
                        125
                    ],
                    "(None, None)": [
                        126,
                        127,
                        128
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', 'finish')": [
                        124,
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "new": {
                    "(None, None)": [
                        22,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', 'closeQuietly(Closeable)')": [
                        176,
                        177,
                        178,
                        179
                    ]
                }
            }
        }
    },
    "661db5c4d23221b32c4f22f75d6bf34103025c93": {
        "authored_data": "2013 Dec 22 22:34",
        "commit.message": "Fixed the decompression of imploded zip entries using a Shannon-Fano tree of depth 16\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1553043 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "61c3c6dfaa987457f70d32089a7d8a37bb5b726c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/BinaryTree.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'read(BitStream)')": [
                        85,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'read(BitStream)')": [
                        85,
                        93
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ExplodeSupportTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', 'XtestTikaTestArchive')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', 'XtestTikaTestStream')": [
                        90,
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', 'testTikaTestArchive')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', 'testTikaTestStream')": [
                        90,
                        91
                    ]
                }
            }
        }
    }
}