{
    "37995c1e978187f5aaeb59a290ca8617f3d9d8af": {
        "authored_data": "2013 Jan 01 10:26",
        "commit.message": "COMPRESS-208: ZipFile deals well with PK00 prefix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1427340 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ca5721d16e7aa3eb586621360d16774f40f37e76",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        166,
                        167
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testSkipsPK00Prefix')": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165
                    ]
                }
            }
        }
    },
    "b4a985f516bf5a06c49321e9070b09f356a1b852": {
        "authored_data": "2012 Dec 28 17:29",
        "commit.message": "if the inflater needs a dictionary, that's worth an exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426586 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e2cf412a7856a7a9f314c3927df2f5a04f42177d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        385
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        385,
                        387,
                        388,
                        389,
                        390
                    ]
                }
            }
        }
    },
    "e2cf412a7856a7a9f314c3927df2f5a04f42177d": {
        "authored_data": "2012 Dec 28 06:53",
        "commit.message": "COMPRESS-189 Inflater may return 0 if it needs more input, we don't handle this case properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426417 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e4f645c89fc53128f3e4b35ec208d90cb6eca015",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        383,
                        385,
                        392
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        393,
                        394,
                        395,
                        396,
                        397,
                        398
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        30,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        55,
                        56,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'properUseOfInflater')": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            }
        }
    },
    "e4f645c89fc53128f3e4b35ec208d90cb6eca015": {
        "authored_data": "2012 Dec 27 21:48",
        "commit.message": "COMPRESS-203 actually, the file name must be fixed after it has been truncated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426338 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "09b8f6d78e18b927491fc299973146fa74fd977f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writePaxHeaders(String,Map)')": [
                        461,
                        462,
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writePaxHeaders(String,Map)')": [
                        457,
                        458,
                        459
                    ]
                }
            }
        }
    },
    "09b8f6d78e18b927491fc299973146fa74fd977f": {
        "authored_data": "2012 Dec 27 21:34",
        "commit.message": "COMPRESS-203 the \"file name\" of a PAX header must not end with a slash or it is mistaken as a directory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426334 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "716666a267169689e3b4559458c1f0d53a96ae0a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writePaxHeaders(String,Map)')": [
                        457,
                        458,
                        459,
                        460,
                        461
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', None)": [
                        375,
                        376,
                        377,
                        380,
                        381,
                        382,
                        383,
                        384,
                        387,
                        388,
                        407,
                        408,
                        409,
                        410,
                        411
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNameGnuMode')": [
                        378,
                        379
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNamePosixMode')": [
                        385,
                        386
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryName(int)')": [
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteNonAsciiDirectoryNamePosixMode')": [
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427
                    ],
                    "(None, None)": [
                        428,
                        429
                    ]
                }
            }
        }
    },
    "716666a267169689e3b4559458c1f0d53a96ae0a": {
        "authored_data": "2012 Dec 27 21:04",
        "commit.message": "COMPRESS-200 aftermaths, we never guarantee ZipEncoding#encode returned a ByteBuffer with position() 0 - even though it always in right now\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426326 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "37378a764b0c5632dbba0c61a4818a24d2004bcd",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'formatNameBytes(String,byte,int,int,ZipEncoding)')": [
                        357
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'formatNameBytes(String,byte,int,int,ZipEncoding)')": [
                        357
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        939
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'addUnicodeExtraFields(ZipArchiveEntry,boolean,ByteBuffer)')": [
                        962,
                        976
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        1110,
                        1118
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        939,
                        940
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'addUnicodeExtraFields(ZipArchiveEntry,boolean,ByteBuffer)')": [
                        963,
                        964,
                        978,
                        979
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        1113,
                        1114,
                        1122,
                        1123
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1189,
                        1190
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        275,
                        291,
                        308
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'assertUnicodeName(ZipArchiveEntry,String,String)')": [
                        367
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        275,
                        276,
                        292,
                        293,
                        310,
                        311
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'assertUnicodeName(ZipArchiveEntry,String,String)')": [
                        370,
                        371
                    ]
                }
            }
        }
    },
    "37378a764b0c5632dbba0c61a4818a24d2004bcd": {
        "authored_data": "2012 Dec 27 20:56",
        "commit.message": "make test use encoding explicitly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426321 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e9d7bcf5f2284f2aa326a3d2ea1807c465b0de8b",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'writePaxHeader(Map)')": [
                        183
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongFileNamePosixMode')": [
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'writePaxHeader(Map)')": [
                        183
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongFileNamePosixMode')": [
                        205
                    ]
                }
            }
        }
    },
    "e9d7bcf5f2284f2aa326a3d2ea1807c465b0de8b": {
        "authored_data": "2012 Dec 27 20:54",
        "commit.message": "COMPRESS-200 use the backing array of the returned ByteBuffer properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426319 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e185dad52556591d61c8ddf88caafeff10e707fc",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        269,
                        271,
                        282,
                        284
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        270,
                        271,
                        273,
                        284,
                        286
                    ]
                }
            }
        }
    },
    "e185dad52556591d61c8ddf88caafeff10e707fc": {
        "authored_data": "2012 Dec 27 20:50",
        "commit.message": "COMPRESS-200 the test actually fails if encoding is specified explicitly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1426312 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0e1bea15caaee81e489dceeb7b863ab2e1bf9275",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testRoundtripWith67CharFileName(int)')": [
                        361,
                        372
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testRoundtripWith67CharFileName(int)')": [
                        361,
                        366
                    ]
                }
            }
        }
    }
}