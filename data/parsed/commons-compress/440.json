{
    "30a775050eb63d0572db762776397e45a61cd034": {
        "authored_data": "2021 Mar 07 10:55",
        "commit.message": "COMPRESS-552 use a more complex and more reliable way to detect OSGi\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5aa752abba121763d09a2ef845d106bb86b395f4",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', None)": [
                        36,
                        37,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzma/LZMAUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzma#LZMAUtils', None)": [
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.compressors.lzma#LZMAUtils', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdUtils', None)": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdUtils', None)": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/OsgiITest.java": {
                "old": {
                    "('org.apache.commons.compress#OsgiITest', 'loadBundle')": [
                        65,
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        77,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        36
                    ],
                    "('org.apache.commons.compress#OsgiITest', 'canLoadBundle')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.compress#OsgiITest', None)": [
                        69,
                        70,
                        71,
                        80,
                        81
                    ],
                    "('org.apache.commons.compress#OsgiITest', 'properlyDetectsRunningInsideOsgiEnv')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.compress#OsgiITest', 'loadBundle')": [
                        82,
                        84,
                        85,
                        88
                    ]
                }
            }
        }
    },
    "5aa752abba121763d09a2ef845d106bb86b395f4": {
        "authored_data": "2021 Mar 07 09:59",
        "commit.message": "COMPRESS-569 add testcase for the specific error in TarFile\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "851dbed488159488420607924d86147b5f99d24f",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        435,
                        440,
                        441,
                        442,
                        443
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'rejectsArchivesWithNegativeSizes')": [
                        436,
                        437,
                        438,
                        439
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarFileTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarFileTest', None)": [
                        359,
                        360
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFileTest', 'rejectsArchivesWithNegativeSizes')": [
                        361,
                        362
                    ],
                    "(None, None)": [
                        363,
                        364
                    ]
                }
            }
        }
    },
    "851dbed488159488420607924d86147b5f99d24f": {
        "authored_data": "2021 Mar 06 20:15",
        "commit.message": "COMPRESS-569 also check sizes in ZipArchiveInputStream\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5c5f8a89e91b95c0ba984549b5804289f55b8200",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'processZip64Extra(ZipLong,ZipLong)')": [
                        446,
                        447,
                        448
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        891,
                        892,
                        894,
                        895
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'processZip64Extra(ZipLong,ZipLong)')": [
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        457,
                        458,
                        459,
                        461,
                        462,
                        463
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924
                    ]
                }
            }
        }
    },
    "5c5f8a89e91b95c0ba984549b5804289f55b8200": {
        "authored_data": "2021 Mar 06 19:32",
        "commit.message": "COMPRESS-569 ensure sizes read for archive entries are non-negative\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8543b030e93fa71b6093ac7d4cdb8c4e98bfd63d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        107,
                        108,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        174,
                        175,
                        176,
                        177
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFilesInfo(ByteBuffer,Archive)')": [
                        1099,
                        1100,
                        1101
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'parseTarHeader(byte,ZipEncoding,boolean,boolean)')": [
                        1541,
                        1542,
                        1543
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        778,
                        781
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        861,
                        867
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        778,
                        779,
                        780,
                        781,
                        782,
                        785,
                        786,
                        787,
                        788,
                        789
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        869,
                        870,
                        871,
                        872,
                        873,
                        879,
                        880,
                        881,
                        882,
                        883
                    ]
                }
            }
        }
    },
    "8543b030e93fa71b6093ac7d4cdb8c4e98bfd63d": {
        "authored_data": "2021 Mar 06 18:04",
        "commit.message": "COMPRESS-569 don't move backwards while scanning the archive\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "46eab6b1e90d9dd6c4f7898f41ff4a05ef68b0da",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'getNextTarEntry')": [
                        236,
                        238
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'skipRecordPadding')": [
                        516
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'consumeRemainderOfLastBlock')": [
                        589
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'getNextTarEntry')": [
                        236
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'skipRecordPadding')": [
                        515
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', None)": [
                        518,
                        519,
                        526,
                        527
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'repositionForwardTo(long)')": [
                        520,
                        521,
                        522,
                        523,
                        524,
                        525
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'repositionForwardBy(long)')": [
                        528,
                        529
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarFile', 'consumeRemainderOfLastBlock')": [
                        600
                    ]
                }
            }
        }
    },
    "46eab6b1e90d9dd6c4f7898f41ff4a05ef68b0da": {
        "authored_data": "2021 Mar 05 21:05",
        "commit.message": "Use try-with-resources.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "1a52e2f22b823940239b7ea11aa70083b7729c19",
        "changes": {
            "src/test/java/org/apache/commons/compress/ArchiveReadTest.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveReadTest', 'setUpFileList')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ArchiveReadTest', 'setUpFileList')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.compress#ArchiveReadTest', None)": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/ChainingTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#ChainingTestCase', 'testTarGzip')": [
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.compress#ChainingTestCase', 'testTarBzip2')": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ChainingTestCase', 'testTarGzip')": [
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.compress#ChainingTestCase', None)": [
                        44
                    ],
                    "('org.apache.commons.compress#ChainingTestCase', 'testTarBzip2')": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "(None, None)": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'shortTextFilesAreNoTARs')": [
                        53
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'getOutputStreamFor(String,ArchiveStreamFactory)')": [
                        431
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'shortTextFilesAreNoTARs')": [
                        53
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'getOutputStreamFor(String,ArchiveStreamFactory)')": [
                        431
                    ]
                }
            }
        }
    },
    "1a52e2f22b823940239b7ea11aa70083b7729c19": {
        "authored_data": "2021 Mar 05 20:57",
        "commit.message": "Fix test leaking file handles.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6082d6448ca1b3e922e0298707b33642ee90c587",
        "changes": {
            "src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testCOMPRESS117')": [
                        54
                    ],
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testCOMPRESS335')": [
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testCOMPRESS_117')": [
                        54
                    ],
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testCOMPRESS_335')": [
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.compress#DetectArchiverTestCase', None)": [
                        65
                    ]
                }
            }
        }
    }
}