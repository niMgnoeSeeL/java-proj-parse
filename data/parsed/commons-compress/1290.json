{
    "1261172afdae9a4b15dc9f691583261a1b020ccc": {
        "authored_data": "2017 Jun 25 20:57",
        "commit.message": "Slight speed up by avoiding writing to disk\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "5499fa02b08b8546827a1a055c5af3f0245257d9",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorRoundtripTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        27,
                        34
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorRoundtripTest', 'roundTripTest(String)')": [
                        72,
                        73,
                        74,
                        75,
                        80,
                        81,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        32
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorRoundtripTest', 'roundTripTest(String)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        84,
                        85,
                        89
                    ]
                }
            }
        }
    },
    "5499fa02b08b8546827a1a055c5af3f0245257d9": {
        "authored_data": "2017 Jun 25 20:56",
        "commit.message": "Avoid NPE when running against pre-release xz's (which are by definition not 1.4)\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "31ac0e5f3594a4517ba2be1735b1219cf85c715a",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFileTest', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFileTest', None)": [
                        41,
                        42
                    ]
                }
            }
        }
    },
    "31ac0e5f3594a4517ba2be1735b1219cf85c715a": {
        "authored_data": "2017 Jun 25 20:54",
        "commit.message": "Increase test coverage\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "ffa1c55e7f9d8808e4e440effe78e31aa89a4ec1",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/arj/CoverageTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.arj#CoverageTest', None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.arj#CoverageTest', 'testCallLFHToString')": [
                        23,
                        24,
                        25
                    ],
                    "(None, None)": [
                        26
                    ]
                }
            }
        }
    },
    "ffa1c55e7f9d8808e4e440effe78e31aa89a4ec1": {
        "authored_data": "2017 Jun 24 20:53",
        "commit.message": "Random coveralls bait.\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "983fcdcbb2561e0755656ca8e46fc6d65b7c3c61",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        26
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraField', 'clone')": [
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334
                    ],
                    "(None, None)": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraField', 'clone')": [
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/BinaryTreeTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTreeTest', None)": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers.zip#BinaryTreeTest', 'testExceptions')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "(None, None)": [
                        71,
                        72,
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ExplodeSupportTest.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        115,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', None)": [
                        104
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodeSupportTest', 'testConstructorThrowsExceptions')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', None)": [
                        96,
                        106,
                        107
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', 'testParseCentral')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/StreamCompressorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25,
                        26,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        26,
                        27,
                        28,
                        29,
                        31,
                        69,
                        70
                    ],
                    "('org.apache.commons.compress.archivers.zip#StreamCompressorTest', None)": [
                        62,
                        63
                    ],
                    "('org.apache.commons.compress.archivers.zip#StreamCompressorTest', 'testCreateDataOutputCompressor')": [
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            }
        }
    },
    "0065a044e998559df5127a7494953fe863016dca": {
        "authored_data": "2017 Jul 05 15:31",
        "commit.message": "move methods around\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "fde66702c33d3888b682adc7e6c35dd21cb1e8da",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        69,
                        80,
                        81,
                        82,
                        93,
                        94,
                        95,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newEncoder')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newDecoder')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'decode(byte)')": [
                        215,
                        216,
                        217
                    ],
                    "(None, None)": [
                        218,
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        134,
                        135,
                        162,
                        163,
                        174,
                        175,
                        176,
                        187
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'decode(byte)')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newEncoder')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newDecoder')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ]
                }
            }
        }
    },
    "fde66702c33d3888b682adc7e6c35dd21cb1e8da": {
        "authored_data": "2017 Jul 05 15:31",
        "commit.message": "mostly cosmetic changes\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "90a73a4dee53129e33a552e49cb7835ecebb3a5f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/HasCharset.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        37,
                        40,
                        41,
                        42,
                        52,
                        165
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        105,
                        130,
                        132,
                        136,
                        146,
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)')": [
                        160
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeSurrogate(CharBuffer,char)')": [
                        169
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'estimateInitialBufferSize(CharsetEncoder,int)')": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        37,
                        40,
                        41,
                        42,
                        43,
                        164
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        105,
                        130,
                        132,
                        136,
                        146
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)')": [
                        159
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeSurrogate(CharBuffer,char)')": [
                        168
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'estimateInitialBufferSize(CharsetEncoder,int)')": [
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        49,
                        51,
                        75
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        70,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        49,
                        51
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        70,
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEncodingTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testGetNonexistentEncodng')": [
                        60
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testIsUTF8')": [
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', None)": [
                        78
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', None)": [
                        54,
                        71,
                        76
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testGetNonexistentEncodng')": [
                        61
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testIsUTF8')": [
                        69
                    ]
                }
            }
        }
    }
}