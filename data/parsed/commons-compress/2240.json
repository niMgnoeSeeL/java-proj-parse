{
    "8bfb8987a3f5c73a38880c2c10cf7eda06ac9ddd": {
        "authored_data": "2013 Dec 19 08:51",
        "commit.message": "Update the entry CRC in the main read() method only (fixes the CRC for stored entries with a data descriptor)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552252 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "c6c7ec486fbb1a9c919853e35ca1a40300733098",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        446
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        467
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411
                    ]
                }
            }
        }
    },
    "c6c7ec486fbb1a9c919853e35ca1a40300733098": {
        "authored_data": "2013 Dec 19 00:31",
        "commit.message": "Renamed the 'start' parameter in the read methods to 'offset' for consistency with the standard terminology\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552179 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "c83c462de4e8f865f0a22539f2ba53ab5bb7fd3c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        378,
                        387,
                        388,
                        398,
                        404
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        412,
                        419,
                        444,
                        446
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        453,
                        455,
                        467
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        475,
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        378,
                        387,
                        388,
                        398,
                        404
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        412,
                        419,
                        444,
                        446
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        453,
                        455,
                        467
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        475,
                        490
                    ]
                }
            }
        }
    },
    "c83c462de4e8f865f0a22539f2ba53ab5bb7fd3c": {
        "authored_data": "2013 Dec 18 23:19",
        "commit.message": "Exception chaining\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552157 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "29f975ea99d9b9310c6fc33ac4f844fb10f4d98a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        179,
                        181
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        179,
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        492
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        492
                    ]
                }
            }
        }
    },
    "29f975ea99d9b9310c6fc33ac4f844fb10f4d98a": {
        "authored_data": "2013 Dec 18 23:14",
        "commit.message": "Replaced ZipArchiveInputStream.Buffer with a ByteBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552156 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "8301ee7fec23ffdee9ea2c8ce5a8b80f343744e5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        88,
                        677,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        426,
                        427,
                        428,
                        431,
                        432,
                        440,
                        441
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        453,
                        460
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        477,
                        478,
                        479
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        611,
                        620
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        634
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'fill')": [
                        670,
                        674,
                        675,
                        676
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        764,
                        765
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        806,
                        807,
                        808,
                        813,
                        823,
                        824,
                        825
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        846,
                        847,
                        848
                    ],
                    "(None, None)": [
                        1057,
                        1058
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        89
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        427,
                        428,
                        429,
                        430,
                        433,
                        434,
                        435,
                        436,
                        444
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        456,
                        463
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        480,
                        481,
                        482,
                        483,
                        484
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        616,
                        625
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        639
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'fill')": [
                        675,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        772
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        813,
                        814,
                        815,
                        820,
                        830,
                        831
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        852,
                        853
                    ]
                }
            }
        }
    },
    "8301ee7fec23ffdee9ea2c8ce5a8b80f343744e5": {
        "authored_data": "2013 Dec 18 22:10",
        "commit.message": "Modified ZipArchiveInputStream.Buffer to look more like a java.nio.ByteBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552127 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "30e3ded84ed3252c3e85dd65b85e5a0447d1824d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        202,
                        1021,
                        1023,
                        1026,
                        1028,
                        1029,
                        1031,
                        1036
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        426,
                        427,
                        428,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        441,
                        442
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        461
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        479,
                        480
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        612
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        635,
                        636
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'fill')": [
                        676,
                        677,
                        678
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        766,
                        774
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        808,
                        809,
                        810,
                        815,
                        825,
                        827
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        848,
                        849
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        202,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1024,
                        1025,
                        1027,
                        1030,
                        1031,
                        1033,
                        1034,
                        1036,
                        1037,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        426,
                        427,
                        428,
                        431,
                        432,
                        433,
                        434,
                        435,
                        440,
                        441
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        460
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        478,
                        479
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        611
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        634
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'fill')": [
                        674,
                        675,
                        676
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        764,
                        772
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        806,
                        807,
                        808,
                        813,
                        823,
                        825
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        846,
                        847
                    ]
                }
            }
        }
    },
    "7e06782f1dabae328d0307c626e479989310fcab": {
        "authored_data": "2013 Dec 18 14:42",
        "commit.message": "avoid magic constant number\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1551956 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "180c2b83e2f9b7cf82aaf49b25a69b5764f5792d",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'writeHeader(GzipParameters)')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'writeHeader(GzipParameters)')": [
                        89
                    ]
                }
            }
        }
    },
    "180c2b83e2f9b7cf82aaf49b25a69b5764f5792d": {
        "authored_data": "2013 Dec 18 05:28",
        "commit.message": "make test compile\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1551851 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3c6e807d68721029abcfb37f7b2fc1e0fdc04040",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java": {
                "old": {
                    "(None, None)": [
                        37,
                        38
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGzipCompressorInputStream')": [
                        159
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGZIPInputStream')": [
                        181
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlags(int,int)')": [
                        220
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testOverWrite')": [
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGzipCompressorInputStream')": [
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGZIPInputStream')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlags(int,int)')": [
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testOverWrite')": [
                        263
                    ]
                }
            }
        }
    },
    "3c6e807d68721029abcfb37f7b2fc1e0fdc04040": {
        "authored_data": "2013 Dec 16 13:18",
        "commit.message": "GzipCompressorOutputStream revamp to support custom compression level and header metadata (COMPRESS-250)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1551202 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "ec5bd473c597470a46ba91c43a3367552ec4e2b3",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        29,
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(int)')": [
                        37
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte)')": [
                        46,
                        47
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte,int,int)')": [
                        56,
                        57
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'finish')": [
                        66
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'close')": [
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        204
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        115,
                        116,
                        117,
                        160,
                        161,
                        162,
                        167,
                        184
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'writeHeader(GzipParameters)')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'writeTrailer')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(int)')": [
                        129
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte,int,int)')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'deflate')": [
                        163,
                        164,
                        165,
                        166
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'finish')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'close')": [
                        199,
                        200,
                        201,
                        202,
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/GZipTestCase.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        34,
                        35,
                        37,
                        38,
                        39,
                        252,
                        253,
                        254,
                        255
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', None)": [
                        157,
                        178,
                        179,
                        200,
                        201,
                        214,
                        215,
                        216,
                        217,
                        218,
                        232,
                        233,
                        236,
                        237,
                        240,
                        241,
                        244,
                        245
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGzipCompressorInputStream')": [
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInteroperabilityWithGZIPInputStream')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testInvalidCompressionLevel')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlags(int,int)')": [
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlagsFastestCompression')": [
                        234,
                        235
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlagsBestCompression')": [
                        238,
                        239
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testExtraFlagsDefaultCompression')": [
                        242,
                        243
                    ],
                    "('org.apache.commons.compress.compressors#GZipTestCase', 'testOverWrite')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251
                    ]
                }
            }
        }
    },
    "ec5bd473c597470a46ba91c43a3367552ec4e2b3": {
        "authored_data": "2013 Dec 15 16:23",
        "commit.message": "reduce duplication in read method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1551028 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b3ddff68c138d1adb01aa99481b03340bdea6028",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/z/AbstractLZWInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.z#AbstractLZWInputStream', 'read(byte,int,int)')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        83,
                        84,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.z#AbstractLZWInputStream', 'read(byte,int,int)')": [
                        67,
                        68,
                        75,
                        77
                    ],
                    "('org.apache.commons.compress.compressors.z#AbstractLZWInputStream', None)": [
                        181
                    ],
                    "('org.apache.commons.compress.compressors.z#AbstractLZWInputStream', 'readFromStack(byte,int,int)')": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "(None, None)": [
                        191
                    ]
                }
            }
        }
    }
}