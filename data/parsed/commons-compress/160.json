{
    "cefdd552695462b81c3a57f072bd1ceda263e34b": {
        "authored_data": "2022 Feb 20 00:42",
        "commit.message": "Null-guard and fix lower case. Fix typo.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c936bba5b8f8d4e86ab753f9e04da100e883cb78",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        1702,
                        1703,
                        1704
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        1705,
                        1706,
                        1708,
                        1709,
                        1710,
                        1711,
                        1712,
                        1713,
                        1714,
                        1715,
                        1716,
                        1717,
                        1718,
                        1719,
                        1720,
                        1721,
                        1723,
                        1724,
                        1725,
                        1726,
                        1727
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        1702,
                        1703
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        1704,
                        1706,
                        1707,
                        1708,
                        1709,
                        1710,
                        1711,
                        1712,
                        1713,
                        1714,
                        1715,
                        1716,
                        1717,
                        1718,
                        1719,
                        1720,
                        1722,
                        1723,
                        1724,
                        1725,
                        1726
                    ]
                }
            }
        }
    },
    "c936bba5b8f8d4e86ab753f9e04da100e883cb78": {
        "authored_data": "2022 Feb 20 00:38",
        "commit.message": "Minor change: (#206)\n\n* Simplify conditions\r\n* Make final var",
        "commit.author.name": "Arturo Bernal",
        "pcid": "f383b7286a66eb0efd47b12f78f5a8d21b072161",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'equals(Object)')": [
                        413,
                        414,
                        415,
                        416
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#Coders', None)": [
                        50,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Coders', None)": [
                        50,
                        51,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        1710,
                        1711,
                        1712,
                        1713,
                        1714,
                        1715,
                        1716,
                        1717,
                        1718,
                        1719,
                        1720,
                        1721,
                        1722,
                        1723,
                        1724,
                        1726,
                        1727,
                        1728,
                        1729,
                        1730
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        1710,
                        1711,
                        1712,
                        1713,
                        1714,
                        1715,
                        1716,
                        1717,
                        1718,
                        1719,
                        1720,
                        1721,
                        1723,
                        1724,
                        1725,
                        1726,
                        1727
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'trimLeadingZeroesForceMinLength(byte)')": [
                        322
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'trimLeadingZeroesForceMinLength(byte)')": [
                        322
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isDirectory')": [
                        779,
                        780
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'hashCode')": [
                        897,
                        898
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isDirectory')": [
                        779
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'hashCode')": [
                        896
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', 'nextBlock')": [
                        252,
                        253,
                        254
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'fill')": [
                        162,
                        163,
                        164
                    ]
                }
            }
        }
    },
    "239e19926ea3afd6f095666298fe23aaeaff56e7": {
        "authored_data": "2022 Feb 20 00:34",
        "commit.message": "Use Math.min alculations.",
        "commit.author.name": "Gary Gregory",
        "pcid": "87fd7cbabeaebfcb02d87fb09e2c6a76c7aec010",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BlockSort.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'fmin(int,int)')": [
                        318,
                        319
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', None)": [
                        320,
                        321
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'fallbackQSort3(int,int,int,int)')": [
                        424,
                        426
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'fallbackQSort3(int,int,int,int)')": [
                        420,
                        422
                    ]
                }
            }
        }
    },
    "87fd7cbabeaebfcb02d87fb09e2c6a76c7aec010": {
        "authored_data": "2022 Feb 20 00:32",
        "commit.message": "Use Math.min and Math.max calculations. (#247)\n\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "c3a8c55d8bada5d6ac650a34ff2d461ab167f7e1",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'read(byte,int,int)')": [
                        484,
                        485
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'read(byte,int,int)')": [
                        484
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'sanityCheckFilesInfo(ByteBuffer,ArchiveStatistics)')": [
                        1364
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'sanityCheckFilesInfo(ByteBuffer,ArchiveStatistics)')": [
                        1364
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'recvDecodingTables')": [
                        517
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'recvDecodingTables')": [
                        517
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'hbMakeCodeLengths(byte,int,Data,int,int)')": [
                        247,
                        248,
                        249,
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'hbMakeCodeLengths(byte,int,Data,int,int)')": [
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BlockSort.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', None)": [
                        121,
                        122
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'fmin(int,int)')": [
                        320
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        881,
                        882,
                        884,
                        885
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', None)": [
                        121
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'fmin(int,int)')": [
                        319
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        880,
                        882
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        472
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/BHSDCodec.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'encode(int,int)')": [
                        313,
                        314,
                        315,
                        316,
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'encode(int,int)')": [
                        313,
                        314
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'isEqual(byte,int,int,byte,int,int,boolean)')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'isEqual(byte,int,int,byte,int,int,boolean)')": [
                        140
                    ]
                }
            }
        }
    },
    "228b9569593f4f8b5e78f54837d484eebbfc248c": {
        "authored_data": "2022 Feb 17 19:59",
        "commit.message": "Calculate median-of-3 on unsigned values (#242)\n\n",
        "commit.author.name": "Peter Dettman",
        "pcid": "af2339a30fdf363da730832264682a4a9dbec0a4",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BlockSort.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'med3(byte,byte,byte)')": [
                        793
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        829,
                        830
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'med3(int,int,int)')": [
                        793
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        829,
                        830,
                        831
                    ]
                }
            }
        }
    },
    "af2339a30fdf363da730832264682a4a9dbec0a4": {
        "authored_data": "2022 Feb 14 15:56",
        "commit.message": "Use {} notation.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ee88e69be20ed3f0302acf2e1dd911cbf995aedf",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        152
                    ]
                }
            }
        }
    }
}