{
    "f43c608cf422817a3280cb2a2cbe749ee090d9d3": {
        "authored_data": "2019 Aug 16 06:10",
        "commit.message": "COMPRESS-479 use strategy pattern to handle unparseable extra fields\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2bf678bbc6c6002569559b90ea29a031f035f067",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField,ParseErrorBehavior)')": [
                        160,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        331
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraFieldBehavior)')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraFieldBehavior,ParseErrorBehavior)')": [
                        160,
                        170,
                        171,
                        172,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        311,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ]
                }
            }
        }
    },
    "2bf678bbc6c6002569559b90ea29a031f035f067": {
        "authored_data": "2019 Aug 13 18:45",
        "commit.message": "another Arrays.copyOf case\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "73d237f35106a50d0230e1fc22c0ac5c78ebbba8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'copyOf(ZipExtraField)')": [
                        513
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'copyOf(ZipExtraField,int)')": [
                        518,
                        519,
                        520
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getRawName')": [
                        824,
                        825,
                        826
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'copyOf(ZipExtraField)')": [
                        513
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'copyOf(ZipExtraField,int)')": [
                        518
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getRawName')": [
                        822
                    ]
                }
            }
        }
    },
    "73d237f35106a50d0230e1fc22c0ac5c78ebbba8": {
        "authored_data": "2019 Aug 13 18:45",
        "commit.message": "COMPRESS-479 control extra field parsing via ZipArchiveEntry\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "88e26c9ffac61713372378c6f0225cd1a8b676e9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        177,
                        178
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtra(byte)')": [
                        621
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setCentralDirectoryExtra(byte)')": [
                        648
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'mergeExtraFields(ZipExtraField,boolean)')": [
                        853,
                        854,
                        855,
                        856,
                        857,
                        858
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        177,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        488,
                        489,
                        537,
                        545,
                        546,
                        554,
                        555,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106,
                        1107,
                        1108,
                        1109,
                        1110,
                        1111,
                        1112,
                        1113,
                        1114,
                        1115,
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124,
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151,
                        1152,
                        1153,
                        1154,
                        1155,
                        1156,
                        1157,
                        1158,
                        1159,
                        1160,
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166,
                        1167,
                        1168,
                        1169,
                        1170,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1183,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190,
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1196,
                        1197
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getExtraFields(ExtraFieldParsingMode)')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findUnparseable(List)')": [
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findMatching(ZipShort,List)')": [
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtra(byte)')": [
                        683,
                        684
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setCentralDirectoryExtra(byte)')": [
                        711,
                        712,
                        715
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'mergeExtraFields(ZipExtraField,boolean)')": [
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944
                    ],
                    "(None, None)": [
                        1198,
                        1199
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'setNameAndCommentFromExtraFields(ZipArchiveEntry,byte,byte)')": [
                        236,
                        237,
                        246,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'setNameAndCommentFromExtraFields(ZipArchiveEntry,byte,byte)')": [
                        236,
                        237,
                        238,
                        247,
                        248,
                        249
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        242,
                        243,
                        244,
                        245,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        264,
                        265,
                        266
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'streamSkipsOverUnicodeExtraFieldWithUnsupportedVersion')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'zipFileSkipsOverUnicodeExtraFieldWithUnsupportedVersion')": [
                        259,
                        260,
                        261,
                        262,
                        263
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        30,
                        307,
                        308,
                        309
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', None)": [
                        37,
                        38,
                        39,
                        299
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', 'reparsingUnicodeExtraWithUnsupportedversionThrowsInStrictMode')": [
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306
                    ]
                }
            }
        }
    },
    "88e26c9ffac61713372378c6f0225cd1a8b676e9": {
        "authored_data": "2019 Aug 13 16:41",
        "commit.message": "Revert \"COMPRESS-479 introduce a parameter class for zip readers\"\n\nThis reverts commit 0c4f64c2bebd85a96be8a07b1ad700c7688cbe02.\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0c4f64c2bebd85a96be8a07b1ad700c7688cbe02",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        84,
                        168,
                        172,
                        183,
                        195,
                        196,
                        197,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        299,
                        300,
                        345
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        83,
                        84,
                        88,
                        89,
                        90,
                        171,
                        175,
                        186,
                        198,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        272,
                        317
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        42
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        113,
                        140,
                        141,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        160,
                        174,
                        188,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        241,
                        246,
                        249,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        271,
                        291,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        360,
                        365,
                        369,
                        372,
                        376,
                        380
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEncoding')": [
                        405,
                        406,
                        407
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getUnixSymlink(ZipArchiveEntry)')": [
                        653
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        766,
                        829
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        135,
                        136,
                        137,
                        138,
                        139,
                        156,
                        163,
                        164,
                        165,
                        166,
                        167,
                        174,
                        188,
                        202,
                        219,
                        237,
                        238,
                        239,
                        240,
                        247,
                        251,
                        252,
                        253,
                        254,
                        255,
                        268,
                        288,
                        312,
                        334,
                        335,
                        336,
                        337,
                        345,
                        348,
                        352,
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEncoding')": [
                        383
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getUnixSymlink(ZipArchiveEntry)')": [
                        629
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        742,
                        805
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        198,
                        200,
                        278,
                        280,
                        284,
                        286,
                        290,
                        292,
                        296,
                        298,
                        302,
                        304,
                        308,
                        310
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testEncodingOutputStream')": [
                        357,
                        358
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        198,
                        200,
                        278,
                        280,
                        284,
                        286,
                        290,
                        292,
                        296,
                        298,
                        302,
                        304,
                        308,
                        310
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testEncodingOutputStream')": [
                        357,
                        358
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Maven221MultiVolumeTest', 'testRead7ZipMultiVolumeArchiveForStream')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Maven221MultiVolumeTest', 'testRead7ZipMultiVolumeArchiveForStream')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchive')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchiveForStream')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchive')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchiveForStream')": [
                        164
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileIgnoringLocalFileHeaderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileIgnoringLocalFileHeaderTest', 'openZipWithoutLFH(String)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileIgnoringLocalFileHeaderTest', 'openZipWithoutLFH(String)')": [
                        106
                    ]
                }
            }
        }
    },
    "0c4f64c2bebd85a96be8a07b1ad700c7688cbe02": {
        "authored_data": "2019 Aug 12 20:15",
        "commit.message": "COMPRESS-479 introduce a parameter class for zip readers\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8cc87c6fef9abfe6553bbad7ba47257c2d57848a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        83,
                        84,
                        88,
                        89,
                        90,
                        171,
                        175,
                        186,
                        198,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        272,
                        317
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        84,
                        168,
                        172,
                        183,
                        195,
                        196,
                        197,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        299,
                        300,
                        345
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        135,
                        136,
                        137,
                        138,
                        139,
                        156,
                        163,
                        164,
                        165,
                        166,
                        167,
                        174,
                        188,
                        202,
                        219,
                        237,
                        238,
                        239,
                        240,
                        247,
                        251,
                        252,
                        253,
                        254,
                        255,
                        268,
                        288,
                        312,
                        334,
                        335,
                        336,
                        337,
                        345,
                        348,
                        352,
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEncoding')": [
                        383
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getUnixSymlink(ZipArchiveEntry)')": [
                        629
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        742,
                        805
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        113,
                        140,
                        141,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        160,
                        174,
                        188,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        241,
                        246,
                        249,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        271,
                        291,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        360,
                        365,
                        369,
                        372,
                        376,
                        380
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEncoding')": [
                        405,
                        406,
                        407
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getUnixSymlink(ZipArchiveEntry)')": [
                        653
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        766,
                        829
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        198,
                        200,
                        278,
                        280,
                        284,
                        286,
                        290,
                        292,
                        296,
                        298,
                        302,
                        304,
                        308,
                        310
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testEncodingOutputStream')": [
                        357,
                        358
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        198,
                        200,
                        278,
                        280,
                        284,
                        286,
                        290,
                        292,
                        296,
                        298,
                        302,
                        304,
                        308,
                        310
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testEncodingOutputStream')": [
                        357,
                        358
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Maven221MultiVolumeTest', 'testRead7ZipMultiVolumeArchiveForStream')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Maven221MultiVolumeTest', 'testRead7ZipMultiVolumeArchiveForStream')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchive')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchiveForStream')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchive')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadWinZipArchiveForStream')": [
                        164
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileIgnoringLocalFileHeaderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileIgnoringLocalFileHeaderTest', 'openZipWithoutLFH(String)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileIgnoringLocalFileHeaderTest', 'openZipWithoutLFH(String)')": [
                        106
                    ]
                }
            }
        }
    },
    "8cc87c6fef9abfe6553bbad7ba47257c2d57848a": {
        "authored_data": "2019 May 12 10:14",
        "commit.message": "COMPRESS-479 allow zip extra fields to be degraded to unknown on parser errors\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "40b1d2fb8ff2eb4374eda8169524fade205a5e6c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        176,
                        177,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        188,
                        189,
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        308,
                        309,
                        310,
                        322,
                        323,
                        324,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField,ParseErrorBehavior)')": [
                        159,
                        160,
                        161,
                        200,
                        201,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parseField(ZipShort,boolean,byte,int,int)')": [
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'fillField(ZipExtraField,boolean,byte,int,int)')": [
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321
                    ],
                    "(None, None)": [
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392
                    ]
                }
            }
        }
    },
    "40b1d2fb8ff2eb4374eda8169524fade205a5e6c": {
        "authored_data": "2019 Aug 11 15:49",
        "commit.message": "make varius places where bad data can cause RuntimeExceptions throw checked exceptions\n\ninspired by COMPRESS-490\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d8ca982fa574c18e1501ac1018ec3466a6b73de9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readCString(int)')": [
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        151,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readNewEntry(boolean)')": [
                        389,
                        390,
                        391,
                        397,
                        398,
                        399
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldAsciiEntry')": [
                        428,
                        429,
                        430,
                        432,
                        433,
                        434
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        462,
                        463,
                        464,
                        466,
                        467,
                        468
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readCString(int)')": [
                        485,
                        486,
                        487
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', None)": [
                        66,
                        67
                    ],
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', 'resetBlockSize(int,boolean)')": [
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#AES256SHA256Decoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/BoundedSeekableByteChannelInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#BoundedSeekableByteChannelInputStream', 'read(byte,int,int)')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#BoundedSeekableByteChannelInputStream', 'read(byte,int,int)')": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'getOptionsFromCoder(Coder,InputStream)')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'getDictionarySize(Coder)')": [
                        80,
                        83,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'getOptionsFromCoder(Coder,InputStream)')": [
                        69,
                        70
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'getDictionarySize(Coder)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        90,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMADecoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#LZMADecoder', 'getOptionsFromCoder(Coder,InputStream)')": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readHeaders(byte)')": [
                        504,
                        506,
                        507,
                        508
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readPackInfo(ByteBuffer,Archive)')": [
                        648,
                        656,
                        657,
                        658
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUnpackInfo(ByteBuffer,Archive)')": [
                        678,
                        684,
                        701,
                        702
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readHeaders(byte)')": [
                        504
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readArchiveProperties(ByteBuffer)')": [
                        577
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readEncodedHeader(ByteBuffer,Archive,byte)')": [
                        608
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readPackInfo(ByteBuffer,Archive)')": [
                        645,
                        646,
                        649,
                        657,
                        658,
                        659
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUnpackInfo(ByteBuffer,Archive)')": [
                        679,
                        680,
                        681,
                        687,
                        696,
                        705,
                        706
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readSubStreamsInfo(ByteBuffer,Archive)')": [
                        734
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFolder(ByteBuffer)')": [
                        811,
                        836,
                        847,
                        849,
                        856,
                        869
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFilesInfo(ByteBuffer,Archive)')": [
                        923,
                        964
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        1390
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'assertFitsIntoInt(String,long)')": [
                        1391,
                        1392,
                        1393
                    ],
                    "(None, None)": [
                        1394,
                        1395
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraField', 'parseFromLocalFileData(byte,int,int)')": [
                        291,
                        292,
                        293
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/BinaryTree.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', None)": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'decode(InputStream,int)')": [
                        117,
                        118,
                        119,
                        120,
                        141,
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/BitStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#BitStream', 'nextBits(int)')": [
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        164,
                        193
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        164,
                        165,
                        166,
                        167,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        173
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        174,
                        175
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', None)": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'assertMinimalLength(int,int)')": [
                        198,
                        199,
                        200,
                        201,
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ResourceAlignmentExtraField', None)": [
                        69,
                        70,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0015_CertificateIdForFile', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0015_CertificateIdForFile', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        72,
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0016_CertificateIdForCentralDirectory', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0016_CertificateIdForCentralDirectory', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseCentralDirectoryFormat(byte,int,int)')": [
                        302
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFileFormat(byte,int,int)')": [
                        330,
                        332,
                        333,
                        334,
                        341,
                        342,
                        343,
                        345,
                        348,
                        349,
                        350,
                        351
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        372
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        378
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        424,
                        425
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseCentralDirectoryFormat(byte,int,int)')": [
                        305,
                        306,
                        307,
                        308,
                        316
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFileFormat(byte,int,int)')": [
                        337,
                        338,
                        339,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        353,
                        354,
                        355,
                        356,
                        359,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        369,
                        373,
                        375,
                        376,
                        377,
                        378,
                        380,
                        381,
                        382,
                        386,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        405,
                        406
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        412,
                        413
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', None)": [
                        417
                    ],
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'assertDynamicLengthFits(String,int,int,int)')": [
                        418,
                        419,
                        420,
                        421,
                        422,
                        423
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestamp', 'parseFromLocalFileData(byte,int,int)')": [
                        224,
                        228,
                        229,
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestamp', 'parseFromLocalFileData(byte,int,int)')": [
                        222,
                        223,
                        224,
                        227
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'parseFromLocalFileData(byte,int,int)')": [
                        229,
                        230,
                        235,
                        236
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'parseFromLocalFileData(byte,int,int)')": [
                        228,
                        229,
                        230,
                        231,
                        234,
                        235,
                        236,
                        237,
                        238,
                        243,
                        244,
                        245,
                        246,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        131,
                        156
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', 'initializeTables(int,int)')": [
                        135,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', 'initializeTables(int)')": [
                        159,
                        160,
                        161,
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', 'parseTurnsArrayIndexOutOfBoundsIntoZipException')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        114,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', 'parseTurnsArrayIndexOutOfBoundsIntoZipException')": [
                        107,
                        108,
                        109,
                        112,
                        118
                    ],
                    "(None, None)": [
                        284,
                        285
                    ]
                }
            }
        }
    },
    "d8ca982fa574c18e1501ac1018ec3466a6b73de9": {
        "authored_data": "2019 Aug 11 14:59",
        "commit.message": "assorted boy-scout fixes and cleanups while looking for something else\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2ed55677a4d8f8527a75e587cd5d5aa799004f1f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        109,
                        110,
                        111,
                        112,
                        143,
                        144,
                        145,
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        110,
                        111,
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readString(DataInputStream)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readString(DataInputStream)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#AES256SHA256Decoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#AES256SHA256Decoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        114,
                        115,
                        116
                    ],
                    "(None, None)": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AsiExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraField', 'parseFromLocalFileData(byte,int,int)')": [
                        277
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraField', 'parseFromLocalFileData(byte,int,int)')": [
                        277
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/BinaryTree.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'decode(InputStream,int)')": [
                        118
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        26,
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'decode(InputStream,int)')": [
                        120,
                        121,
                        122,
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeCentralDirectoryData(ZipExtraField)')": [
                        261,
                        262,
                        263,
                        264,
                        268,
                        269,
                        270
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeCentralDirectoryData(ZipExtraField)')": [
                        261,
                        262,
                        263,
                        264,
                        268,
                        269,
                        270
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        189,
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromLocalFileData(byte,int,int)')": [
                        174
                    ],
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnparseableExtraFieldData', 'parseFromLocalFileData(byte,int,int)')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnparseableExtraFieldData', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        113,
                        114
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnparseableExtraFieldData', 'parseFromLocalFileData(byte,int,int)')": [
                        101
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnparseableExtraFieldData', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'parseFromLocalFileData(byte,int,int)')": [
                        133,
                        134,
                        135
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        147,
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'parseFromLocalFileData(byte,int,int)')": [
                        135
                    ],
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'parseFromCentralDirectoryData(byte,int,int)')": [
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestamp', 'getCentralDirectoryData')": [
                        203,
                        204,
                        205,
                        208,
                        209
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestamp', 'getCentralDirectoryData')": [
                        206
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        120,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        120,
                        121
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(Calendar,long,byte,int)')": [
                        78
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'copy(byte)')": [
                        293,
                        294,
                        295
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(Calendar,long,byte,int)')": [
                        79
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'copy(byte)')": [
                        294
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'init(boolean)')": [
                        185,
                        193
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'readToNull(DataInput)')": [
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'init(boolean)')": [
                        192
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'readToNull(DataInput)')": [
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        101,
                        183,
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        101,
                        183,
                        196,
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/InMemoryCachingStreamBridge.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/AsiExtraFieldTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraFieldTest', 'testReparse')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AsiExtraFieldTest', 'testReparse')": [
                        139
                    ]
                }
            }
        }
    },
    "2ed55677a4d8f8527a75e587cd5d5aa799004f1f": {
        "authored_data": "2019 Aug 10 13:39",
        "commit.message": "zstd input stream could miss counting uncompressed bytes\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "1a14a23a05f7104e3d41a25a0f7e78ae1556285e",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'read(byte)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'read(byte)')": [
                        58
                    ]
                }
            }
        }
    },
    "1a14a23a05f7104e3d41a25a0f7e78ae1556285e": {
        "authored_data": "2019 Aug 09 15:18",
        "commit.message": "COMPRESS-486 improve documentation\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "91c2f0df50e86c65131cf9b83f1cba2e10c9786f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archiver.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        115,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        115,
                        116,
                        168,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/CloseableConsumer.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        53,
                        54,
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/Expander.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Expander', None)": [
                        126,
                        172,
                        220
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Expander', None)": [
                        126,
                        127,
                        173,
                        174,
                        222,
                        223
                    ]
                }
            }
        }
    }
}