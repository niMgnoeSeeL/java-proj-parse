{
    "1935e35490009d8fa1ca62f92a861ef6d958bd5b": {
        "authored_data": "2016 Apr 09 00:32",
        "commit.message": "Not needed",
        "commit.author.name": "Sebb",
        "pcid": "ff0d651478eaa36358185e2f7552145e657e111b",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreatorTest.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                }
            }
        }
    },
    "ff0d651478eaa36358185e2f7552145e657e111b": {
        "authored_data": "2016 Apr 09 00:30",
        "commit.message": "TODO",
        "commit.author.name": "Sebb",
        "pcid": "4bb50e3ab552c21f724926306806530b4ae96122",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', None)": [
                        251,
                        253,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', None)": [
                        251,
                        253,
                        254
                    ]
                }
            }
        }
    },
    "4bb50e3ab552c21f724926306806530b4ae96122": {
        "authored_data": "2016 Apr 09 00:28",
        "commit.message": "SVNUID not needed; class does not implement Serializable",
        "commit.author.name": "Sebb",
        "pcid": "bda90579ebafc6b9f841bbd0567f6a9e5df1575f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/X0014_X509Certificates.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0014_X509Certificates', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0015_CertificateIdForFile', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0016_CertificateIdForCentralDirectory', None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', None)": [
                        246
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0019_EncryptionRecipientCertificateList', None)": [
                        52
                    ]
                }
            }
        }
    },
    "e158fc108cacc0b4f73d37044e48a04137596b67": {
        "authored_data": "2016 Apr 08 17:55",
        "commit.message": "Close resource",
        "commit.author.name": "Sebb",
        "pcid": "d2014e1e04dfea6c62aca314b8b15c269b675d9d",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'paxHeaderEntryWithEmptyValueRemovesKey')": [
                        80
                    ]
                }
            }
        }
    },
    "d2014e1e04dfea6c62aca314b8b15c269b675d9d": {
        "authored_data": "2016 Apr 08 17:54",
        "commit.message": "Missing case statements",
        "commit.author.name": "Sebb",
        "pcid": "d378ed45084b93c481d597152054800a2a829154",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445
                    ]
                }
            }
        }
    },
    "d378ed45084b93c481d597152054800a2a829154": {
        "authored_data": "2016 Apr 06 17:21",
        "commit.message": "Statement unnecessarily nested within else clause.",
        "commit.author.name": "ggregory",
        "pcid": "18dcf384371013df8b79da55e258bb5ddbb4d5f0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        212,
                        213,
                        214,
                        219,
                        220,
                        221,
                        226,
                        227,
                        228,
                        233,
                        234,
                        235,
                        240,
                        241,
                        242,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        293,
                        294,
                        295,
                        300,
                        301,
                        302,
                        307,
                        308,
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        212,
                        213,
                        218,
                        219,
                        224,
                        225,
                        230,
                        231,
                        236,
                        237,
                        242,
                        243
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        287,
                        288,
                        293,
                        294,
                        299,
                        300
                    ]
                }
            }
        }
    },
    "18dcf384371013df8b79da55e258bb5ddbb4d5f0": {
        "authored_data": "2016 Apr 06 09:06",
        "commit.message": "The static field should be accessed directly.",
        "commit.author.name": "ggregory",
        "pcid": "9045ef9367f390434eb7b4b0e16a92413ef6c304",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreatorTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ParallelScatterZipCreatorTest', 'createZipArchiveEntry(Map,int,byte)')": [
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.compress.archivers.zip#ParallelScatterZipCreatorTest', 'createZipArchiveEntry(Map,int,byte)')": [
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStreamTest', 'putArchiveEntry')": [
                        53,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStreamTest', 'putArchiveEntry')": [
                        54,
                        59
                    ]
                }
            }
        }
    }
}