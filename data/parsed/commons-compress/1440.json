{
    "5ce60be9d55c62b72262680249ad933850aaa064": {
        "authored_data": "2017 Apr 06 13:18",
        "commit.message": "fix calculation of self-copy boundaries when expanding back-references\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "62202d2acd00b43415ce9ed45e1c37f42d6ef616",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'expandFromList(byte,int,int)')": [
                        267,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'expandFromList(byte,int,int)')": [
                        267,
                        269
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', None)": [
                        322,
                        343,
                        344
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingWithFinalBackreferenceAndOffsetBiggerThan1')": [
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ]
                }
            }
        }
    },
    "62202d2acd00b43415ce9ed45e1c37f42d6ef616": {
        "authored_data": "2017 Apr 06 08:59",
        "commit.message": "don't use zero-filled arrays in tests, they mask a bug\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "47213feb954bef78d646da4f4ffe6a8156c7d3f5",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFinalBlockWithoutTrailingLZ77Literals')": [
                        197,
                        211,
                        227,
                        229
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFinalBlockWithTrailingLZ77Literals')": [
                        243,
                        245,
                        261,
                        263,
                        278,
                        280
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFourPairs')": [
                        298,
                        300
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'compress(int,int)')": [
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFinalBlockWithoutTrailingLZ77Literals')": [
                        197,
                        211,
                        227,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFinalBlockWithTrailingLZ77Literals')": [
                        245,
                        247,
                        248,
                        249,
                        265,
                        267,
                        268,
                        269,
                        284,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'rewritingOfFourPairs')": [
                        306,
                        308,
                        309,
                        310
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'compress(int,int)')": [
                        327,
                        328
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', None)": [
                        345
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStreamTest', 'prepareExpected(int)')": [
                        346,
                        347,
                        348,
                        349
                    ],
                    "(None, None)": [
                        350
                    ]
                }
            }
        }
    },
    "47213feb954bef78d646da4f4ffe6a8156c7d3f5": {
        "authored_data": "2017 Apr 06 08:32",
        "commit.message": "cosmetics\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3381e41abe04ae99f984f3d2d63f201e5ee6f808",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'rewriteLastPairs')": [
                        388,
                        389,
                        391,
                        392,
                        395
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        490,
                        491,
                        492
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'rewriteLastPairs')": [
                        388,
                        389,
                        391
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        488,
                        489,
                        490
                    ]
                }
            }
        }
    },
    "3381e41abe04ae99f984f3d2d63f201e5ee6f808": {
        "authored_data": "2017 Apr 05 19:49",
        "commit.message": "actually use 4MB when you say 4MB\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f7e0a4a0212424edd1765d1abe66772af069dafb",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', None)": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', None)": [
                        70
                    ]
                }
            }
        }
    },
    "f7e0a4a0212424edd1765d1abe66772af069dafb": {
        "authored_data": "2017 Apr 02 11:09",
        "commit.message": "add lazy matching to LZ77 compressors\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "86e2bd0781261b5b0192bdd2c5285e0982daf8c2",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', 'compress')": [
                        397,
                        398,
                        407,
                        408,
                        409,
                        410,
                        411
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', None)": [
                        449,
                        450
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', 'longestMatchForNextPosition(int)')": [
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz77support/Parameters.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#Parameters', None)": [
                        55,
                        194,
                        210,
                        215,
                        218
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#Parameters', None)": [
                        55,
                        56,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        209,
                        210,
                        221,
                        223,
                        236,
                        237,
                        240,
                        245,
                        246,
                        249,
                        250,
                        258,
                        259,
                        313,
                        314,
                        315,
                        318,
                        319,
                        320,
                        321,
                        322,
                        325,
                        326
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#Parameters', 'getLazyMatching')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#Parameters', 'getLazyMatchingThreshold')": [
                        323,
                        324
                    ]
                }
            }
        }
    },
    "86e2bd0781261b5b0192bdd2c5285e0982daf8c2": {
        "authored_data": "2017 Apr 02 10:43",
        "commit.message": "misleading test name\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b893471b95285cc2364e3b2b8f6220ac6dc362a4",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/lz77support/ParametersTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#ParametersTest', 'windowSizeMustNotBeAPowerOfTwo')": [
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#ParametersTest', 'windowSizeMustBeAPowerOfTwo')": [
                        118
                    ]
                }
            }
        }
    },
    "b893471b95285cc2364e3b2b8f6220ac6dc362a4": {
        "authored_data": "2017 Mar 29 12:32",
        "commit.message": "ensure CPIO only uses the least-significant 32bit of CRC\n\nhttps://people.freebsd.org/~kientzle/libarchive/man/cpio.5.txt\n\n> The CRC format is identical to the new ASCII format described in the previous section except that the magic field is set to ``070702'' and the check field is set to the sum of all bytes in the file data. This sum is computed treating all bytes as unsigned values and using unsigned arithmetic. Only the least-significant 32 bits of the sum are stored.\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "44d376b737199d42f0d3f195f1c2f82d33b77033",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getChksum')": [
                        379
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'setChksum(long)')": [
                        682
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getChksum')": [
                        379
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'setChksum(long)')": [
                        682
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'write(byte,int,int)')": [
                        437
                    ]
                }
            }
        }
    },
    "0bc43314c1216a88d0e281e7ed66244c47c57c56": {
        "authored_data": "2017 Mar 29 11:44",
        "commit.message": "CPIO crc overflow resolved for large files\n\nWhen unpacking a CPIO file containing a large file the crc check will\noverflow and throw an IOException(\"CRC Error...\").\n\nDid not find a nice wa to test this since it requires a very lasrge\ninput file.\n",
        "commit.author.name": "dcollin",
        "pcid": "785233a6fe47009e8b92db72e778f7932db978cd",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        332
                    ]
                }
            }
        }
    },
    "785233a6fe47009e8b92db72e778f7932db978cd": {
        "authored_data": "2017 Mar 26 17:04",
        "commit.message": "try to make sense in javadocs\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d01a053d4f3ef9d791be2d5717de305e515be002",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', None)": [
                        115,
                        116,
                        117,
                        152,
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', None)": [
                        115,
                        116,
                        117,
                        152,
                        153,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', None)": [
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', None)": [
                        70,
                        71
                    ]
                }
            }
        }
    }
}