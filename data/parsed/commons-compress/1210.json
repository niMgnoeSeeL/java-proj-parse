{
    "c36fef5f567576ae143ad83fb0b0fa68998cab4c": {
        "authored_data": "2018 Jan 04 17:02",
        "commit.message": "according to winzip XZ now is a ZIP compression method as well\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "7e8e9bf968665d59ac11dbd11dceea7c01c0a1f9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        518
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java": {
                "new": {
                    "(None, None)": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            }
        }
    },
    "7e8e9bf968665d59ac11dbd11dceea7c01c0a1f9": {
        "authored_data": "2018 Jan 04 16:59",
        "commit.message": "PMD is unhappy\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c3be6fb3dda1b433aaf61f5053c5d85370b28e35",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorOutputStream', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorOutputStream', None)": [
                        35
                    ]
                }
            }
        }
    },
    "07cc1a278b217d45cb090ff6cb3a7934105cb2d0": {
        "authored_data": "2018 Jan 04 15:51",
        "commit.message": "COMPRESS-380 Deflate64CompressorInputStream#available promised too much\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "79e76d5f48fc44ae3d716ac28ebe1a76ebb90b61",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        507
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        33,
                        34,
                        40,
                        42,
                        43,
                        46,
                        47
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'read(byte,int,int)')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'available')": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        39,
                        40,
                        43
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'available')": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'available')": [
                        171,
                        172
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        173,
                        181,
                        182,
                        213,
                        214,
                        215,
                        216,
                        217,
                        234,
                        235,
                        236,
                        237,
                        238,
                        318,
                        319,
                        320,
                        321,
                        322
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/BitInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.utils#BitInputStream', None)": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        111,
                        112
                    ],
                    "('org.apache.commons.compress.utils#BitInputStream', 'bitsAvailable')": [
                        109,
                        110
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'readWhenClosed')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenClosed')": [
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenInRange')": [
                        59,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        64,
                        66,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenOutOfRange')": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeAfterReading')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeCallsDecoder')": [
                        93
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeIsDelegatedJustOnce')": [
                        103
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlock')": [
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'readWhenClosed')": [
                        43
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenClosed')": [
                        52
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'delegatesAvailable')": [
                        57,
                        59,
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeCallsDecoder')": [
                        69
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeIsDelegatedJustOnce')": [
                        79
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlock')": [
                        95
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        103
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockAvailable')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "(None, None)": [
                        114,
                        115,
                        116
                    ]
                }
            }
        }
    },
    "79e76d5f48fc44ae3d716ac28ebe1a76ebb90b61": {
        "authored_data": "2018 Jan 04 09:48",
        "commit.message": "COMPRESS-380 make Defalt64InputStream a CompressorInputStream\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a62c3d0d8301c450d5bd0ab1bd9bb3862aac5853",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        507
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        31
                    ]
                }
            }
        }
    },
    "a62c3d0d8301c450d5bd0ab1bd9bb3862aac5853": {
        "authored_data": "2018 Jan 04 08:27",
        "commit.message": "COMPRESS-380 add testcase for deflat64 support\n\nbased on an archive kindly provided by Dawid Weiss\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2042aa001474179a031a368f9d6ec73c2c686965",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        584,
                        585,
                        586,
                        587,
                        598,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'readDeflate64CompressedStream')": [
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597
                    ]
                }
            }
        }
    },
    "ff5fb8a7a657a9068e8cade4566c69c62a1825d9": {
        "authored_data": "2018 Jan 03 16:24",
        "commit.message": "COMPRESS-435 bring back EOD class for backwards compatibility\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ce3699357b7bddba551a9606b6ca71152ee98d52",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', None)": [
                        180,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', None)": [
                        180,
                        184,
                        185,
                        186,
                        187
                    ]
                }
            }
        }
    },
    "2042aa001474179a031a368f9d6ec73c2c686965": {
        "authored_data": "2018 Jan 03 14:20",
        "commit.message": "COMPRESS-380 change package name\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3e9b0e88ff11a38d05b303f1bd1f13a0afa9380e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            }
        }
    },
    "3e9b0e88ff11a38d05b303f1bd1f13a0afa9380e": {
        "authored_data": "2018 Jan 03 14:15",
        "commit.message": "COMPRESS-380 add license headers\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d07f04b73c06c45b75f53f38b03b25c987b7bca5",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/zip/Deflate64InputStream.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zip/HuffmanDecoder.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zip/HuffmanState.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/zip/Deflate64InputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/zip/HuffmanDecoderTest.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                }
            }
        }
    }
}