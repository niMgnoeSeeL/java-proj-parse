{
    "5127ee6b5830003c90f56d60bc67068e09c40f6d": {
        "authored_data": "2013 Jun 04 04:22",
        "commit.message": "COMPRESS-227 return Iterable rather than Iterator in new methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1489284 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a33995a2f3d38135cff872b9a97d9348e4e80403",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        319,
                        334
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries(String)')": [
                        323,
                        325,
                        326
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntriesInPhysicalOrder(String)')": [
                        338,
                        344
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        319,
                        334
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries(String)')": [
                        323,
                        325,
                        326
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntriesInPhysicalOrder(String)')": [
                        338,
                        344
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testDuplicateEntry')": [
                        220,
                        221,
                        223,
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testDuplicateEntry')": [
                        220,
                        222
                    ]
                }
            }
        }
    },
    "a33995a2f3d38135cff872b9a97d9348e4e80403": {
        "authored_data": "2013 Jun 03 19:13",
        "commit.message": "Fix support for 7z files that are > 2 GB.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1489111 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "29d9a8b1e5266a3fc645b1cb9ea4617abbb09c82",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUint64(DataInput)')": [
                        918,
                        923
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUint64(DataInput)')": [
                        918,
                        923
                    ]
                }
            }
        }
    },
    "29d9a8b1e5266a3fc645b1cb9ea4617abbb09c82": {
        "authored_data": "2013 Jun 03 09:58",
        "commit.message": "COMPRESS-229 aftermaths, properly deal with broken archives that end with an incomplete entry.  Unfortunately we don't have a test for this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1488947 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "601e4d7dbf966bc861f15c6dd657cb68772df08e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ]
                }
            }
        }
    },
    "601e4d7dbf966bc861f15c6dd657cb68772df08e": {
        "authored_data": "2013 Jun 03 09:20",
        "commit.message": "COMPRESS-229 properly parse GNU_LONGLNK entries, patch by Christoph Gysin\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1488935 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "7b117a459629338668b5f67cef99729606523c6f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        679,
                        680,
                        681,
                        682,
                        686,
                        687,
                        688
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isGNULongLinkEntry')": [
                        683,
                        684,
                        685
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        257
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getLongNameData')": [
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "new": {
                    "(None, None)": [
                        236,
                        237,
                        238,
                        239,
                        240
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        49,
                        55,
                        56
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        62,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        38
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        50,
                        53,
                        59,
                        60,
                        61,
                        70,
                        71,
                        112,
                        113
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'createSuite(String,String)')": [
                        72,
                        73,
                        74,
                        79,
                        80,
                        88,
                        97
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'getExpectedString(ArchiveEntry)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        115
                    ]
                }
            }
        }
    },
    "7b117a459629338668b5f67cef99729606523c6f": {
        "authored_data": "2013 May 29 12:59",
        "commit.message": "use LinkedList explicitly for the tiny gain getFirst() provides over get(0)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1487468 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b607aa2f6370fc2fd7090a02f94840f0c8ce7a42",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        97,
                        98
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntry(String)')": [
                        310,
                        311
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        928,
                        933
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        97,
                        98
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntry(String)')": [
                        310,
                        311
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        928,
                        933
                    ]
                }
            }
        }
    },
    "b607aa2f6370fc2fd7090a02f94840f0c8ce7a42": {
        "authored_data": "2013 May 28 23:56",
        "commit.message": "Unnecessary @SuppressWarnings(\"unchecked\") - these are not used for casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1487173 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "59925cea446a950b2624538f372c35f11090002a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        899
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        1041,
                        1042,
                        1043,
                        1044,
                        1081,
                        1082
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        371,
                        372
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        898
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        1040,
                        1041,
                        1078,
                        1079
                    ]
                }
            }
        }
    },
    "59925cea446a950b2624538f372c35f11090002a": {
        "authored_data": "2013 May 28 23:51",
        "commit.message": "Javadoc syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1487170 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "3f7f7685ad2ae43c920dbd224299c53585c308b2",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        209,
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        209,
                        230
                    ]
                }
            }
        }
    },
    "3f7f7685ad2ae43c920dbd224299c53585c308b2": {
        "authored_data": "2013 May 28 23:50",
        "commit.message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1487169 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "d31dc3696c0c7bbd9c9f7e662b30db6ed15bfe4c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        56,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        56,
                        79
                    ]
                }
            }
        }
    },
    "d31dc3696c0c7bbd9c9f7e662b30db6ed15bfe4c": {
        "authored_data": "2013 May 28 23:48",
        "commit.message": "Replace Deque (1.6) with List, as we don't need the extra Deque functionality\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1487167 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "344708bd21f2668df683abdf9387f92aa0e75168",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        98,
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntry(String)')": [
                        311,
                        312
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries(String)')": [
                        325
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        930,
                        935
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        97,
                        98
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntry(String)')": [
                        310,
                        311
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries(String)')": [
                        324
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        929,
                        934
                    ]
                }
            }
        }
    }
}