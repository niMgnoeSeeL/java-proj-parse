{
    "22b0d0629267b88749f78412caea672d6539a5b6": {
        "authored_data": "2018 Jul 01 11:46",
        "commit.message": "whitespace\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "af6fe141036d30bfd1613758b7a9fb413bf2bafc",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        256,
                        257,
                        258,
                        259
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        256,
                        257,
                        258,
                        259
                    ]
                }
            }
        }
    },
    "af6fe141036d30bfd1613758b7a9fb413bf2bafc": {
        "authored_data": "2018 Jul 01 11:45",
        "commit.message": "COMPRESS-455 handle APK Signing Block\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "53f6d42f748d771d5269aec5c377d5058e8cdf4c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        252,
                        257
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFully(byte)')": [
                        792,
                        794
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        254,
                        255
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFully(byte)')": [
                        794
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        795,
                        796,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106,
                        1107,
                        1108,
                        1109,
                        1110,
                        1111,
                        1112,
                        1113,
                        1114,
                        1115,
                        1151,
                        1152
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFully(byte,int)')": [
                        797,
                        798,
                        799,
                        801
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'isApkSigningBlock(byte)')": [
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124,
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150
                    ]
                }
            }
        }
    },
    "53f6d42f748d771d5269aec5c377d5058e8cdf4c": {
        "authored_data": "2018 Jul 01 09:54",
        "commit.message": "whitespace changes\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "16e358e242b41ac350fbd7ad9a93a0cae3e92564",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'close')": [
                        210,
                        211,
                        212,
                        214,
                        215
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'close')": [
                        210,
                        211,
                        212,
                        214,
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        486,
                        487,
                        488,
                        490,
                        491,
                        492
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        493
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        486,
                        487,
                        488,
                        490,
                        491,
                        492
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        493
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'close')": [
                        134,
                        135,
                        136,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'close')": [
                        134,
                        135,
                        136,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        306,
                        307,
                        308,
                        310,
                        311,
                        312
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        313
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        306,
                        307,
                        308,
                        310,
                        311,
                        312
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        313
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'close')": [
                        128,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'close')": [
                        128,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'close')": [
                        962,
                        963,
                        964,
                        966
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'destroy')": [
                        1604,
                        1605,
                        1606,
                        1608,
                        1609
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        1610
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'close')": [
                        962,
                        963,
                        964,
                        966
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'destroy')": [
                        1604,
                        1605,
                        1606,
                        1608,
                        1609
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        1610
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'close')": [
                        505,
                        507
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'close')": [
                        505,
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'close')": [
                        99,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'close')": [
                        99,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'close')": [
                        208,
                        210,
                        211,
                        212
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'close')": [
                        208,
                        210,
                        211,
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'close')": [
                        148,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'close')": [
                        148,
                        150
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', 'close')": [
                        130,
                        131,
                        132,
                        133,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', 'close')": [
                        130,
                        131,
                        132,
                        133,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', 'close')": [
                        230,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', 'close')": [
                        230,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', 'close')": [
                        118,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', None)": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', 'close')": [
                        118,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', None)": [
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', 'getInputView')": [
                        49,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', 'getInputView')": [
                        49,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'close')": [
                        148,
                        149,
                        150,
                        151,
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'close')": [
                        148,
                        149,
                        150,
                        151,
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', 'close')": [
                        106,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', 'close')": [
                        106,
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', 'close')": [
                        134,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', 'close')": [
                        134,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.java": {
                "old": {
                    "('org.apache.commons.compress.parallel#FileBasedScatterGatherBackingStore', 'close')": [
                        71,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.parallel#FileBasedScatterGatherBackingStore', 'close')": [
                        71,
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/FixedLengthBlockOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#FixedLengthBlockOutputStream', 'close')": [
                        187,
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#FixedLengthBlockOutputStream', 'close')": [
                        187,
                        189
                    ]
                }
            }
        }
    },
    "16e358e242b41ac350fbd7ad9a93a0cae3e92564": {
        "authored_data": "2018 Jul 01 09:49",
        "commit.message": "COMPRESS-457 improve resource cleanup in close() implementations\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e9f2dadb916063c1e97ab2bbf41bee059e277c19",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'close')": [
                        209,
                        213
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        488
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        485,
                        489
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        493
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'close')": [
                        133,
                        137
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        139
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        308
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        305,
                        309
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        313
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'close')": [
                        127,
                        129
                    ],
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', None)": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'close')": [
                        961,
                        965
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        967,
                        1610
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'destroy')": [
                        1603,
                        1607
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'close')": [
                        504,
                        506
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        508
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'close')": [
                        98,
                        100
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'close')": [
                        207,
                        209
                    ],
                    "(None, None)": [
                        213
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'close')": [
                        147,
                        149
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', 'close')": [
                        129,
                        134
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', None)": [
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', 'close')": [
                        229,
                        231
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorOutputStream', None)": [
                        233
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', 'close')": [
                        117,
                        119
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', None)": [
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', 'getInputView')": [
                        48,
                        50
                    ],
                    "(None, None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'close')": [
                        147,
                        152
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', 'close')": [
                        105,
                        107
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorOutputStream', None)": [
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', 'close')": [
                        133,
                        135
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', None)": [
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.java": {
                "new": {
                    "('org.apache.commons.compress.parallel#FileBasedScatterGatherBackingStore', 'close')": [
                        70,
                        72
                    ],
                    "(None, None)": [
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/FixedLengthBlockOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.utils#FixedLengthBlockOutputStream', 'close')": [
                        186,
                        188
                    ],
                    "('org.apache.commons.compress.utils#FixedLengthBlockOutputStream', None)": [
                        190
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        179,
                        180,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', None)": [
                        198
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'createArchiveWithDummyEntry(String,OutputStream,File)')": [
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206
                    ],
                    "(None, None)": [
                        207
                    ]
                }
            }
        }
    },
    "e9f2dadb916063c1e97ab2bbf41bee059e277c19": {
        "authored_data": "2018 Jun 28 15:54",
        "commit.message": "getCanonicalPath may return a path ending in a / already\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c03704d773dfa0dfc5b2e53b4c198a95d0213ca0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Expander.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveEntrySupplier,EntryWriter,File)')": [
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveEntrySupplier,EntryWriter,File)')": [
                        241,
                        242,
                        243,
                        244
                    ]
                }
            }
        }
    }
}