{
    "6082d6448ca1b3e922e0298707b33642ee90c587": {
        "authored_data": "2021 Mar 05 20:55",
        "commit.message": "Fix test leaking file handles.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "703d411f2a0d437245372a0347c1000eeb74f924",
        "changes": {
            "src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testDetection')": [
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testDetection')": [
                        70,
                        71,
                        72,
                        73,
                        75,
                        76,
                        77,
                        78,
                        80,
                        81,
                        82,
                        83,
                        85,
                        86,
                        87,
                        88,
                        90,
                        91,
                        92,
                        93,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.compress#DetectArchiverTestCase', None)": [
                        98
                    ]
                }
            }
        }
    },
    "703d411f2a0d437245372a0347c1000eeb74f924": {
        "authored_data": "2021 Mar 05 20:52",
        "commit.message": "Fix Javadoc warnings in builds.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "768722d6587f42354a95df02c493128a9fee28c7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        655,
                        656,
                        660,
                        774,
                        775,
                        777
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        655,
                        656,
                        660,
                        774,
                        775,
                        777
                    ]
                }
            }
        }
    },
    "768722d6587f42354a95df02c493128a9fee28c7": {
        "authored_data": "2021 Mar 05 20:48",
        "commit.message": "No need to nest in else.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "2ff3889207c676db08c5ea365d80c057934ce3c2",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'detect(InputStream)')": [
                        504,
                        506,
                        508,
                        510,
                        512
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'detect(InputStream)')": [
                        504,
                        505,
                        507,
                        508,
                        510,
                        511,
                        513,
                        514,
                        516,
                        517
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'finish')": [
                        249
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'finish')": [
                        249,
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        309,
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'write(byte,int,int)')": [
                        428
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'write(byte,int,int)')": [
                        428,
                        429
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'equals(Object)')": [
                        406
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'equals(Object)')": [
                        406,
                        407
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'initializeArchive(StartHeader,byte,boolean)')": [
                        539,
                        540,
                        541
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'initializeArchive(StartHeader,byte,boolean)')": [
                        539,
                        542
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'handleLongName(TarArchiveEntry,String,Map,String,byte,String)')": [
                        688
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'handleLongName(TarArchiveEntry,String,Map,String,byte,String)')": [
                        688,
                        689
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parseOctal(byte,int,int)')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parsePaxHeaders(InputStream,List,Map)')": [
                        676
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parseOctal(byte,int,int)')": [
                        131,
                        134
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parsePaxHeaders(InputStream,List,Map)')": [
                        675,
                        676
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/BinaryTree.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'addLeaf(int,int,int,int)')": [
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#BinaryTree', 'addLeaf(int,int,int,int)')": [
                        69,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        168,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnshrinkingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnshrinkingInputStream', 'decompressNextSymbol')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnshrinkingInputStream', 'decompressNextSymbol')": [
                        100,
                        101,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'trimLeadingZeroesForceMinLength(byte)')": [
                        327,
                        328,
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'trimLeadingZeroesForceMinLength(byte)')": [
                        327,
                        330
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getCompressedCount')": [
                        537,
                        539,
                        541,
                        543,
                        545,
                        547,
                        548
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        549
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        608,
                        612
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'findEocdRecord')": [
                        1125
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getCompressedCount')": [
                        537,
                        538,
                        540,
                        541,
                        543,
                        544,
                        546,
                        547,
                        549,
                        550,
                        552,
                        553
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        612,
                        613,
                        617,
                        618
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'findEocdRecord')": [
                        1131,
                        1132
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'longToBig(long)')": [
                        156
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'longToBig(long)')": [
                        156,
                        157
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartB')": [
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartB')": [
                        880,
                        886,
                        887
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        888
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartB')": [
                        840,
                        841,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartB')": [
                        880,
                        881,
                        887,
                        888
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'write(int)')": [
                        397,
                        398,
                        399
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'generateMTFValues')": [
                        1238,
                        1239,
                        1240,
                        1265,
                        1266,
                        1267
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'write(int)')": [
                        397,
                        400
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'generateMTFValues')": [
                        1237,
                        1240,
                        1263,
                        1266
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BlockSort.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainSimpleSort(BZip2CompressorOutputStream,int,int,int,int)')": [
                        669,
                        686,
                        688,
                        689,
                        691,
                        692,
                        693,
                        696,
                        697,
                        698,
                        701,
                        702,
                        703,
                        706,
                        707,
                        708,
                        711,
                        712,
                        713,
                        716,
                        717,
                        718,
                        721,
                        722,
                        723,
                        734,
                        736,
                        737,
                        739,
                        740,
                        741,
                        744,
                        745,
                        746,
                        749,
                        750,
                        751,
                        754,
                        755,
                        756
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        867,
                        868,
                        869,
                        870,
                        871
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainSimpleSort(BZip2CompressorOutputStream,int,int,int,int)')": [
                        685,
                        686,
                        691,
                        692,
                        693,
                        696,
                        697,
                        698,
                        701,
                        702,
                        703,
                        706,
                        707,
                        708,
                        711,
                        712,
                        713,
                        716,
                        717,
                        718,
                        721,
                        722,
                        723,
                        724,
                        733,
                        734,
                        739,
                        740,
                        741,
                        744,
                        745,
                        746,
                        749,
                        750,
                        751,
                        754,
                        755,
                        756,
                        757
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BlockSort', 'mainQSort3(BZip2CompressorOutputStream,int,int,int,int)')": [
                        866,
                        869,
                        870,
                        871
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte,int,int)')": [
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', 'write(byte,int,int)')": [
                        158,
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'clearUnusedPairs')": [
                        297,
                        298,
                        299,
                        300
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        301,
                        333
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'writeWritablePairs(int)')": [
                        329,
                        330,
                        331,
                        332
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'clearUnusedPairs')": [
                        297,
                        298,
                        299,
                        300
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'writeWritablePairs(int)')": [
                        328,
                        329,
                        330,
                        331
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'available')": [
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'available')": [
                        179,
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', 'decompressNextSymbol')": [
                        137,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', 'decompressNextSymbol')": [
                        137,
                        138,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'getStreamFor(String,int)')": [
                        222,
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'getStreamFor(String,int)')": [
                        223
                    ]
                }
            }
        }
    }
}