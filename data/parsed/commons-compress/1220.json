{
    "d07f04b73c06c45b75f53f38b03b25c987b7bca5": {
        "authored_data": "2018 Jan 03 14:14",
        "commit.message": "COMPRESS-380 initial patch by Christian Marquez Grabia\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e35049eabc2e204aeeb72aa4537eb3b0df2343b5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        506
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        506,
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        298
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsMethodOf(ZipArchiveEntry)')": [
                        334
                    ]
                }
            }
        }
    },
    "de9665f3cbaee56c5089392fbee0a6b81689ed8d": {
        "authored_data": "2017 Dec 30 11:24",
        "commit.message": "improve error message if an 3rd party library is missing\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6a80b208569f3d32e39224690a126e52ce06ad14",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream,boolean)')": [
                        565,
                        572,
                        579,
                        586
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        204,
                        205,
                        206,
                        207,
                        210,
                        211
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'youNeed(String,String)')": [
                        208,
                        209
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream,boolean)')": [
                        573,
                        580,
                        587,
                        594
                    ]
                }
            }
        }
    },
    "6a80b208569f3d32e39224690a126e52ce06ad14": {
        "authored_data": "2017 Dec 30 11:22",
        "commit.message": "we don't check for XZ or Brotli in the outputstream case either\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "48adbc5b44cb0d69d62b1725fcb085da8c5effff",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorOutputStream(String,OutputStream)')": [
                        693,
                        694,
                        695
                    ]
                }
            }
        }
    },
    "0c75ccec267ce902ff36278ba928b4573f4fb937": {
        "authored_data": "2017 Dec 30 09:53",
        "commit.message": "change bounds check to greater-equals to avoid arithmetic in loops\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ccf4ce767a6cc07f1a88a0c33393e394af3c328b",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'checkBounds(int,int,String)')": [
                        402,
                        407
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'hbCreateDecodeTables(int,int,int,char,int,int,int)')": [
                        434
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'recvDecodingTables')": [
                        490,
                        491,
                        492,
                        509
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode')": [
                        602,
                        623,
                        625,
                        635,
                        638,
                        642,
                        647,
                        662,
                        665,
                        686,
                        688,
                        698,
                        701,
                        705
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode0')": [
                        716,
                        719,
                        722,
                        726
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupBlock')": [
                        737,
                        749
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartA')": [
                        774
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartA')": [
                        800
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartB')": [
                        820
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartB')": [
                        859
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'checkBounds(int,int,String)')": [
                        402,
                        407
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'hbCreateDecodeTables(int,int,int,char,int,int,int)')": [
                        434
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'recvDecodingTables')": [
                        490,
                        491,
                        492,
                        509
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode')": [
                        602,
                        623,
                        625,
                        635,
                        638,
                        642,
                        647,
                        662,
                        665,
                        686,
                        688,
                        698,
                        701,
                        705
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode0')": [
                        716,
                        719,
                        722,
                        726
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupBlock')": [
                        737,
                        738,
                        750
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartA')": [
                        775
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartA')": [
                        801
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartB')": [
                        821
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartB')": [
                        860
                    ]
                }
            }
        }
    }
}