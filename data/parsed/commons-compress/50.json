{
    "06ad5fa79637e1ccc3850d1f51fc1d0e29b80069": {
        "authored_data": "2022 May 05 20:08",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ec83a42db1afa58a029c0fd6d8cecc1951716bd2",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/CompressorServiceLoaderTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorServiceLoaderTest', 'testInputStream')": [
                        32
                    ],
                    "('org.apache.commons.compress.compressors#CompressorServiceLoaderTest', 'testOutputStream')": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        28
                    ],
                    "('org.apache.commons.compress.compressors#CompressorServiceLoaderTest', 'testInputStream')": [
                        35,
                        36
                    ],
                    "('org.apache.commons.compress.compressors#CompressorServiceLoaderTest', 'testOutputStream')": [
                        41,
                        42
                    ]
                }
            }
        }
    },
    "ec83a42db1afa58a029c0fd6d8cecc1951716bd2": {
        "authored_data": "2022 May 05 20:06",
        "commit.message": "No console output.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "503ddc44116eca19c8338f709b484d9ddeb3fe22",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/jar/ExpandApkTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.jar#ExpandApkTest', 'println(T)')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.jar#ExpandApkTest', 'println(T)')": [
                        43
                    ]
                }
            }
        }
    },
    "503ddc44116eca19c8338f709b484d9ddeb3fe22": {
        "authored_data": "2022 May 05 20:01",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ea710145f34c0a4a286e22d93c11388584452b43",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        37,
                        38
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'constructorThrowsOnNullArg')": [
                        46,
                        47
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'constructorThrowsOnNonSplitZipFiles')": [
                        52,
                        56
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsThrowsOnNullArg')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forFilesThrowsOnNullArg')": [
                        111,
                        112
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forFilesOfTwoParametersThrowsOnNullArg')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'buildFromLastSplitSegmentThrowsOnNotZipFile')": [
                        140,
                        142
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forPathsThrowsOnNullArg')": [
                        186
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forPathsOfTwoParametersThrowsOnNullArg')": [
                        191
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        35,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'constructorThrowsOnNullArg')": [
                        47
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'constructorThrowsOnNonSplitZipFiles')": [
                        55
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsThrowsOnNullArg')": [
                        69
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg')": [
                        74
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forFilesThrowsOnNullArg')": [
                        108
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forFilesOfTwoParametersThrowsOnNullArg')": [
                        113
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'buildFromLastSplitSegmentThrowsOnNotZipFile')": [
                        136
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forPathsThrowsOnNullArg')": [
                        180
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forPathsOfTwoParametersThrowsOnNullArg')": [
                        185
                    ]
                }
            }
        }
    },
    "ea710145f34c0a4a286e22d93c11388584452b43": {
        "authored_data": "2022 May 05 19:58",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "973120be646cfe708eeb48c119544eebfdbc68dc",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/ServiceLoaderIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        25
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testNextThrowsNoSuchElementException')": [
                        39
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testRemoveThrowsUnsupportedOperationException')": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        26
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testNextThrowsNoSuchElementException')": [
                        40
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testRemoveThrowsUnsupportedOperationException')": [
                        55
                    ]
                }
            }
        }
    },
    "973120be646cfe708eeb48c119544eebfdbc68dc": {
        "authored_data": "2022 May 05 19:57",
        "commit.message": "Whitespace.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "47043448a42634b2f85b0ff0543a225b64fb0884",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/ServiceLoaderIteratorTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', None)": [
                        35,
                        36,
                        44,
                        46,
                        56,
                        58
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testNextThrowsNoSuchElementException')": [
                        39,
                        42
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testHasNextReturnsFalse')": [
                        50,
                        54
                    ],
                    "('org.apache.commons.compress.utils#ServiceLoaderIteratorTest', 'testRemoveThrowsUnsupportedOperationException')": [
                        62,
                        65
                    ],
                    "(None, None)": [
                        67,
                        68,
                        71,
                        72
                    ]
                }
            }
        }
    },
    "47043448a42634b2f85b0ff0543a225b64fb0884": {
        "authored_data": "2022 May 05 19:57",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "33f57cf6b3628229a721798987d10f76b1ef32db",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/SeekableInMemoryByteChannelTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionOnReadingClosedChannel')": [
                        103
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionOnWritingToClosedChannel')": [
                        144
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionWhenSettingIncorrectPosition')": [
                        192
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionWhenTruncatingToIncorrectSize')": [
                        201
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsClosedChannelExceptionWhenPositionIsSetOnClosedChannel')": [
                        259
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsIOExceptionWhenPositionIsSetToANegativeValue')": [
                        305
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsIllegalArgumentExceptionWhenTruncatingToANegativeSize')": [
                        399
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionOnReadingClosedChannel')": [
                        104
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionOnWritingToClosedChannel')": [
                        145
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionWhenSettingIncorrectPosition')": [
                        193
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'shouldThrowExceptionWhenTruncatingToIncorrectSize')": [
                        202
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsClosedChannelExceptionWhenPositionIsSetOnClosedChannel')": [
                        260
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsIOExceptionWhenPositionIsSetToANegativeValue')": [
                        306
                    ],
                    "('org.apache.commons.compress.utils#SeekableInMemoryByteChannelTest', 'throwsIllegalArgumentExceptionWhenTruncatingToANegativeSize')": [
                        400
                    ]
                }
            }
        }
    },
    "33f57cf6b3628229a721798987d10f76b1ef32db": {
        "authored_data": "2022 May 05 19:53",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c869faa0585006e9f863ffeb2a7568fb213eab24",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannelTest.java": {
                "old": {
                    "(None, None)": [
                        32,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', None)": [
                        44,
                        45
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'constructorThrowsOnNullArg')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsThrowsOnNullArg')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'forFilesThrowsOnNullArg')": [
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantTruncate')": [
                        129,
                        130
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantWrite')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantPositionToANegativePosition')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsClosedChannelExceptionWhenPositionIsReadOnClosedChannel')": [
                        327
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsClosedChannelExceptionWhenSizeIsReadOnClosedChannel')": [
                        341,
                        342,
                        343,
                        344
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsClosedChannelExceptionWhenPositionIsSetOnClosedChannel')": [
                        355,
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsIOExceptionWhenPositionIsSetToANegativeValue')": [
                        382,
                        383,
                        384
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'constructorThrowsOnNullArg')": [
                        46
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsThrowsOnNullArg')": [
                        51
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'forFilesThrowsOnNullArg')": [
                        56
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantTruncate')": [
                        123
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantWrite')": [
                        129
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'cantPositionToANegativePosition')": [
                        135
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsClosedChannelExceptionWhenSizeIsReadOnClosedChannel')": [
                        331,
                        332,
                        333
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsClosedChannelExceptionWhenPositionIsSetOnClosedChannel')": [
                        344,
                        345,
                        346
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannelTest', 'throwsIOExceptionWhenPositionIsSetToANegativeValue')": [
                        370,
                        371
                    ]
                }
            }
        }
    },
    "c869faa0585006e9f863ffeb2a7568fb213eab24": {
        "authored_data": "2022 May 05 19:50",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "662bebbc0a2deb3602bc857253b4180bc31ea645",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'readFullyOnChannelThrowsEof')": [
                        88
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'copyThrowsOnZeroBufferSize')": [
                        93
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'copyRangeThrowsOnZeroBufferSize')": [
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'readFullyOnChannelThrowsEof')": [
                        90
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'copyThrowsOnZeroBufferSize')": [
                        95
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'copyRangeThrowsOnZeroBufferSize')": [
                        100,
                        101
                    ]
                }
            }
        }
    },
    "662bebbc0a2deb3602bc857253b4180bc31ea645": {
        "authored_data": "2022 May 05 19:48",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "9c9c28e5eb8e7f296d26642e84d6efd3dfe7833f",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/ChecksumVerifyingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingByteArrayThrowsIOException')": [
                        43
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingNoArgumentsThrowsIOException')": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingByteArrayThrowsIOException')": [
                        44
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingNoArgumentsThrowsIOException')": [
                        53
                    ]
                }
            }
        }
    },
    "9c9c28e5eb8e7f296d26642e84d6efd3dfe7833f": {
        "authored_data": "2022 May 05 19:47",
        "commit.message": "Whitespeace.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "021fc07e15c5600fc1470749592e50c0f4aadb46",
        "changes": {
            "src/test/java/org/apache/commons/compress/utils/ChecksumVerifyingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', None)": [
                        37,
                        38,
                        48,
                        50,
                        61,
                        63
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingByteArrayThrowsIOException')": [
                        41,
                        46
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testReadTakingNoArgumentsThrowsIOException')": [
                        54,
                        59
                    ],
                    "('org.apache.commons.compress.utils#ChecksumVerifyingInputStreamTest', 'testSkip')": [
                        67,
                        73,
                        75,
                        78
                    ],
                    "(None, None)": [
                        81,
                        84,
                        85
                    ]
                }
            }
        }
    }
}