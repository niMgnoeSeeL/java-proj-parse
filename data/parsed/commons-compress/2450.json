{
    "60f4ac24f9d03ff26789002138bb71f227e1526b": {
        "authored_data": "2013 Feb 22 05:02",
        "commit.message": "enable test for COMPRESS-219\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1448896 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "340a3442abb37a188a005f01f9c37e525698cbac",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        107
                    ]
                }
            }
        }
    },
    "340a3442abb37a188a005f01f9c37e525698cbac": {
        "authored_data": "2013 Feb 20 19:24",
        "commit.message": "Disable test until I know we can include the zip that is needed for the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1448361 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d9b559615109e94e6e7cad91e4f6dfa891f51e82",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        107
                    ]
                }
            }
        }
    },
    "d9b559615109e94e6e7cad91e4f6dfa891f51e82": {
        "authored_data": "2013 Feb 20 19:22",
        "commit.message": "COMPRESS-219 reading stored entries could try to read past the end of the internal buffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1448357 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "367c1ff0c03c166099014c573b7882fcf8738f0d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        429,
                        430,
                        431
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        429,
                        430
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        29,
                        31,
                        33,
                        34,
                        37,
                        128,
                        129
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'shouldReadNestedZip')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'extractZipInputStream(ZipArchiveInputStream)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127
                    ]
                }
            }
        }
    },
    "367c1ff0c03c166099014c573b7882fcf8738f0d": {
        "authored_data": "2013 Feb 19 17:43",
        "commit.message": "Unused imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1447847 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "853576ac9726abb3a43544a7b71eeab4bbe29758",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        26,
                        27
                    ]
                }
            }
        }
    },
    "853576ac9726abb3a43544a7b71eeab4bbe29758": {
        "authored_data": "2013 Feb 19 17:18",
        "commit.message": "COMPRESS-218 Typo in CompressorStreamFactory Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1447828 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "b8690f9450ca6481408756f4467362bb2f12de25",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            }
        }
    },
    "b8690f9450ca6481408756f4467362bb2f12de25": {
        "authored_data": "2013 Feb 19 05:28",
        "commit.message": "allow mkdir/rmdir to be used by unrelated test classes as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1447595 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "57022c4bfcfffead2feff93874ba6dd7d7ad2b4e",
        "changes": {
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', 'mkdir(String)')": [
                        69
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'rmdir(File)')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', 'mkdir(String)')": [
                        69
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'rmdir(File)')": [
                        104
                    ]
                }
            }
        }
    },
    "b0d2bd6e3645a73adb0eab0d97e9afac5a40da7d": {
        "authored_data": "2013 Feb 11 15:13",
        "commit.message": "make PMD and findbugs a bit less unhappy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1444819 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b39c4b36133f5a3f60e8f029193c19c14744ec65",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'skipRemainderOfLastBlock')": [
                        458,
                        459,
                        460
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'skipRemainderOfLastBlock')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            }
        }
    }
}