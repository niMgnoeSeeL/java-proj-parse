{
    "dd71368488dd8e0fb0bf8f7aabd4f702502d5615": {
        "authored_data": "2014 Sep 19 17:38",
        "commit.message": "COMPRESS-289 use a stable last modified time for long name entry,\nbased on patch by  Bob Robertson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1626280 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "50cd7550e2b6634c42b93a4c321aae900a672db0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        274,
                        279
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'handleLongName(String,Map,String,byte,String)')": [
                        647
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        274,
                        279
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        640
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'handleLongName(TarArchiveEntry,String,Map,String,byte,String)')": [
                        648,
                        665
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNameErrorMode')": [
                        389
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkNameErrorMode')": [
                        501,
                        509
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkNameTruncateMode')": [
                        522,
                        529
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkName(int)')": [
                        560,
                        567
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        29,
                        35,
                        40,
                        41,
                        651,
                        652
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNameErrorMode')": [
                        395
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkNameErrorMode')": [
                        507,
                        515
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkNameTruncateMode')": [
                        528,
                        535
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongLinkName(int)')": [
                        566,
                        573
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', None)": [
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        635,
                        636
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testLongNameMd5Hash')": [
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'createTarArchiveContainingOneDirectory(String,Date)')": [
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650
                    ]
                }
            }
        }
    },
    "cfad3dcd01381d32e3146651ff4f533dfd8e65d9": {
        "authored_data": "2014 Aug 22 04:07",
        "commit.message": "Inflater knows the amount of data it has written\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1619661 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d505f34bee03c06a25abbd7bf3b9a207d4521cb0",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'init(boolean)')": [
                        234
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        295,
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        325
                    ]
                }
            }
        }
    },
    "d505f34bee03c06a25abbd7bf3b9a207d4521cb0": {
        "authored_data": "2014 Aug 22 03:54",
        "commit.message": "deal with some potential int overflows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1619657 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f86a4986c5fce374da74664cd8542f7e059d119c",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        77
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'readLittleEndianInt(DataInputStream)')": [
                        248,
                        252
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        319,
                        320,
                        321,
                        322,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        77
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'readLittleEndianInt(DataInputStream)')": [
                        248,
                        252
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        319,
                        327,
                        328,
                        329
                    ]
                }
            }
        }
    },
    "f86a4986c5fce374da74664cd8542f7e059d119c": {
        "authored_data": "2014 Aug 21 18:39",
        "commit.message": "COMPRESS-286 tell LZMAInputStream the amount of data to expect\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1619505 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2269d065ed0ce32a376d2959cd95664688084879",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#AES256SHA256Decoder', 'decode(InputStream,Coder,byte)')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#AES256SHA256Decoder', 'decode(InputStream,long,Coder,byte)')": [
                        33,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/CoderBase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#CoderBase', 'decode(InputStream,Coder,byte)')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#CoderBase', 'decode(InputStream,long,Coder,byte)')": [
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Coders.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#Coders', 'addDecoder(InputStream,Coder,byte)')": [
                        70,
                        77
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Coders', None)": [
                        91,
                        92,
                        103,
                        104,
                        113,
                        124,
                        125,
                        152,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Coders', 'addDecoder(InputStream,long,Coder,byte)')": [
                        70,
                        77
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Coders', None)": [
                        91,
                        92,
                        103,
                        104,
                        113,
                        124,
                        125,
                        152,
                        153,
                        171,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/DeltaDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#DeltaDecoder', 'decode(InputStream,Coder,byte)')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#DeltaDecoder', 'decode(InputStream,long,Coder,byte)')": [
                        33,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Folder.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Folder', 'getUnpackSizeForCoder(Coder)')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Folder', None)": [
                        104,
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/LZMA2Decoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'decode(InputStream,Coder,byte)')": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMA2Decoder', 'decode(InputStream,long,Coder,byte)')": [
                        35,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readEncodedHeader(DataInputStream,Archive,byte)')": [
                        279
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        861
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readEncodedHeader(DataInputStream,Archive,byte)')": [
                        279,
                        280
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        862,
                        863
                    ]
                }
            }
        }
    },
    "2269d065ed0ce32a376d2959cd95664688084879": {
        "authored_data": "2014 Aug 18 11:31",
        "commit.message": "never meant to commit this, oops\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1618587 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "df1d2a4bb0525244cfeeefe90992f2f96f88f577",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        855,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        875,
                        876,
                        877
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'writeOut(InputStream)')": [
                        878,
                        879,
                        880,
                        881,
                        882,
                        883
                    ]
                }
            }
        }
    },
    "df1d2a4bb0525244cfeeefe90992f2f96f88f577": {
        "authored_data": "2014 Aug 18 11:28",
        "commit.message": "COMPRESS-285 use a volatile enum rather than an AtomicInteger\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1618584 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d488baff7190700fd8d27be8162b5307000696d8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        855,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        875,
                        876,
                        877
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'writeOut(InputStream)')": [
                        878,
                        879,
                        880,
                        881,
                        882,
                        883
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        45,
                        46,
                        47,
                        49,
                        57
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'isXZCompressionAvailable')": [
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'setCacheXZAvailablity(boolean)')": [
                        168,
                        169,
                        171
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'getCachedXZAvailability')": [
                        176,
                        177
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        45,
                        46,
                        47,
                        49,
                        57
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'isXZCompressionAvailable')": [
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'setCacheXZAvailablity(boolean)')": [
                        168,
                        169,
                        171,
                        172
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtils', 'getCachedXZAvailability')": [
                        177,
                        178
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/xz/XZUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testCachingIsEnabledByDefaultAndXZIsPresent')": [
                        78
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testCanTurnOffCaching')": [
                        85
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testTurningOnCachingReEvaluatesAvailability')": [
                        95,
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testCachingIsEnabledByDefaultAndXZIsPresent')": [
                        78
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testCanTurnOffCaching')": [
                        85
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZUtilsTestCase', 'testTurningOnCachingReEvaluatesAvailability')": [
                        95,
                        97
                    ]
                }
            }
        }
    },
    "d488baff7190700fd8d27be8162b5307000696d8": {
        "authored_data": "2014 Aug 16 16:40",
        "commit.message": "add a bunch of toString methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1618382 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f1d5df0a6c8ce43fe34e543277335220b79a0ca9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Archive.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Archive', None)": [
                        39,
                        40,
                        46,
                        47,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Archive', 'toString')": [
                        41,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Archive', 'lengthOf(long)')": [
                        48,
                        49
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Archive', 'lengthOf(Object)')": [
                        52,
                        53
                    ],
                    "(None, None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/BindPair.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#BindPair', None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#BindPair', 'toString')": [
                        25,
                        26
                    ],
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Folder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#Folder', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Folder', None)": [
                        43,
                        44,
                        45,
                        94,
                        95
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#Folder', 'toString')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "(None, None)": [
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/StreamMap.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#StreamMap', None)": [
                        30,
                        31
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#StreamMap', 'toString')": [
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "(None, None)": [
                        37
                    ]
                }
            }
        }
    }
}