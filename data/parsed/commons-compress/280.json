{
    "31d1738ccc57f86d8fd56ff5271cda82a65f01ee": {
        "authored_data": "2021 Sep 22 08:11",
        "commit.message": "COMPRESS-591: Fix decoding of 7z files containing LZMA streams with end\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "8bdf82c0a49ade31ef7a035962327c633ade5801",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/LZMADecoder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMADecoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#LZMADecoder', 'decode(String,InputStream,long,Coder,byte,int)')": [
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFileTest', None)": [
                        759,
                        765,
                        766,
                        767,
                        768
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFileTest', 'testSevenZWithEOS')": [
                        760,
                        761,
                        762,
                        763,
                        764
                    ]
                }
            }
        }
    },
    "2fe5825828f7a96b0676d11972f9a13892075b4d": {
        "authored_data": "2021 Aug 04 10:04",
        "commit.message": "[COMPRESS-584] [COMPRESS-585] Fix IOUtils.readRange() can read more from a channel than asked for\n",
        "commit.author.name": "Matthijs Laan",
        "pcid": "c3bc24b702f50a4747629c9eec12536390f3b970",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "new": {
                    "('org.apache.commons.compress.utils#IOUtils', 'readRange(ReadableByteChannel,int)')": [
                        370,
                        371
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/utils/IOUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'readRangeFromChannelDoesntReadMoreThanAskedForWhenItGotLessInFirstReadCall')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', None)": [
                        168,
                        169,
                        170,
                        171,
                        186,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.compress.utils#IOUtilsTest', 'readRangeMoreThanCopyBufferSize')": [
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185
                    ]
                }
            }
        }
    },
    "c3bc24b702f50a4747629c9eec12536390f3b970": {
        "authored_data": "2021 Aug 10 14:47",
        "commit.message": "else {if} -> else if.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c00f900f735ff80595acb536a9c3d151c4d29909",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeNewEntry(CpioArchiveEntry)')": [
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldAsciiEntry(CpioArchiveEntry)')": [
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldBinaryEntry(CpioArchiveEntry,boolean)')": [
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeNewEntry(CpioArchiveEntry)')": [
                        283,
                        284,
                        285,
                        287,
                        288,
                        289
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldAsciiEntry(CpioArchiveEntry)')": [
                        316,
                        317,
                        318,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldBinaryEntry(CpioArchiveEntry,boolean)')": [
                        345,
                        346,
                        347,
                        349,
                        350,
                        351
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addExtraField(ZipExtraField)')": [
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addExtraField(ZipExtraField)')": [
                        599,
                        600,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'sanityCheckLFHOffset(ZipArchiveEntry)')": [
                        877,
                        878,
                        879
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        880
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'sanityCheckLFHOffset(ZipArchiveEntry)')": [
                        877,
                        878
                    ]
                }
            }
        }
    },
    "c00f900f735ff80595acb536a9c3d151c4d29909": {
        "authored_data": "2021 Aug 10 14:46",
        "commit.message": "Always use blocks.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "5bc35ee4543a82f96bd8af56f97ece4eb4c3c251",
        "changes": {
            "src/test/java/org/apache/commons/compress/harmony/pack200/tests/BHSDCodecTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200.tests#BHSDCodecTest', 'testEncodeDecode')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200.tests#BHSDCodecTest', 'testEncodeDecode')": [
                        45,
                        46,
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/pack200/tests/CodecTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testInvalidCodings')": [
                        47
                    ],
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testByte1')": [
                        73
                    ],
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testByte1Delta')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testInvalidCodings')": [
                        47,
                        49
                    ],
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testByte1')": [
                        74
                    ],
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', None)": [
                        76,
                        84
                    ],
                    "('org.apache.commons.compress.harmony.pack200.tests#CodecTest', 'testByte1Delta')": [
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/AttributeLayoutTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#AttributeLayoutTest', None)": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#AttributeLayoutTest', None)": [
                        55,
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/BcBandsTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#BcBandsTest', 'testBcSuperMethodBand')": [
                        659
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#BcBandsTest', 'testBcInitRefRefBand')": [
                        679
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#BcBandsTest', 'testBcSuperMethodBand')": [
                        659,
                        661
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#BcBandsTest', 'testBcInitRefRefBand')": [
                        680,
                        682
                    ]
                }
            }
        }
    },
    "5bc35ee4543a82f96bd8af56f97ece4eb4c3c251": {
        "authored_data": "2021 Aug 10 14:46",
        "commit.message": "Remove trailing white spaces.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "b8cbf1af810a2c81c6177ce03cc63ab1da06ac05",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        915
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        915
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipParameters.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipParameters', None)": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipParameters', None)": [
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/Archive.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#Archive', None)": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#Archive', None)": [
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/BandSet.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#BandSet', None)": [
                        45,
                        56,
                        65,
                        77,
                        559,
                        573,
                        587,
                        604,
                        666
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#BandSet', None)": [
                        45,
                        56,
                        65,
                        77,
                        559,
                        573,
                        587,
                        604,
                        666
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/MetadataBandGroup.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#MetadataBandGroup', None)": [
                        78,
                        212
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#MetadataBandGroup', None)": [
                        78,
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/Pack200Adapter.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#Pack200Adapter', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#Pack200Adapter', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/PackingOptions.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#PackingOptions', None)": [
                        93,
                        106,
                        192
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#PackingOptions', None)": [
                        93,
                        106,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/Segment.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#Segment', None)": [
                        45,
                        267,
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#Segment', None)": [
                        45,
                        267,
                        271
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/IcTuple.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#IcTuple', None)": [
                        96,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#IcTuple', None)": [
                        96,
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/SegmentConstantPoolArrayCache.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#SegmentConstantPoolArrayCache', None)": [
                        45,
                        93,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#SegmentConstantPoolArrayCache', None)": [
                        45,
                        93,
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/pack200/tests/CodecTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/pack200/tests/PopulationCodecTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200.tests#PopulationCodecTest', None)": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200.tests#PopulationCodecTest', None)": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/AbstractBandsTestCase.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/ArchiveTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', None)": [
                        222,
                        245
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', 'testDeflateHint')": [
                        234
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', 'testLoggingOptions')": [
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', None)": [
                        222,
                        245
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', 'testDeflateHint')": [
                        234
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', 'testLoggingOptions')": [
                        304
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/SegmentConstantPoolArrayCacheTest.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentConstantPoolArrayCacheTest', None)": [
                        27,
                        35
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentConstantPoolArrayCacheTest', 'testMultipleArrayMultipleHit')": [
                        57,
                        67,
                        73
                    ],
                    "(None, None)": [
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentConstantPoolArrayCacheTest', None)": [
                        27,
                        35
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentConstantPoolArrayCacheTest', 'testMultipleArrayMultipleHit')": [
                        57,
                        67,
                        73
                    ],
                    "(None, None)": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/SegmentOptionsTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            }
        }
    },
    "b8cbf1af810a2c81c6177ce03cc63ab1da06ac05": {
        "authored_data": "2021 Aug 10 14:45",
        "commit.message": "Add missing annotations.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "51e464e7f9e89b35f122a093f98d7831a1a8ed4b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        852
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/AbstractBandsTestCase.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#AbstractBandsTestCase', None)": [
                        42,
                        47,
                        63,
                        77,
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/ArchiveTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#ArchiveTest', None)": [
                        248
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/AttributeLayoutTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#AttributeLayoutTest', None)": [
                        33,
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/BandSetTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#BandSetTest', None)": [
                        36,
                        44,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/BcBandsTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#BcBandsTest', None)": [
                        66,
                        71,
                        76,
                        81,
                        86,
                        91,
                        96,
                        101,
                        106,
                        111,
                        116,
                        121,
                        126,
                        138,
                        147,
                        156,
                        165,
                        174,
                        186,
                        195,
                        204,
                        216,
                        235,
                        240,
                        248,
                        253
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/ClassBandsTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#ClassBandsTest', None)": [
                        45,
                        50,
                        55,
                        60,
                        69,
                        78,
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/CodeAttributeTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#CodeAttributeTest', None)": [
                        50,
                        62,
                        67,
                        72,
                        108,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/SegmentConstantPoolTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentConstantPoolTest', None)": [
                        36,
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/SegmentTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentTest', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/SegmentUtilsTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests#SegmentUtilsTest', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/harmony/unpack200/tests/bytecode/ConstantPoolTest.java": {
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.tests.bytecode#ConstantPoolTest', None)": [
                        31
                    ]
                }
            }
        }
    }
}