{
    "62f86d5c1eed6e2c294524a4bf472e5ea17eecd6": {
        "authored_data": "2016 Mar 23 20:12",
        "commit.message": "COMPRESS-346 support star PAX headers for sparse files\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c37115b71e2a04d2266dbfa7b2962f03c49ef5da",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        763,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isOldGNUSparse')": [
                        768,
                        769
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isSparse')": [
                        918
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        202,
                        203,
                        204,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        774,
                        775,
                        776,
                        777,
                        778,
                        785,
                        786,
                        787,
                        788,
                        789,
                        790,
                        791,
                        792,
                        1235
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isOldGNUSparse')": [
                        772,
                        773
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isStarSparse')": [
                        793,
                        794
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isSparse')": [
                        932
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'fillStarSparseData(Map)')": [
                        1236,
                        1237,
                        1238,
                        1239
                    ],
                    "(None, None)": [
                        1240,
                        1241
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map)')": [
                        521,
                        522,
                        523,
                        552,
                        553
                    ]
                }
            }
        }
    },
    "c37115b71e2a04d2266dbfa7b2962f03c49ef5da": {
        "authored_data": "2016 Mar 23 19:55",
        "commit.message": "COMPRESS-347 support for global PAX headers\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "96e453145171c4a2a34d749c8d0a15bde5a6f21c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        440,
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        81,
                        82,
                        83,
                        443,
                        444
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        316,
                        317,
                        318,
                        319,
                        322,
                        323
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGlobalPaxHeaders')": [
                        440,
                        441,
                        442
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        454,
                        455,
                        456
                    ]
                }
            }
        }
    },
    "96e453145171c4a2a34d749c8d0a15bde5a6f21c": {
        "authored_data": "2016 Mar 23 19:36",
        "commit.message": "empty values mean \"remove the mapping\" in PAX headers\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "bf20428c567fb7155e282c30ac305ef3e5593f1d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        467,
                        468,
                        469,
                        470
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        58,
                        59,
                        60,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'secondEntryWinsWhenPaxHeaderContainsDuplicateKey')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'paxHeaderEntryWithEmptyValueRemovesKey')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            }
        }
    },
    "bf20428c567fb7155e282c30ac305ef3e5593f1d": {
        "authored_data": "2016 Mar 23 17:52",
        "commit.message": "emit almost as much information as \"tar tv\"\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "af2da2e151a8c76e217bc239616174cafbb702ec",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarLister', 'log(TarArchiveEntry)')": [
                        67,
                        70,
                        72,
                        74,
                        77,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarLister', 'log(TarArchiveEntry)')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        94,
                        96,
                        98,
                        101,
                        103
                    ]
                }
            }
        }
    },
    "af2da2e151a8c76e217bc239616174cafbb702ec": {
        "authored_data": "2016 Mar 23 17:29",
        "commit.message": "COMPRESS-345 add support for GNU sparse files using PAX dialects\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "02e0f9ae63a1d1db2d4c644ddbaa0a18e6b748fa",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        731,
                        732,
                        733,
                        734,
                        750
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        1220
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        199,
                        200,
                        201,
                        735,
                        736,
                        737,
                        738,
                        754,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        1206,
                        1213,
                        1214,
                        1215
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isGNUSparse')": [
                        759
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isOldGNUSparse')": [
                        768
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isPaxGNUSparse')": [
                        779,
                        780
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isSparse')": [
                        917,
                        918
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'fillGNUSparse0xData(Map)')": [
                        1207,
                        1208,
                        1209,
                        1210,
                        1211,
                        1212
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'fillGNUSparse1xData(Map)')": [
                        1216,
                        1217,
                        1218,
                        1219
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        317,
                        318
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGNUSparse')": [
                        531
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        645
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        317,
                        318
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        437,
                        438,
                        439
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map)')": [
                        498,
                        499,
                        500,
                        501,
                        526,
                        527,
                        528,
                        529
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readOldGNUSparse')": [
                        542
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        656
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testOldGNU')": [
                        39,
                        41
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', None)": [
                        49,
                        50,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testPaxGNU')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'assertPaxGNUEntry(TarArchiveInputStream,String)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "(None, None)": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarLister.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarLister', 'log(TarArchiveEntry)')": [
                        76,
                        77,
                        78
                    ]
                }
            }
        }
    },
    "a5eca568368b287f875149133a7ff6029b07aad8": {
        "authored_data": "2016 Mar 22 17:14",
        "commit.message": "COMPRESS-344 accept NUL as terminator for GNU extended names\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "9ff8334ff25822f70a8313e14c8499891dc47688",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getExtendedName(int)')": [
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getExtendedName(int)')": [
                        180
                    ]
                }
            }
        }
    },
    "9ff8334ff25822f70a8313e14c8499891dc47688": {
        "authored_data": "2016 Mar 20 20:11",
        "commit.message": "COMPRESS-341 listing of 7z archives\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f9334473bd9993f38458ecee137ba9e7f7b79abb",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        175,
                        176
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'getEntries')": [
                        173,
                        174
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZFileTest.java": {
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFileTest', None)": [
                        247,
                        260,
                        261,
                        262
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFileTest', 'getEntriesOfUnarchiveTest')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259
                    ]
                }
            }
        }
    },
    "f9334473bd9993f38458ecee137ba9e7f7b79abb": {
        "authored_data": "2016 Mar 17 10:04",
        "commit.message": "plug a few more native memory leaks\n\naftermaths of COMPRESS-343, inspired by #11\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6e9acfa668f1a10bc8cb9a3542531f8ae3e043ff",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', 'readBlock(boolean)')": [
                        298,
                        305,
                        306
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', 'readBlock(boolean)')": [
                        297,
                        307,
                        308
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'close')": [
                        522,
                        523
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'close')": [
                        522,
                        523,
                        524,
                        525
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        526
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        423,
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        423,
                        424,
                        425,
                        426,
                        427
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', None)": [
                        61
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', 'close')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', None)": [
                        40,
                        62,
                        63,
                        101
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', 'close')": [
                        97,
                        98,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', None)": [
                        34,
                        52
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', 'close')": [
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', None)": [
                        34,
                        35,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', 'close')": [
                        88,
                        89,
                        90,
                        91
                    ],
                    "(None, None)": [
                        92
                    ]
                }
            }
        }
    }
}