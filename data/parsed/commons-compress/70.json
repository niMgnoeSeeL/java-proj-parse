{
    "967c59bce0e60fdffe7d85d33150c85d4eef0e94": {
        "authored_data": "2022 May 05 19:32",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "55dd4f6b2cabd5073b5269f4458c8cf75e030489",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateParameters.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateParameters', 'setCompressionLevel(int)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateParameters', None)": [
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateParameters', 'setCompressionLevel(int)')": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/deflate/DeflateParametersTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateParametersTest', 'shouldNotBeAbleToSetCompressionLevelToANegativeValue')": [
                        36
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateParametersTest', 'shouldNotBeAbleToSetCompressionLevelToADoubleDigitValue')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateParametersTest', 'shouldNotBeAbleToSetCompressionLevelToANegativeValue')": [
                        40
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateParametersTest', 'shouldNotBeAbleToSetCompressionLevelToADoubleDigitValue')": [
                        46
                    ]
                }
            }
        }
    },
    "55dd4f6b2cabd5073b5269f4458c8cf75e030489": {
        "authored_data": "2022 May 05 19:28",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6ba2c5fd730b1bf30356a9a4047958162dc1b1b0",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/bzip2/PythonTruncatedBzip2Test.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#PythonTruncatedBzip2Test', 'testTruncatedData')": [
                        75,
                        76,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#PythonTruncatedBzip2Test', 'testTruncatedData')": [
                        76,
                        77,
                        80
                    ]
                }
            }
        }
    },
    "6ba2c5fd730b1bf30356a9a4047958162dc1b1b0": {
        "authored_data": "2022 May 05 19:27",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "bd3326765b98b2e01ce724483e0fe747ac22f43a",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowAnIOExceptionWhenAppliedToAZipFile')": [
                        41,
                        42
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowIOExceptionInsteadOfRuntimeExceptionCOMPRESS516')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', None)": [
                        125,
                        146
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowIOExceptionInsteadOfRuntimeExceptionCOMPRESS519')": [
                        132,
                        133
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        149
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        31
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowAnIOExceptionWhenAppliedToAZipFile')": [
                        43
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowIOExceptionInsteadOfRuntimeExceptionCOMPRESS516')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', None)": [
                        126,
                        147
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'shouldThrowIOExceptionInsteadOfRuntimeExceptionCOMPRESS519')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        150
                    ]
                }
            }
        }
    },
    "bd3326765b98b2e01ce724483e0fe747ac22f43a": {
        "authored_data": "2022 May 05 19:25",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "fb435be89ff96868ae07149edd80787f6ce5fc56",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/DetectCompressorTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testLZMAMemoryLimit')": [
                        173
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testZMemoryLimit')": [
                        178
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testXZMemoryLimitOnRead')": [
                        190
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testXZMemoryLimitOnSkip')": [
                        197
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', None)": [
                        65,
                        70
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testLZMAMemoryLimit')": [
                        176
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testZMemoryLimit')": [
                        181
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testXZMemoryLimitOnRead')": [
                        193
                    ],
                    "('org.apache.commons.compress.compressors#DetectCompressorTestCase', 'testXZMemoryLimitOnSkip')": [
                        200
                    ]
                }
            }
        }
    },
    "fb435be89ff96868ae07149edd80787f6ce5fc56": {
        "authored_data": "2022 May 05 19:22",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "9c7628308aeeeeb368832226206d6b428e67d0c5",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'shouldConsumeArchiveCompletely')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'rejectsStoredEntriesWithDataDescriptorByDefault')": [
                        513,
                        514,
                        520,
                        521,
                        522
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfStoredDDIsInconsistent')": [
                        567,
                        568,
                        569
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfStoredDDIsDifferentFromLengthRead')": [
                        582,
                        583,
                        584
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipThrowsException')": [
                        656,
                        661,
                        662,
                        663
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        664,
                        681,
                        695,
                        703,
                        712,
                        721
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfZip64ExtraCouldNotBeUnderstood')": [
                        671,
                        672
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfThereIsNoEocd')": [
                        688,
                        689,
                        690,
                        691
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIOExceptionIfThereIsCorruptedZip64Extra')": [
                        702
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testZipWithBadExtraFields')": [
                        711
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testZipUsingStoredWithDDAndNoDDSignature')": [
                        720
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'shouldConsumeArchiveCompletely')": [
                        105
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'rejectsStoredEntriesWithDataDescriptorByDefault')": [
                        512,
                        518
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfStoredDDIsInconsistent')": [
                        563
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfStoredDDIsDifferentFromLengthRead')": [
                        576
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipThrowsException')": [
                        652,
                        653,
                        654,
                        655
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        656,
                        657,
                        674,
                        686,
                        694,
                        695,
                        696,
                        699
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfZip64ExtraCouldNotBeUnderstood')": [
                        664,
                        665
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIfThereIsNoEocd')": [
                        681,
                        682
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'throwsIOExceptionIfThereIsCorruptedZip64Extra')": [
                        693
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'getAllZipEntries(ZipArchiveInputStream)')": [
                        697,
                        698
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testZipWithBadExtraFields')": [
                        707
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testZipUsingStoredWithDDAndNoDDSignature')": [
                        715
                    ]
                }
            }
        }
    },
    "9c7628308aeeeeb368832226206d6b428e67d0c5": {
        "authored_data": "2022 May 05 19:17",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "b5ca3de766b4d408f8f44096c74f5d93f315ae6e",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/examples/ExpanderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', None)": [
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'sevenZInputStreamVersion')": [
                        74
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'sevenZInputStreamVersionWithAutoDetection')": [
                        82
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'fileCantEscapeViaAbsolutePath')": [
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'sevenZInputStreamVersion')": [
                        72
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'sevenZInputStreamVersionWithAutoDetection')": [
                        80
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'fileCantEscapeViaAbsolutePath')": [
                        115,
                        116,
                        117
                    ]
                }
            }
        }
    },
    "b5ca3de766b4d408f8f44096c74f5d93f315ae6e": {
        "authored_data": "2022 May 05 19:10",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ac7b6221c6c7608e4a098e3809e7b205f219c5fb",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/examples/SevenZArchiverTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#SevenZArchiverTest', 'outputStreamVersion')": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.compress.archivers.examples#SevenZArchiverTest', 'outputStreamVersion')": [
                        69
                    ]
                }
            }
        }
    },
    "ac7b6221c6c7608e4a098e3809e7b205f219c5fb": {
        "authored_data": "2022 May 05 19:05",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6518333614a32ba3d1f1766700d2564d449cdbbd",
        "changes": {
            "src/test/java/org/apache/commons/compress/changes/ChangeTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        60,
                        63
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', None)": [
                        35,
                        42,
                        44,
                        52,
                        54
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingFourArgumentsThrowsNullPointerExceptionOne')": [
                        38,
                        40,
                        41
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingFourArgumentsThrowsNullPointerExceptionTwo')": [
                        48,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingThreeArgumentsThrowsNullPointerException')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25,
                        26
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingFourArgumentsThrowsNullPointerExceptionOne')": [
                        39
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingFourArgumentsThrowsNullPointerExceptionTwo')": [
                        45
                    ],
                    "('org.apache.commons.compress.changes#ChangeTest', 'testFailsToCreateChangeTakingThreeArgumentsThrowsNullPointerException')": [
                        50
                    ]
                }
            }
        }
    },
    "6518333614a32ba3d1f1766700d2564d449cdbbd": {
        "authored_data": "2022 May 05 19:03",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "aca107474eed70b7d882c94c7890b172653c5778",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'setUp')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testUnsupportedMethod')": [
                        255
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testUnknownMethod')": [
                        262
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'setUp')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testUnsupportedMethod')": [
                        258
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testUnknownMethod')": [
                        265
                    ]
                }
            }
        }
    },
    "aca107474eed70b7d882c94c7890b172653c5778": {
        "authored_data": "2022 May 05 19:01",
        "commit.message": "Fix broken tests.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "02e66210a92cea4370900767bc269767f7b600bc",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipSplitOutputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', None)": [
                        33,
                        34
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsExceptionIfSplitSizeIsTooSmall')": [
                        38,
                        39
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsExceptionIfSplitSizeIsTooLarge')": [
                        44,
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsIfUnsplittableSizeLargerThanSplitSize')": [
                        50,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsExceptionIfSplitSizeIsTooSmall')": [
                        36
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsExceptionIfSplitSizeIsTooLarge')": [
                        41
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStreamTest', 'throwsIfUnsplittableSizeLargerThanSplitSize')": [
                        48
                    ]
                }
            }
        }
    }
}