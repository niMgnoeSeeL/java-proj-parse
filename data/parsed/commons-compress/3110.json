{
    "f84dd362bbf15c19cb5f3a3b4563951ba529f585": {
        "authored_data": "2009 Apr 28 08:31",
        "commit.message": "Only use the zip-extra-field if configured to do so and the entry didn't set the EFS flag - COMPRESS-70\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769291 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "13b90aef6c0264b451333198911c69ae8c7f37e1",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        57
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        181,
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        57
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        181,
                        182,
                        183
                    ]
                }
            }
        }
    },
    "13b90aef6c0264b451333198911c69ae8c7f37e1": {
        "authored_data": "2009 Apr 27 20:57",
        "commit.message": "Check for closing non-existent entry\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769157 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "6a6d62d5901acb5cd5f74ee0003ecc3aba9b1cb3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'closeArchiveEntry')": [
                        59
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        79
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'finish')": [
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'closeArchiveEntry')": [
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'finish')": [
                        192
                    ]
                }
            }
        }
    },
    "6a6d62d5901acb5cd5f74ee0003ecc3aba9b1cb3": {
        "authored_data": "2009 Apr 27 20:35",
        "commit.message": "Check for closing non-existent entry\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769150 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c304a63cc601678f788e7aa15e20d184ebb523a4",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        221,
                        222,
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        367
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        433
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        367
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        433,
                        434,
                        435
                    ]
                }
            }
        }
    },
    "c304a63cc601678f788e7aa15e20d184ebb523a4": {
        "authored_data": "2009 Apr 27 20:33",
        "commit.message": "Sequence checking found bug in testcase - wrong archive stream was being used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769149 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "38118ec54482b76c0e1eac150597d13b5c8c8413",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/TarTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        92,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        92,
                        94
                    ]
                }
            }
        }
    },
    "38118ec54482b76c0e1eac150597d13b5c8c8413": {
        "authored_data": "2009 Apr 27 20:21",
        "commit.message": "Avoid NPE if closeArchiveEntry called with no active entry\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769146 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "9b7db4ed2007e0e651a967e499db7cb3ce6ed83b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        257,
                        258,
                        259,
                        260
                    ]
                }
            }
        }
    },
    "9b7db4ed2007e0e651a967e499db7cb3ce6ed83b": {
        "authored_data": "2009 Apr 27 20:21",
        "commit.message": "Need to ensure that data is written to the file as some archives check this - take 2\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769145 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "020bafa32381cb89c1a5b87551c3a049a2518142",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        158,
                        159,
                        160,
                        161,
                        162
                    ]
                }
            }
        }
    },
    "020bafa32381cb89c1a5b87551c3a049a2518142": {
        "authored_data": "2009 Apr 27 20:14",
        "commit.message": "Need to ensure that data is written to the file as some archives check this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769141 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "d17c68da28348187afe2b52d560218917107401f",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        23,
                        25,
                        34
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        142,
                        143,
                        144,
                        148,
                        149
                    ]
                }
            }
        }
    },
    "d17c68da28348187afe2b52d560218917107401f": {
        "authored_data": "2009 Apr 27 19:30",
        "commit.message": "Add some more sequence tests - current causes test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769118 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "eebf2db09649b960ae10236ab1733619c0ccc877",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testOptionalFinish')": [
                        105,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testOptionalFinish')": [
                        106
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', None)": [
                        111,
                        114,
                        115,
                        118,
                        119,
                        122,
                        123,
                        126,
                        127,
                        130,
                        131
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testCallSequenceAr')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testCallSequenceCpio')": [
                        116,
                        117
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testCallSequenceJar')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testCallSequenceTar')": [
                        124,
                        125
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testCallSequenceZip')": [
                        128,
                        129
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            }
        }
    },
    "eebf2db09649b960ae10236ab1733619c0ccc877": {
        "authored_data": "2009 Apr 27 19:14",
        "commit.message": "Typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769110 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "a45e9cb35e8b68c83debcaec956475ce8461743f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        328
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        328
                    ]
                }
            }
        }
    },
    "a45e9cb35e8b68c83debcaec956475ce8461743f": {
        "authored_data": "2009 Apr 27 17:58",
        "commit.message": "only write and close is allowed after the call of finish\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@769070 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Christian Grobmeier",
        "pcid": "285ee8777da5c7c0883490c28448b74e25d99da5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'closeArchiveEntry')": [
                        56,
                        57,
                        58
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', 'createArchiveEntry(File,String)')": [
                        176,
                        177,
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        146,
                        147,
                        148,
                        149
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        251,
                        252,
                        253,
                        254
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'createArchiveEntry(File,String)')": [
                        411,
                        412,
                        413
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'createArchiveEntry(File,String)')": [
                        341,
                        342,
                        343
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        65,
                        66,
                        230,
                        231,
                        904,
                        905,
                        909,
                        910
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        65,
                        66,
                        230,
                        911,
                        915
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        429,
                        430,
                        431,
                        432
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createArchiveEntry(File,String)')": [
                        934,
                        935,
                        936
                    ]
                }
            }
        }
    }
}