{
    "8896a5ceeea1a3b87851873b4e4edc7000e9cd4f": {
        "authored_data": "2011 Aug 21 13:51",
        "commit.message": "Add specific check for incorrect classpath, rather than relying on NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159981 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "4525a60d3c0755f0c5eb2d71388e79fb8fc8bc6d",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        67,
                        68,
                        69
                    ]
                }
            }
        }
    },
    "4525a60d3c0755f0c5eb2d71388e79fb8fc8bc6d": {
        "authored_data": "2011 Aug 21 02:06",
        "commit.message": "Redundant null check\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159937 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "072d79430045af9a52e5837c1bf266502a6eecc8",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read5GBOfZerosImpl(File,String)')": [
                        2382,
                        2383
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', None)": [
                        2384
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read5GBOfZerosImpl(File,String)')": [
                        2382
                    ]
                }
            }
        }
    },
    "072d79430045af9a52e5837c1bf266502a6eecc8": {
        "authored_data": "2011 Aug 21 01:56",
        "commit.message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159936 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "624a89a0f6faaf09b18faa9b820c03deb9c84bd7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveUtil', None)": [
                        53,
                        77
                    ]
                }
            }
        }
    },
    "624a89a0f6faaf09b18faa9b820c03deb9c84bd7": {
        "authored_data": "2011 Aug 21 01:54",
        "commit.message": "Javadoc references\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159935 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "82c16deea66a526b76f939e1d64a829681cda584",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "(None, None)": [
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        404,
                        433,
                        434,
                        585,
                        586,
                        801
                    ]
                },
                "new": {
                    "(None, None)": [
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        404,
                        433,
                        434,
                        585,
                        586,
                        801
                    ]
                }
            }
        }
    },
    "82c16deea66a526b76f939e1d64a829681cda584": {
        "authored_data": "2011 Aug 21 01:52",
        "commit.message": "Fix up some raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159934 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "e7f2f3ccba2c398b2c5a0b3f7e21bc5ce5293b52",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries')": [
                        266
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntriesInPhysicalOrder')": [
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntries')": [
                        266
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getEntriesInPhysicalOrder')": [
                        280
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getAddedFromChangeSet')": [
                        62
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getAddedFromStream')": [
                        70
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getDeleted')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getAddedFromChangeSet')": [
                        62
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getAddedFromStream')": [
                        70
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetResults', 'getDeleted')": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Lister', 'main(String)')": [
                        77,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Lister', 'main(String)')": [
                        77,
                        79
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testFile(File,String)')": [
                        319,
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testFile(File,String)')": [
                        319,
                        321
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read3EntriesCreatingBigArchiveFileUsingZipFile')": [
                        467,
                        470,
                        471,
                        472
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read5GBOfZerosUsingZipFileImpl(File,String)')": [
                        2396,
                        2398
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read100KFilesUsingZipFileImpl(File)')": [
                        2454,
                        2455
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read3EntriesCreatingBigArchiveFileUsingZipFile')": [
                        467,
                        470
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read5GBOfZerosUsingZipFileImpl(File,String)')": [
                        2394,
                        2396
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportIT', 'read100KFilesUsingZipFileImpl(File)')": [
                        2452,
                        2453
                    ]
                }
            }
        }
    },
    "4b27ac73374369eb62623d81171d9ac72fb909bc": {
        "authored_data": "2011 Aug 18 13:55",
        "commit.message": "ensure DumpArchiveInputStream closes underlying stream.  COMPRESS-132\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159218 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6715dba23794f7b891176c7df7c3bc7605968a98",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getNextEntry')": [
                        269,
                        270
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'close')": [
                        481
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getNextEntry')": [
                        237
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'close')": [
                        480,
                        481,
                        482
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        483
                    ]
                }
            }
        }
    },
    "6715dba23794f7b891176c7df7c3bc7605968a98": {
        "authored_data": "2011 Aug 18 04:27",
        "commit.message": "I don't think leading slashes is what one would expect from the content of a dump archive.  COMPRESS-132\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1159027 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5fffb017d8a4dc2d13d5ed8ff857beb13c9a80f3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'setName(String)')": [
                        578,
                        579,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'setName(String)')": [
                        580,
                        581,
                        582
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/DumpTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'checkDumpArchive(File)')": [
                        107,
                        108,
                        109,
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'checkDumpArchive(File)')": [
                        107,
                        108,
                        109,
                        110
                    ]
                }
            }
        }
    },
    "5fffb017d8a4dc2d13d5ed8ff857beb13c9a80f3": {
        "authored_data": "2011 Aug 17 14:59",
        "commit.message": "labeled break is not needed, there is only one loop.  COMPRESS-132\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1158757 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "281591e0e7de97667596e358d937383b01efffcd",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getPath(DumpArchiveEntry)')": [
                        375,
                        379,
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getPath(DumpArchiveEntry)')": [
                        378
                    ]
                }
            }
        }
    },
    "281591e0e7de97667596e358d937383b01efffcd": {
        "authored_data": "2011 Aug 17 14:49",
        "commit.message": "make DumpArchiveEntry's getName consistent with other implementations by adding a trailing / for directories.  Strip leading . if present.  COMPRESS-132\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1158752 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b0e55a15f46d261eedde807b7df19959dadf57be",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        220
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'setName(String)')": [
                        566
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        198,
                        221,
                        565,
                        566,
                        567,
                        570,
                        571,
                        572
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'getOriginalName')": [
                        568,
                        569
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', 'setName(String)')": [
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        112,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        112,
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/DumpTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'checkDumpArchive(File)')": [
                        107,
                        108,
                        109,
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'checkDumpArchive(File)')": [
                        107,
                        108,
                        109,
                        110
                    ]
                }
            }
        }
    }
}