{
    "0646aa7d4d0ece484e26e8ab262265cc9263c350": {
        "authored_data": "2018 Apr 22 16:20",
        "commit.message": "COMPRESS-445 try to get compressed count for all supported methods\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "22c79b2f6abf6fbe7292e097dfb1edfaf8584613",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getCompressedCount')": [
                        477,
                        478
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        479,
                        480,
                        1099
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        475,
                        476,
                        477,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        1118
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getCompressedCount')": [
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493
                    ]
                }
            }
        }
    },
    "22c79b2f6abf6fbe7292e097dfb1edfaf8584613": {
        "authored_data": "2018 Apr 22 16:20",
        "commit.message": "COMPRESS-445 cosmetics\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "02c963a47ecb50a7f84b9711841e60447f9bfcc1",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', None)": [
                        122,
                        123,
                        124,
                        130,
                        131,
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/InflaterInputStream.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        43,
                        185,
                        186,
                        187,
                        193,
                        194,
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        103,
                        104,
                        105,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'getBytesRead')": [
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        158,
                        159,
                        160
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'getBytesRead')": [
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        91,
                        92,
                        93,
                        94,
                        99,
                        100,
                        101,
                        102
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/BitInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#BitInputStream', None)": [
                        191
                    ],
                    "('org.apache.commons.compress.utils#BitInputStream', 'getBytesRead')": [
                        192,
                        193
                    ],
                    "(None, None)": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#BitInputStream', None)": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        137,
                        138
                    ],
                    "('org.apache.commons.compress.utils#BitInputStream', 'getBytesRead')": [
                        135,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/InputStreamStatistics.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ]
                }
            }
        }
    },
    "02c963a47ecb50a7f84b9711841e60447f9bfcc1": {
        "authored_data": "2018 Apr 22 15:58",
        "commit.message": "COMPRESS-445 provide statistics when uncompressing\n\npatch by Andreas Beeker\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "166b186e826799d30de2b2cab4bfc54410d02b0a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', None)": [
                        37
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'read')": [
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', None)": [
                        40,
                        67,
                        68,
                        120,
                        121,
                        122,
                        125,
                        126,
                        127
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'read')": [
                        115,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'getCompressedCount')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'getUncompressedCount')": [
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        79,
                        117,
                        118,
                        119,
                        473,
                        474,
                        475,
                        479,
                        480,
                        481
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        225,
                        226
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        469
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getCompressedCount')": [
                        476,
                        477,
                        478
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getUncompressedCount')": [
                        482,
                        483
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        42,
                        43,
                        185,
                        188,
                        189,
                        190,
                        193,
                        194
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getCompressedCount')": [
                        186,
                        187
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getUncompressedCount')": [
                        191,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        34,
                        103,
                        106,
                        107,
                        108,
                        111,
                        112
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'getCompressedCount')": [
                        104,
                        105
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'getUncompressedCount')": [
                        109,
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'getBytesRead')": [
                        158,
                        159
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        160,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        38,
                        93,
                        94,
                        97,
                        98
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', 'getCompressedCount')": [
                        91,
                        92
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', 'getUncompressedCount')": [
                        95,
                        96
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/BitInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#BitInputStream', None)": [
                        41,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#BitInputStream', None)": [
                        41,
                        53,
                        190,
                        191
                    ],
                    "('org.apache.commons.compress.utils#BitInputStream', 'getBytesRead')": [
                        192,
                        193
                    ],
                    "(None, None)": [
                        194
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        43,
                        651
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        600,
                        601,
                        632,
                        633,
                        634
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testInputStreamStatistics')": [
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'readStream(InputStream,ArchiveEntry,Map)')": [
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650
                    ]
                }
            }
        }
    },
    "166b186e826799d30de2b2cab4bfc54410d02b0a": {
        "authored_data": "2018 Apr 22 15:45",
        "commit.message": "whitespace\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "bd3e6cf204f249c2d60eca2268c8b9f402149f1b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        179,
                        180,
                        181,
                        182,
                        183
                    ]
                }
            }
        }
    },
    "bd3e6cf204f249c2d60eca2268c8b9f402149f1b": {
        "authored_data": "2018 Apr 22 15:44",
        "commit.message": "COMPRESS-447 turn ArrayIndexOutOfBoundsExceptions into ZipExceptions\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "7778533696b9644be3680228f25fce21e680e364",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        178,
                        184,
                        185,
                        186,
                        187
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', None)": [
                        98,
                        99,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtilsTest', 'parseTurnsArrayIndexOutOfBoundsIntoZipException')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ]
                }
            }
        }
    },
    "7778533696b9644be3680228f25fce21e680e364": {
        "authored_data": "2018 Apr 22 14:25",
        "commit.message": "ensure all skip call go through IOUtils.skip\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "765b8f88bdb9d3f9f0c7032208ab020d217953b3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        1164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        1164
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'skip(long)')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'skip(long)')": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', 'skip(long)')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', 'skip(long)')": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        322
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read(byte,int,int)')": [
                        323
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorInputStream', 'skip(long)')": [
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorInputStream', 'skip(long)')": [
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'skip(long)')": [
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'skip(long)')": [
                        239
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', 'skip(long)')": [
                        158
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', 'skip(long)')": [
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'skip(long)')": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'skip(long)')": [
                        59
                    ]
                }
            }
        }
    },
    "765b8f88bdb9d3f9f0c7032208ab020d217953b3": {
        "authored_data": "2018 Apr 22 13:30",
        "commit.message": "use IOUtils.skip\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "69f38e81872d70705fd7919df3d771f28c22dadc",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        216
                    ]
                }
            }
        }
    },
    "69f38e81872d70705fd7919df3d771f28c22dadc": {
        "authored_data": "2018 Apr 21 18:50",
        "commit.message": "Deprecate charset constants superseded by Java 7\n",
        "commit.author.name": "Matt Sicker",
        "pcid": "7a8f3c379fdb17fc57484123a5a81b4aeb4cb234",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        76,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        76,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/Charsets.java": {
                "old": {
                    "(None, None)": [
                        55
                    ],
                    "('org.apache.commons.compress.utils#Charsets', None)": [
                        98,
                        110,
                        123,
                        135,
                        147,
                        159
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        55
                    ],
                    "('org.apache.commons.compress.utils#Charsets', None)": [
                        98,
                        100,
                        111,
                        113,
                        125,
                        127,
                        138,
                        140,
                        151,
                        153,
                        164,
                        166
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/utils/CharsetsTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#CharsetsTest', None)": [
                        41,
                        44,
                        45,
                        46,
                        49,
                        50,
                        51,
                        54,
                        55,
                        56,
                        59,
                        60,
                        61,
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testIso8859_1')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testUsAscii')": [
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testUtf16')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testUtf16Be')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testUtf16Le')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.compress.utils#CharsetsTest', 'testUtf8')": [
                        67,
                        68
                    ],
                    "(None, None)": [
                        69,
                        70
                    ]
                }
            }
        }
    }
}