{
    "ccf4ce767a6cc07f1a88a0c33393e394af3c328b": {
        "authored_data": "2017 Dec 28 16:02",
        "commit.message": "COMPRESS-424 add array bounds checks, detect corrupted input\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "34b75c6f0ac96df0221bfbd11cafdc62dc0baa79",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'hbCreateDecodeTables(int,int,int,char,int,int,int)')": [
                        407,
                        422
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'createHuffmanDecodingTables(int,int)')": [
                        525
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode')": [
                        582,
                        605,
                        617,
                        620,
                        621,
                        622,
                        623,
                        659,
                        671,
                        674
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode0(int)')": [
                        681,
                        683,
                        688,
                        691,
                        692
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupBlock')": [
                        712
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'checkBounds(int,int,String)')": [
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        409,
                        410,
                        411
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'hbCreateDecodeTables(int,int,int,char,int,int,int)')": [
                        417,
                        418,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'recvDecodingTables')": [
                        490,
                        491,
                        492,
                        509
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'createHuffmanDecodingTables(int,int)')": [
                        542
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode')": [
                        599,
                        602,
                        623,
                        624,
                        625,
                        635,
                        638,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        662,
                        665,
                        686,
                        687,
                        688,
                        698,
                        701,
                        704,
                        705,
                        706
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getAndMoveToFrontDecode0')": [
                        713,
                        715,
                        716,
                        719,
                        722,
                        725,
                        726,
                        727,
                        728
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupBlock')": [
                        748,
                        749,
                        750
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartA')": [
                        774
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartA')": [
                        800
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupRandPartB')": [
                        820
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'setupNoRandPartB')": [
                        859
                    ]
                }
            }
        }
    },
    "34b75c6f0ac96df0221bfbd11cafdc62dc0baa79": {
        "authored_data": "2017 Dec 28 13:20",
        "commit.message": "add write support for Zstandard\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "9190a2debf0f48fd03453b0edf44601612957463",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        636
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'getOutputStreamCompressorNames')": [
                        734
                    ]
                },
                "new": {
                    "(None, None)": [
                        59
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        637
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorOutputStream(String,OutputStream)')": [
                        692,
                        693,
                        694,
                        695,
                        696,
                        697
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'getOutputStreamCompressorNames')": [
                        741
                    ]
                }
            }
        }
    },
    "810ba6f292cb4eca0d843555c1e8985d9df977c4": {
        "authored_data": "2017 Dec 28 12:57",
        "commit.message": "use the more conventional \"zstd\" as abbreviation of Zstandard\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "79c1753add68280b0cdc1018047786fb68d02c73",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        201
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStreamTest', 'testZstandardUnarchive')": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStreamTest', 'testZstandardUnarchive')": [
                        144
                    ]
                }
            }
        }
    },
    "79c1753add68280b0cdc1018047786fb68d02c73": {
        "authored_data": "2017 Dec 28 12:48",
        "commit.message": "mention ZSTANDARD as supported format in factory's javadoc\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6ae716d458c52e1fbe205c78edf37af4fbb304cf",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        528
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        528
                    ]
                }
            }
        }
    },
    "9db5028656f9be41ae5809f88ddd4c8ac0b48364": {
        "authored_data": "2017 Dec 27 14:07",
        "commit.message": "COMPRESS-435 Replaces instanceof checks with a type marker in LZ77 support code.\n\nSubmitted-By: BELUGA BEHR\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2a2f1dc48e22a34ddb72321a4db211da91aa933b",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        119,
                        120,
                        122,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        119,
                        120,
                        122,
                        123,
                        125,
                        126,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz77support/LZ77Compressor.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', None)": [
                        87,
                        88,
                        89,
                        90,
                        131,
                        160,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77Compressor', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        136,
                        137,
                        138,
                        139,
                        145,
                        169,
                        170,
                        171,
                        172,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', None)": [
                        105,
                        106,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorOutputStream', None)": [
                        105,
                        106,
                        108,
                        109,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/lz77support/LZ77CompressorTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77CompressorTest', 'assertSize(int,List)')": [
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#LZ77CompressorTest', 'assertSize(int,List)')": [
                        310
                    ]
                }
            }
        }
    },
    "2a2f1dc48e22a34ddb72321a4db211da91aa933b": {
        "authored_data": "2017 Dec 22 18:34",
        "commit.message": "COMPRESS-432 make sure code doesn't get stuck in infinite loop\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "dcb0486fb4cb2b6592c04d6ec2edbd3f690df5f2",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseCentralDirectoryFormat(byte,int,int)')": [
                        313
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseCentralDirectoryFormat(byte,int,int)')": [
                        313
                    ]
                }
            }
        }
    },
    "dcb0486fb4cb2b6592c04d6ec2edbd3f690df5f2": {
        "authored_data": "2017 Dec 22 18:02",
        "commit.message": "COMPRESS-433 fix TarArchiveOutputStream javadocs, thanks to  Gerard Weatherby\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "78cb9bf36dab81e15887f451fbc964cf57e94739",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        119,
                        128,
                        139,
                        150,
                        165,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        119,
                        128,
                        139,
                        150,
                        165,
                        187
                    ]
                }
            }
        }
    }
}