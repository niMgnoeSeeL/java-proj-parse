{
    "3621e2934832eebd56dc1fd6875b400c7a2c4061": {
        "authored_data": "2013 Jan 11 01:43",
        "commit.message": "SimpleDateFormat uses yyyy not YYYY for year\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1431790 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2a2c5fcfb9bb01854f96d15cadc3727c6beac8c2",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestampTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestampTest', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X5455_ExtendedTimestampTest', None)": [
                        48
                    ]
                }
            }
        }
    },
    "0e1d5a4385ec91ddc10900f8733f086513636609": {
        "authored_data": "2013 Jan 08 21:54",
        "commit.message": "COMPRESS-210 - handle zip extra field 0x5455 - Extended Timestamp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1430562 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "ba8d7c43eb43293756e5f633a81dc73c9f85ad04",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        43
                    ]
                }
            }
        }
    },
    "ba8d7c43eb43293756e5f633a81dc73c9f85ad04": {
        "authored_data": "2013 Jan 08 21:46",
        "commit.message": "COMPRESS-211 - handle zip extra field 0x7875.  I improved code coverage a little for the unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1430557 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "3ece2da683f4e60fdb2724f72db6249d4920db21",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/X7875_NewUnix.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'equals(Object)')": [
                        250,
                        251,
                        252,
                        253,
                        254,
                        255
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'hashCode')": [
                        263,
                        264,
                        265,
                        266,
                        267,
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', None)": [
                        56,
                        57
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'equals(Object)')": [
                        252,
                        253
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnix', 'hashCode')": [
                        261,
                        262,
                        263,
                        264,
                        265
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/X7875_NewUnixTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnixTest', 'parseReparse(long,long,byte,long,long)')": [
                        198,
                        200,
                        212,
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnixTest', 'testMisc')": [
                        99,
                        104,
                        105
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnixTest', 'testParseReparse')": [
                        142,
                        143,
                        144,
                        169
                    ],
                    "('org.apache.commons.compress.archivers.zip#X7875_NewUnixTest', 'parseReparse(long,long,byte,long,long)')": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259
                    ]
                }
            }
        }
    },
    "2245d7ade5283dcf8bf01c2aed1016188771779b": {
        "authored_data": "2013 Jan 08 00:13",
        "commit.message": "COMPRESS-211 - handle zip extra field 0x7875 - Info Zip New Unix Extra Field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1430102 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "ccc7441a3a7a6d216770cc00dc0fa0b7146bd7f5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        74,
                        75,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'reverse(byte)')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'bigToLong(BigInteger)')": [
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'longToBig(long)')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'signedByteToUnsignedInt(byte)')": [
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'unsignedIntToSignedByte(int)')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        88,
                        112,
                        113,
                        114,
                        136,
                        137,
                        138,
                        139,
                        140,
                        164,
                        165,
                        166,
                        167,
                        168,
                        178,
                        179,
                        180,
                        181
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testReverse')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testBigToLong')": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testLongToBig')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testSignedByteToUnsignedInt')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testUnsignedIntToSignedByte')": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202
                    ]
                }
            }
        }
    },
    "ccc7441a3a7a6d216770cc00dc0fa0b7146bd7f5": {
        "authored_data": "2013 Jan 08 00:01",
        "commit.message": "COMPRESS-213 - ZipShort, ZipLong, ZipEightByteInteger should implement Serializable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1430097 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "a6072ce36e786677fed5f703b13afb0900f4f9d3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        32,
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        30,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        29,
                        30,
                        31
                    ]
                }
            }
        }
    },
    "a6072ce36e786677fed5f703b13afb0900f4f9d3": {
        "authored_data": "2013 Jan 07 22:54",
        "commit.message": "Document why local buffers are used (and restrictions on their use)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1430074 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "57d8a1c37c9d6c08be59d707b6b220e14ab5a281",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        135
                    ]
                }
            }
        }
    },
    "57d8a1c37c9d6c08be59d707b6b220e14ab5a281": {
        "authored_data": "2013 Jan 06 10:29",
        "commit.message": "unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1429494 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a2f978e97f13697e7adfddc3f96a9131803db679",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/Charsets.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            }
        }
    },
    "a2f978e97f13697e7adfddc3f96a9131803db679": {
        "authored_data": "2013 Jan 05 19:28",
        "commit.message": "COMPRESS-172 reuse temporary byte-arrays in several places to reduce garbage collection pressure - inspired by a patch by Thomas Mair\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1429363 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4497c3cba901cedc1c201a04aaeda4555d0e46ae",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        144,
                        145,
                        146,
                        148,
                        150,
                        165,
                        166,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        145,
                        147,
                        149,
                        150,
                        151,
                        152,
                        167,
                        168,
                        169,
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextCPIOEntry')": [
                        168,
                        169,
                        170,
                        172,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'skip(int)')": [
                        205,
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextCPIOEntry')": [
                        173,
                        174,
                        176,
                        177,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'skip(int)')": [
                        208,
                        210
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        178,
                        181,
                        182
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        251,
                        253,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        255,
                        256
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', 'getLocalFileDataData')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        83
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', 'getLocalFileDataData')": [
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getLocalFileDataExtra')": [
                        478
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        58
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getLocalFileDataExtra')": [
                        479
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        186,
                        193,
                        195,
                        201,
                        213,
                        218,
                        227,
                        230,
                        236,
                        239,
                        242,
                        248,
                        252
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skip(long)')": [
                        487,
                        490
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        658,
                        659,
                        660,
                        663,
                        664,
                        679,
                        680,
                        681,
                        684,
                        685,
                        686,
                        689,
                        690
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        198,
                        200,
                        206,
                        218,
                        223,
                        232,
                        235,
                        241,
                        244,
                        247,
                        253,
                        257
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skip(long)')": [
                        494,
                        495,
                        496
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        664,
                        665,
                        668,
                        669,
                        684,
                        685,
                        688,
                        689,
                        690,
                        693,
                        694,
                        695,
                        696
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        447
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        408,
                        409,
                        410,
                        419,
                        420
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        437,
                        438,
                        439,
                        443,
                        449,
                        457,
                        460,
                        464,
                        467,
                        470,
                        473,
                        476,
                        479,
                        482,
                        485,
                        488,
                        497
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory64')": [
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        702,
                        703,
                        704
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory32')": [
                        720,
                        721,
                        722
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        817,
                        818,
                        819,
                        820,
                        821
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'startsWithLocalFileHeader')": [
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        414,
                        415,
                        424,
                        425
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        442,
                        446,
                        452,
                        460,
                        463,
                        467,
                        470,
                        473,
                        476,
                        479,
                        482,
                        485,
                        488,
                        491,
                        500
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory64')": [
                        690,
                        691,
                        692,
                        693,
                        699,
                        700
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory32')": [
                        716,
                        717
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        812,
                        813,
                        814,
                        815
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'startsWithLocalFileHeader')": [
                        851,
                        852
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read')": [
                        216,
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'read')": [
                        219
                    ]
                }
            }
        }
    }
}