{
    "15f04cc8863e427e4f09b211a324eae28d311041": {
        "authored_data": "2011 Jul 25 18:32",
        "commit.message": "if the one-arg version of setName is protected, the two-arg version should be as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1150832 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f23ef9f4a005db4c14e012d91b2c395a3ee6b7a6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        500,
                        501,
                        502,
                        503
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setName(String,byte)')": [
                        504
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setName(String,byte)')": [
                        508
                    ]
                }
            }
        }
    },
    "cb1fdba624638695efa13c7ac8b9f75e93d4a4e0": {
        "authored_data": "2011 Jul 25 16:31",
        "commit.message": "constants used in ZIP64 to mark sizes that are to be read from the ZIP64ExtraField instead of their normal location\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150771 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e53e88aa4e35a066ab83942fd6b4cc1fc2a8ebb0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38
                    ]
                }
            }
        }
    },
    "e53e88aa4e35a066ab83942fd6b4cc1fc2a8ebb0": {
        "authored_data": "2011 Jul 25 13:28",
        "commit.message": "Java5ify ZipArchiveInputStream implementation and related classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150694 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3f1a7c496cb915dd2f4205fe236f5b6a633dd4b8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        38,
                        41
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'register(Class)')": [
                        56
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'createExtraField(ZipShort)')": [
                        79
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        130,
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        38,
                        41
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'register(Class)')": [
                        56
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'createExtraField(ZipShort)')": [
                        79
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        130,
                        185
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        152,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        85,
                        93
                    ],
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', 'encodeHighChar(char)')": [
                        175,
                        192
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        85,
                        93
                    ],
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', 'encodeHighChar(char)')": [
                        175,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        82
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtraFields(ZipExtraField)')": [
                        289
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getExtraFields(boolean)')": [
                        323,
                        327
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addExtraField(ZipExtraField)')": [
                        343
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addAsFirstExtraField(ZipExtraField)')": [
                        362
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getExtraField(ZipShort)')": [
                        406
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtra(byte)')": [
                        437
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        82,
                        171,
                        432,
                        491,
                        516,
                        527,
                        568,
                        637
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtraFields(ZipExtraField)')": [
                        290
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getExtraFields(boolean)')": [
                        324,
                        325,
                        329
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addExtraField(ZipExtraField)')": [
                        345
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addAsFirstExtraField(ZipExtraField)')": [
                        364
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getExtraField(ZipShort)')": [
                        408
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtra(byte)')": [
                        440
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        211,
                        223,
                        234,
                        313,
                        336
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        30,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        209,
                        221,
                        226
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        65,
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        221,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        65,
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        221
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        27,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        141,
                        153,
                        158,
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        115,
                        127,
                        132,
                        142
                    ]
                }
            }
        }
    },
    "3f1a7c496cb915dd2f4205fe236f5b6a633dd4b8": {
        "authored_data": "2011 Jul 25 09:53",
        "commit.message": "use long returning methods in Java5's Inflater/Deflater.  Addresses COMPRESS-129.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150608 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "1f439f3786b173db99a606c2f6a037f3785d6874",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        423
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        423
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        379,
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        379,
                        380
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        72,
                        73,
                        74,
                        75
                    ]
                }
            }
        }
    }
}