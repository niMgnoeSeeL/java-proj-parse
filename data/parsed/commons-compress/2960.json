{
    "1cc4e84f97616dc75445feb0160cf5045e272481": {
        "authored_data": "2010 May 12 20:39",
        "commit.message": "We can now handle pax archives\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@943676 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "29b210f053246190fd503bc2938a7a260f69052a",
        "changes": {
            "src/test/java/org/apache/commons/compress/ArchiveReadTests.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveReadTests', 'suite')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                }
            }
        }
    },
    "29b210f053246190fd503bc2938a7a260f69052a": {
        "authored_data": "2010 May 12 19:37",
        "commit.message": "Add cpio version of test\nNote: had to hack file list because cpio does not add trailing \"/\" to directory names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@943649 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "0bc6bec0b8607e7c7885aa987a95e7ba02020c5f",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        64
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            }
        }
    },
    "8006d3148251f3f68e475e21c67dabe9364ec015": {
        "authored_data": "2010 May 12 18:18",
        "commit.message": "Javadoc tidyup\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@943610 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "27dea24d42f04c5b9ebb7d7e283165edc34bddb7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        156,
                        157,
                        158,
                        166,
                        167,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        116,
                        121,
                        154,
                        159,
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        187,
                        188,
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        55,
                        70,
                        173,
                        174,
                        175,
                        184,
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        422
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        342
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', None)": [
                        117,
                        125,
                        133,
                        138,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnicodeCommentExtraField', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodePathExtraField.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnicodePathExtraField', None)": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        210
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        336,
                        337,
                        338,
                        428,
                        429
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        336,
                        426,
                        427,
                        428,
                        429
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        434
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        35
                    ]
                }
            }
        }
    },
    "6209f812e69f00f4fbd49c82260142bf591d8091": {
        "authored_data": "2010 May 10 17:36",
        "commit.message": "@since markers\nJavadoc updates\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@942826 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "23bfa665c08ed98fd39e2148479b597954f6978f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        253,
                        254,
                        291,
                        292,
                        331,
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        110,
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioConstants.java": {
                "old": {
                    "(None, None)": [
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.jar#JarArchiveInputStream', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'setLinkName(String)')": [
                        364
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        180,
                        181,
                        364,
                        365,
                        366,
                        367,
                        556,
                        557,
                        568,
                        569
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'setLinkName(String)')": [
                        370
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        404,
                        405
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "old": {
                    "(None, None)": [
                        158,
                        159,
                        160
                    ]
                },
                "new": {
                    "(None, None)": [
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        171,
                        172,
                        192,
                        193,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        123,
                        124,
                        257,
                        258
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        175,
                        176,
                        186,
                        187,
                        304,
                        305,
                        378,
                        379,
                        405,
                        406
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        332,
                        333,
                        334
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        31,
                        32,
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        55,
                        56,
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        55,
                        56,
                        57,
                        58,
                        66,
                        67,
                        68,
                        69,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                }
            }
        }
    },
    "45fa6e0ea7fd8618a71e6ef981cdf9d9ac637143": {
        "authored_data": "2010 May 10 14:14",
        "commit.message": "COMPRESS-109 - Tar implementation does not support Pax headers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@942748 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "1e4034bf41b21852d674e1cc0b845df1feda793f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "(None, None)": [
                        26,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        226,
                        227,
                        228,
                        229
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        231,
                        232,
                        300,
                        301
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299
                    ]
                }
            }
        }
    }
}