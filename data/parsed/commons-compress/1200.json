{
    "27b16a26212d5e4b61ebe07c4bd9c36465f56702": {
        "authored_data": "2018 Jan 05 12:31",
        "commit.message": "COMPRESS-380 support data descriptors with ENHANCED_DEFLATED\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "aed74ea03276362cd301a36787774843ebd4f70c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        326,
                        327,
                        328,
                        329,
                        330
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        779
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        785
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        316,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        793
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        799,
                        800
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        224,
                        240,
                        241,
                        242
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'readDeflate64CompressedStreamWithDataDescriptor')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ]
                }
            }
        }
    },
    "aed74ea03276362cd301a36787774843ebd4f70c": {
        "authored_data": "2018 Jan 05 12:29",
        "commit.message": "COMPRESS-380 allow underlying stream to outlive HuffmanDecoder\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5d0b71fe9c3ab81717245f80eb71840f9a22a5aa",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'read(byte,int,int)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        32,
                        42,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'read(byte,int,int)')": [
                        80
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'close')": [
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'closeDecoder')": [
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'close')": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'close')": [
                        121
                    ]
                }
            }
        }
    },
    "5d0b71fe9c3ab81717245f80eb71840f9a22a5aa": {
        "authored_data": "2018 Jan 05 11:49",
        "commit.message": "the list of supported methods has grown by now\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "334f1de9a3efa31303c2788c209d249d7b33d3aa",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        327
                    ]
                }
            }
        }
    },
    "334f1de9a3efa31303c2788c209d249d7b33d3aa": {
        "authored_data": "2018 Jan 05 10:57",
        "commit.message": "fix indentation\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f4b750165bc27f6a36bc3abed650e18d474e296b",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        37,
                        39,
                        40,
                        42,
                        49,
                        51,
                        56,
                        58,
                        65,
                        67,
                        75,
                        77,
                        87,
                        89,
                        102,
                        103,
                        105,
                        119,
                        120,
                        122,
                        133,
                        134,
                        136,
                        149,
                        150,
                        152
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'readWhenClosed')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenClosed')": [
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'delegatesAvailable')": [
                        59,
                        60,
                        61,
                        63,
                        64
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeCallsDecoder')": [
                        68,
                        69,
                        71,
                        72,
                        74
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeIsDelegatedJustOnce')": [
                        78,
                        79,
                        81,
                        83,
                        84,
                        86
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlock')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockViaFactory')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockAvailable')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'streamIgnoresExtraBytesAfterDeflatedInput')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'throwsEOFExceptionOnTruncatedStreams')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        160,
                        161,
                        162,
                        163
                    ],
                    "(None, None)": [
                        164,
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        37,
                        39,
                        40,
                        42,
                        48,
                        50,
                        54,
                        56,
                        62,
                        64,
                        71,
                        73,
                        82,
                        84,
                        95,
                        96,
                        98,
                        110,
                        111,
                        113,
                        123,
                        124,
                        126,
                        138,
                        139,
                        141
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'readWhenClosed')": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'properSizeWhenClosed')": [
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'delegatesAvailable')": [
                        57,
                        58,
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeCallsDecoder')": [
                        65,
                        67,
                        68,
                        70
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'closeIsDelegatedJustOnce')": [
                        74,
                        76,
                        78,
                        79,
                        81
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlock')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockViaFactory')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        105,
                        106,
                        107,
                        108,
                        109
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockAvailable')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'streamIgnoresExtraBytesAfterDeflatedInput')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'throwsEOFExceptionOnTruncatedStreams')": [
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        149,
                        150,
                        151
                    ],
                    "(None, None)": [
                        152,
                        153
                    ]
                }
            }
        }
    },
    "f4b750165bc27f6a36bc3abed650e18d474e296b": {
        "authored_data": "2018 Jan 05 10:55",
        "commit.message": "COMPRESS-380 document EOFException and add a test\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b97a02ca1c1c220f18971bce3dc41d781da8f5f0",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        47,
                        48,
                        49,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'readBits(BitInputStream,int)')": [
                        491
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'readBits(BitInputStream,int)')": [
                        491
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        136,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'streamIgnoresExtraBytesAfterDeflatedInput')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'throwsEOFExceptionOnTruncatedStreams')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "(None, None)": [
                        164,
                        165,
                        166
                    ]
                }
            }
        }
    },
    "b97a02ca1c1c220f18971bce3dc41d781da8f5f0": {
        "authored_data": "2018 Jan 05 09:45",
        "commit.message": "COMPRESS-380 ensure end if stream is detected properly\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0e74bef9b2bcc7f41123fb2eb6d10433ebb80a23",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'decode(byte,int,int)')": [
                        133,
                        134,
                        137,
                        138,
                        139,
                        150,
                        153
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        202,
                        281,
                        288
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'nextSymbol(BitInputStream,BinaryTreeNode)')": [
                        329
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'populateDynamicTables(BitInputStream,int,int)')": [
                        336,
                        340,
                        358,
                        361,
                        364
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        494
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'decode(byte,int,int)')": [
                        134,
                        135,
                        138,
                        139,
                        140,
                        151,
                        154
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        203,
                        282,
                        289,
                        483,
                        486,
                        487
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'nextSymbol(BitInputStream,BinaryTreeNode)')": [
                        330
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'populateDynamicTables(BitInputStream,int,int)')": [
                        337,
                        341,
                        359,
                        362,
                        365
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'readBits(int)')": [
                        484,
                        485
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'readBits(BitInputStream,int)')": [
                        488,
                        489,
                        490,
                        491,
                        492,
                        493
                    ]
                }
            }
        }
    },
    "0e74bef9b2bcc7f41123fb2eb6d10433ebb80a23": {
        "authored_data": "2018 Jan 05 09:23",
        "commit.message": "COMPRESS-380 state is never null\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "bca3b08b2779c1bc95d23455bae441dfaf781e83",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'available')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'available')": [
                        172
                    ]
                }
            }
        }
    },
    "bca3b08b2779c1bc95d23455bae441dfaf781e83": {
        "authored_data": "2018 Jan 05 06:33",
        "commit.message": "small fixme\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "53ec5829855e8a80b2857b7cfef8bce3e63058a7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        317
                    ]
                }
            }
        }
    },
    "53ec5829855e8a80b2857b7cfef8bce3e63058a7": {
        "authored_data": "2018 Jan 05 06:00",
        "commit.message": "Add DEFLATE64 support to CompressorStreamfactory.\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ccc3067f5216630d6c96f21f1ed2ef174aba9bd5",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        537
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'getInputStreamCompressorNames')": [
                        741
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        318,
                        319,
                        320,
                        323,
                        324,
                        552,
                        553
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'getDeflate64')": [
                        321,
                        322
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream,boolean)')": [
                        633,
                        634,
                        635,
                        636
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'getInputStreamCompressorNames')": [
                        761
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        29
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'uncompressedBlockViaFactory')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', None)": [
                        119,
                        120,
                        121,
                        122
                    ]
                }
            }
        }
    },
    "ccc3067f5216630d6c96f21f1ed2ef174aba9bd5": {
        "authored_data": "2018 Jan 05 05:52",
        "commit.message": "COMPRESS-380 add DEFLATE64 support to ZipArchiveInputStream\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "07cc1a278b217d45cb090ff6cb3a7934105cb2d0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        317,
                        322,
                        324
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        317,
                        319,
                        324,
                        326,
                        327,
                        328
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        431
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        209,
                        210,
                        211,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'readDeflate64CompressedStream')": [
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ]
                }
            }
        }
    }
}