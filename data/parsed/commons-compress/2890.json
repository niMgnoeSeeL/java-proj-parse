{
    "58c56fc1f916219998787d67c3de224e2dc1f2eb": {
        "authored_data": "2011 Jul 23 12:41",
        "commit.message": "reduce PMD whining\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1150096 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "aa9d0bc38203cdf072f964dfdf5c72f3960d7093",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(InputStream)')": [
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(InputStream)')": [
                        225,
                        226,
                        227
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'closeEntry')": [
                        133
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        240,
                        241,
                        242,
                        243
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'closeEntry')": [
                        133
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        240,
                        241,
                        242,
                        243
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        337,
                        338,
                        339,
                        340
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        337,
                        338,
                        339
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', None)": [
                        69,
                        70,
                        71,
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', 'equals(Object)')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', 'hashCode')": [
                        79,
                        80
                    ],
                    "(None, None)": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'skipRecord')": [
                        176,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'readRecord')": [
                        199,
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'close')": [
                        410,
                        411
                    ],
                    "(None, None)": [
                        412
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'skipRecord')": [
                        176,
                        177
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'readRecord')": [
                        197,
                        198
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'close')": [
                        406,
                        407
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'write(byte,int,int)')": [
                        531,
                        532,
                        533,
                        534,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'write(byte,int,int)')": [
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        541,
                        542,
                        543,
                        544,
                        545
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        203,
                        241,
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        203,
                        241,
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        99,
                        100,
                        108,
                        109,
                        110,
                        111,
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        99,
                        100,
                        101,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        945
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        945
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'sendMTFValues')": [
                        775
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'sendMTFValues7(int)')": [
                        1128
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'sendMTFValues')": [
                        775
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', 'sendMTFValues7')": [
                        1128
                    ]
                }
            }
        }
    },
    "aa9d0bc38203cdf072f964dfdf5c72f3960d7093": {
        "authored_data": "2011 Jul 23 05:03",
        "commit.message": "detect sparse entries in tar and allow users to skip them.  Submitted by Patrick Dreyer.  COMPRESS-145 (forgot to save two buffers, oops)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1149799 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "eedeff97d84db068a0fc56c91c4f39a5db2130bb",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        231,
                        254
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'parseTarHeader(byte)')": [
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        897
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        262,
                        285,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        598,
                        836,
                        837,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isExtended')": [
                        578,
                        579
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'getRealSize')": [
                        587,
                        588
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isGNUSparse')": [
                        596,
                        597
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'parseTarHeader(byte)')": [
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'evaluateType(byte)')": [
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        226
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        188,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        221,
                        225,
                        226,
                        227,
                        228
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        357,
                        358,
                        359,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecord')": [
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGNUSparse')": [
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        449,
                        450,
                        451,
                        452,
                        453,
                        454
                    ]
                }
            }
        }
    },
    "eedeff97d84db068a0fc56c91c4f39a5db2130bb": {
        "authored_data": "2011 Jul 23 04:57",
        "commit.message": "detect sparse entries in tar and allow users to skip them.  Submitted by Patrick Dreyer.  COMPRESS-145\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1149798 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "934a96e0fb2f4aceadfd0ebbd713d43e687e4a1d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        122,
                        123
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parseBoolean(byte,int)')": [
                        120,
                        121
                    ]
                }
            }
        }
    },
    "934a96e0fb2f4aceadfd0ebbd713d43e687e4a1d": {
        "authored_data": "2011 Jul 23 04:33",
        "commit.message": "Provide access to the raw bytes that made up the ZIP entry's name.  COMPRESS-123\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1149796 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a19e5f3692fb3f202b9ceeb8d7e1ce531220c7a6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        77,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setName(String,byte)')": [
                        504,
                        505,
                        506
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getRawName')": [
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        453
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        453
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testRawNameReadFromZipFile')": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        205,
                        206,
                        207,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testRawNameReadFromStream')": [
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'assertRawNameOfAcsiiTxt(ZipArchiveEntry)')": [
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383
                    ],
                    "(None, None)": [
                        384
                    ]
                }
            }
        }
    },
    "a19e5f3692fb3f202b9ceeb8d7e1ce531220c7a6": {
        "authored_data": "2011 Jul 23 03:04",
        "commit.message": "we can read the GNU variant of long file names in AR.  COMPRESS-141\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1149786 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b80aca0cd34f7faf516c4aaa64731a9860dd27bd",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        65
                    ]
                }
            }
        }
    }
}