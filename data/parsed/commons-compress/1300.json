{
    "90a73a4dee53129e33a552e49cb7835ecebb3a5f": {
        "authored_data": "2017 Jun 19 10:07",
        "commit.message": "Remove methods and change test + throw to assert to please the coveralls\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "d7e6e16ee2ea78d358ca0ed52163a63cc8f34743",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)')": [
                        166,
                        167,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)')": [
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        52,
                        53,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        81
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'growBuffer(ByteBuffer,int)')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'appendSurrogate(ByteBuffer,char)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            }
        }
    },
    "d162732f76f7db7097b7be6acc75b6938c453902": {
        "authored_data": "2017 Jun 19 00:04",
        "commit.message": "Add licence comment to HasCharset\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "b745af3975a0bb3acddbc59ef85860d08221a010",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/HasCharset.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19
                    ]
                }
            }
        }
    },
    "b745af3975a0bb3acddbc59ef85860d08221a010": {
        "authored_data": "2017 Jun 18 23:27",
        "commit.message": "Test that ebcidic encoding is supported (making sure \"%Uxxxx\" replacement strings don't use ascii encodings)\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n\n(cherry picked from commit f1ec715)\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "11fcc89fec70aae7eeda710e2bd26d93cb3c05c6",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEncodingTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        181,
                        183,
                        184,
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', None)": [
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testEbcidic')": [
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        187,
                        189,
                        190
                    ]
                }
            }
        }
    },
    "a67bdc013c9fd965abaca375b9b47554a115f40e": {
        "authored_data": "2017 Jun 18 22:55",
        "commit.message": "Do better estimating of required buffer size for character encoding. If an unencodable character is found that requires output buffer expansion, scan buffer for all such characters, and attempt to expand buffer only once.\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n\n(cherry picked from commit aa30e21)\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "db586baee29fc90f79898e9a274cc1bd585b5f53",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        110,
                        111,
                        114,
                        120,
                        121,
                        122,
                        124,
                        125,
                        126,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        51,
                        52,
                        53,
                        54,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        217,
                        218
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        110,
                        111,
                        114,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        137,
                        138,
                        140,
                        141,
                        142,
                        145,
                        146,
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)')": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encodeSurrogate(CharBuffer,char)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'estimateInitialBufferSize(CharsetEncoder,int)')": [
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'estimateIncrementalEncodingSize(CharsetEncoder,int)')": [
                        215,
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'growBufferBy(ByteBuffer,int)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "(None, None)": [
                        148
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEncodingTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        183,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        183,
                        184,
                        185
                    ]
                }
            }
        }
    },
    "db586baee29fc90f79898e9a274cc1bd585b5f53": {
        "authored_data": "2017 Jun 17 00:17",
        "commit.message": "COMPRESS-410 Remove Non-NIO character set encoders. As a special case, the UTF-8 encoder will replace malformed / unmappable input with '?'. This behavior is required for compatibility with existing behavior.\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n\n(cherry picked from commit 1987719)\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "cb590b38af2827acb4dc5ab3919415d3cc75d88c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/NioZipEncoding.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        41,
                        47,
                        50,
                        55,
                        56,
                        68,
                        69,
                        117
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'canEncode(String)')": [
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        73,
                        74,
                        75,
                        76,
                        79,
                        80
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'decode(byte)')": [
                        121,
                        122,
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        155
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', None)": [
                        37,
                        38,
                        40,
                        41,
                        42,
                        47,
                        50,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        63,
                        64,
                        66,
                        85,
                        86,
                        87,
                        98,
                        99,
                        100,
                        101,
                        103,
                        148
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'getCharset')": [
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'canEncode(String)')": [
                        70
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newEncoder')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'newDecoder')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'encode(String)')": [
                        107,
                        110,
                        111
                    ],
                    "('org.apache.commons.compress.archivers.zip#NioZipEncoding', 'decode(byte)')": [
                        152
                    ]
                }
            }
        }
    },
    "cb590b38af2827acb4dc5ab3919415d3cc75d88c": {
        "authored_data": "2017 Jun 17 16:45",
        "commit.message": "javadoc for HasCharset\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n\n(cherry picked from commit b70c7c2)\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "cec72ce690353c90f3867191d7e657ba59ed2612",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/HasCharset.java": {
                "old": {
                    "(None, None)": [
                        8
                    ]
                },
                "new": {
                    "(None, None)": [
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        16,
                        17,
                        18,
                        19,
                        20
                    ]
                }
            }
        }
    },
    "cec72ce690353c90f3867191d7e657ba59ed2612": {
        "authored_data": "2017 Jun 17 00:17",
        "commit.message": "COMPRESS-410 Remove Non-NIO character set encoders. As a special case, the UTF-8 encoder will replace malformed / unmappable input with '?'. This behavior is required for compatibility with existing behavior.\n\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n\n(cherry picked from commit 0d41ac4)\nSigned-off-by: Simon Spero <sesuncedu@gmail.com>\n",
        "commit.author.name": "Simon Spero",
        "pcid": "60a459abeaa5dee0010ee645072404b814a4041e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        31
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        142,
                        143,
                        163,
                        177,
                        201,
                        204,
                        205,
                        234,
                        239,
                        240,
                        241
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        211,
                        212,
                        213,
                        214,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        33,
                        34,
                        54,
                        68,
                        92,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        121,
                        122
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'getZipEncoding(String)')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        114,
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEncodingTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testSimpleCp437Encoding')": [
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testSimpleCp850Encoding')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        29,
                        31
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', None)": [
                        39,
                        54,
                        55,
                        62,
                        70,
                        71,
                        74,
                        75,
                        78,
                        80
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testNothingToMakeCoverallsHappier')": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testGetNonexistentEncodng')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testIsUTF8')": [
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testSimpleCp437Encoding')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'testSimpleCp850Encoding')": [
                        77
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingsTest(int)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingTest', 'doSimpleEncodingTest(String,byte)')": [
                        163
                    ]
                }
            }
        }
    }
}