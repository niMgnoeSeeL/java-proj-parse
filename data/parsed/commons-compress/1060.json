{
    "b15221d6f8478c936542c2c1a4cc1b6475c8a903": {
        "authored_data": "2018 Apr 29 18:37",
        "commit.message": "COMPRESS-118 extract factory methods from FileToArchiveSink\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "9a84b4eec3ce4e22cd3e637a2eb9528fe71de5e9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/ArchiveCli.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#ArchiveCli', 'main(String)')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#ArchiveCli', 'main(String)')": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/FileToArchiveSink.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        34,
                        35,
                        121,
                        122
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', None)": [
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', 'forStream(ArchiveOutputStream)')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', 'forStream(String,OutputStream)')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', 'forFile(String,File)')": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', 'forChannel(String,SeekableByteChannel)')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.compress.archivers.examples#FileToArchiveSink', 'prefersSeekableByteChannel(String)')": [
                        119,
                        120
                    ]
                }
            }
        }
    },
    "9a84b4eec3ce4e22cd3e637a2eb9528fe71de5e9": {
        "authored_data": "2018 Apr 29 18:29",
        "commit.message": "COMRESS-118 inner class can be static\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d1f9ac3a0b322b11b5cfc656237fb3627c23a9ee",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/DirectoryBasedSupplier.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#DirectoryBasedSupplier', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#DirectoryBasedSupplier', None)": [
                        54
                    ]
                }
            }
        }
    },
    "d1f9ac3a0b322b11b5cfc656237fb3627c23a9ee": {
        "authored_data": "2018 Apr 29 18:20",
        "commit.message": "COMPRESS-118 simplify code\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5694aaa8f624b9eb48bd12ae56575682bc85c57e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/DirectoryBasedSupplier.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#DirectoryBasedSupplier', None)": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.compress.archivers.examples#DirectoryBasedSupplier', None)": [
                        61
                    ]
                }
            }
        }
    },
    "5694aaa8f624b9eb48bd12ae56575682bc85c57e": {
        "authored_data": "2018 Apr 29 17:51",
        "commit.message": "COMPRESS-118 and one more missing generic\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "251936e2ed5ee2d784569d3fc28aefa9fc816a8b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archive.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Archive', None)": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archive', None)": [
                        107
                    ]
                }
            }
        }
    },
    "251936e2ed5ee2d784569d3fc28aefa9fc816a8b": {
        "authored_data": "2018 Apr 29 17:48",
        "commit.message": "COMPRESS-118 should have specified type parameter\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "30a595d0d7b97a60e9703cb73214248b643c60ba",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archive.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Archive', None)": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archive', None)": [
                        55
                    ]
                }
            }
        }
    },
    "30a595d0d7b97a60e9703cb73214248b643c60ba": {
        "authored_data": "2018 Apr 29 17:36",
        "commit.message": "COMPRESS-118 add projection operation\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "82f9bfcb9102d84e96ed68172a1ddedeea3125af",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archive.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archive', None)": [
                        53,
                        54,
                        55,
                        56,
                        107,
                        108,
                        109,
                        110
                    ]
                }
            }
        }
    },
    "82f9bfcb9102d84e96ed68172a1ddedeea3125af": {
        "authored_data": "2018 Apr 29 17:10",
        "commit.message": "make code compile on Java7\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f62c523154dfedcf49a87a865db545bb8c55e795",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/DirectoryBasedSupplier.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.examples#DirectoryBasedSupplier', None)": [
                        70,
                        71,
                        72,
                        73
                    ],
                    "(None, None)": [
                        110
                    ]
                }
            }
        }
    },
    "eee4d197d25ad99614cb63445ea71557d6a75c43": {
        "authored_data": "2018 Apr 29 10:09",
        "commit.message": "COMPRESS-445 make most CompressorInputs implement InputStatistics\n\nthe sole exception is pack200 which is kind of special anyway\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a5103a8da17b80fac1e0c671ea143d4a5a6e8962",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'getUncompressedCount')": [
                        93,
                        94
                    ],
                    "(None, None)": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', None)": [
                        32,
                        34,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        105
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', None)": [
                        35,
                        36,
                        38,
                        39,
                        42,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'getCompressedCount')": [
                        103,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        193,
                        194,
                        195,
                        196,
                        199,
                        200
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'getUncompressedCount')": [
                        197,
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', None)": [
                        33,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', None)": [
                        35,
                        36,
                        37,
                        44,
                        69,
                        111,
                        112,
                        113,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorInputStream', 'getCompressedCount')": [
                        114,
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', None)": [
                        113,
                        114,
                        115,
                        116,
                        119,
                        120
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStream', 'getUncompressedCount')": [
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        74,
                        83,
                        152,
                        153,
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        38,
                        404
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        76,
                        77,
                        78,
                        87,
                        88,
                        89,
                        90,
                        157,
                        160,
                        161,
                        163,
                        397,
                        398,
                        399,
                        400,
                        401
                    ],
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', 'getCompressedCount')": [
                        402,
                        403
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', None)": [
                        40,
                        70,
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', None)": [
                        42,
                        43,
                        73,
                        115,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.compress.compressors.lz4#FramedLZ4CompressorInputStream', 'getCompressedCount')": [
                        164,
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#AbstractLZ77CompressorInputStream', None)": [
                        75,
                        97,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#AbstractLZ77CompressorInputStream', None)": [
                        77,
                        78,
                        100,
                        135,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ],
                    "('org.apache.commons.compress.compressors.lz77support#AbstractLZ77CompressorInputStream', 'getCompressedCount')": [
                        196,
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorInputStream', None)": [
                        34,
                        51,
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorInputStream', None)": [
                        36,
                        37,
                        38,
                        39,
                        56,
                        79,
                        121,
                        122,
                        123,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorInputStream', 'getCompressedCount')": [
                        124,
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzw/LZWInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', None)": [
                        100,
                        101,
                        102,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.compress.compressors.lzw#LZWInputStream', 'getUncompressedCount')": [
                        103,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        39,
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        41,
                        42,
                        64,
                        65,
                        66,
                        129,
                        130,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'getCompressedCount')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readNextBlock')": [
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', None)": [
                        36,
                        127,
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        30,
                        32,
                        188
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', None)": [
                        38,
                        39,
                        40,
                        41,
                        131,
                        133,
                        135,
                        181,
                        182,
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', 'getCompressedCount')": [
                        186,
                        187
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', None)": [
                        34,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        28,
                        106
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', None)": [
                        36,
                        37,
                        39,
                        43,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'getCompressedCount')": [
                        104,
                        105
                    ]
                }
            }
        }
    },
    "a5103a8da17b80fac1e0c671ea143d4a5a6e8962": {
        "authored_data": "2018 Apr 29 09:25",
        "commit.message": "fix whitespace\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0daa0c9b6afa1d202a0e14b745f6a144c41cac9e",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/InputStreamStatistics.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            }
        }
    }
}