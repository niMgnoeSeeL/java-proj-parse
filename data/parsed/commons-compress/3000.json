{
    "7b115db9a8764f93bb22da09da4301eca1a3400c": {
        "authored_data": "2010 Mar 13 13:44",
        "commit.message": "Misspelt Javadoc tag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922565 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "fc62b2a02f1626d29cf9c481783404e76f255e97",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        574
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        574
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        482
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        482
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        532
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        532
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.memory#MemoryArchiveEntry', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.memory#MemoryArchiveEntry', None)": [
                        46
                    ]
                }
            }
        }
    },
    "fc62b2a02f1626d29cf9c481783404e76f255e97": {
        "authored_data": "2010 Mar 13 13:38",
        "commit.message": "Unused variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922560 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "75ecf4fdf2824a4227f1ebf7e00da55fdc4ecc27",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ArTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testFileEntryFromFile')": [
                        282,
                        283
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testExplicitFileEntry')": [
                        336,
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testFileEntryFromFile')": [
                        282
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testExplicitFileEntry')": [
                        335
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testFileEntryFromFile')": [
                        208,
                        209
                    ],
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testExplicitFileEntry')": [
                        262,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testFileEntryFromFile')": [
                        208
                    ],
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testExplicitFileEntry')": [
                        261
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testFileEntryFromFile')": [
                        290,
                        291
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testExplicitFileEntry')": [
                        339,
                        340
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testFileEntryFromFile')": [
                        290
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testExplicitFileEntry')": [
                        338
                    ]
                }
            }
        }
    },
    "75ecf4fdf2824a4227f1ebf7e00da55fdc4ecc27": {
        "authored_data": "2010 Mar 13 13:33",
        "commit.message": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922557 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "53c08f4580b75c6ce48196f76b0e40e23dccf113",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ]
                }
            }
        }
    },
    "53c08f4580b75c6ce48196f76b0e40e23dccf113": {
        "authored_data": "2010 Mar 12 16:48",
        "commit.message": "Math.signum() is Java 1.5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922334 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f08fadf1aa8c2092b2fd25fabdc9ee02cf1b0c8c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        671,
                        695
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        671,
                        695,
                        696
                    ]
                }
            }
        }
    },
    "f08fadf1aa8c2092b2fd25fabdc9ee02cf1b0c8c": {
        "authored_data": "2010 Mar 12 16:43",
        "commit.message": "Unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922330 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c69db93ba726e119c13c42085336c72c717f91b1",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            }
        }
    },
    "c69db93ba726e119c13c42085336c72c717f91b1": {
        "authored_data": "2010 Mar 12 16:43",
        "commit.message": "Make private static field final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922329 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "a48ab3b31fa6a89f87fcb24a046ce8769f9918c4",
        "changes": {
            "src/test/java/org/apache/commons/compress/ArchiveReadTests.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        49
                    ]
                }
            }
        }
    },
    "a48ab3b31fa6a89f87fcb24a046ce8769f9918c4": {
        "authored_data": "2010 Mar 12 16:42",
        "commit.message": "Public fields should always be final, especially static fields\nFix Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922327 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "ed7b39b5555df6fc29d3f5f709a1eb60a0ab9ba4",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        35,
                        36,
                        68,
                        72,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        35,
                        36,
                        68,
                        72,
                        76
                    ]
                }
            }
        }
    },
    "ed7b39b5555df6fc29d3f5f709a1eb60a0ab9ba4": {
        "authored_data": "2010 Mar 12 16:35",
        "commit.message": "typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922321 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "62cb9c480ecd71491e6b2452ff8add4d35706290",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            }
        }
    },
    "62cb9c480ecd71491e6b2452ff8add4d35706290": {
        "authored_data": "2010 Mar 12 16:06",
        "commit.message": "provide access to the general purpose bit flag field of a zip entry and fail when a STORED entry requires a data descriptor.  COMPRESS-100\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@922309 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "cd65397d5739c18dfe040f1b41920e9ebd6484fe",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        168
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        26,
                        151,
                        157,
                        158
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'hashCode')": [
                        152,
                        153,
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'equals(Object)')": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        77,
                        78,
                        482,
                        487,
                        488,
                        489,
                        490,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        513
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isEncrypted')": [
                        485,
                        486
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isStronglyEncrypted')": [
                        493,
                        494
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setEncrypted(boolean)')": [
                        501,
                        502
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setStronglyEncrypted(boolean)')": [
                        509,
                        510,
                        511,
                        512
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        597
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        77,
                        481,
                        486,
                        487,
                        488,
                        489
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getGeneralPurposeBit')": [
                        484,
                        485
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setGeneralPurposeBit(GeneralPurposeBit)')": [
                        492,
                        493
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        577,
                        578
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        142
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        371,
                        372
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        371
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'canHandleEntryData(ZipArchiveEntry)')": [
                        187
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsEncryptionOf(ZipArchiveEntry)')": [
                        197
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'canHandleEntryData(ZipArchiveEntry)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsEncryptionOf(ZipArchiveEntry)')": [
                        198
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsMethodOf(ZipArchiveEntry)')": [
                        209
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        218,
                        219
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'checkRequestedFeatures(ZipArchiveEntry)')": [
                        239,
                        240,
                        241,
                        242
                    ],
                    "(None, None)": [
                        243
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#EncryptedArchiveTest', 'testReadPasswordEncryptedEntryViaZipFile')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.compress.archivers.zip#EncryptedArchiveTest', 'testReadPasswordEncryptedEntryViaStream')": [
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#EncryptedArchiveTest', 'testReadPasswordEncryptedEntryViaZipFile')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.compress.archivers.zip#EncryptedArchiveTest', 'testReadPasswordEncryptedEntryViaStream')": [
                        63,
                        64
                    ]
                }
            }
        }
    }
}