{
    "749ba7d3f556f4cf0710554025ecd0c04545fdc5": {
        "authored_data": "2021 Aug 05 17:56",
        "commit.message": "Case not needed, parens not needed.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "e716544cda2457e73d10d9b32ae939d6f7b11461",
        "changes": {
            "src/main/java/org/apache/commons/compress/harmony/pack200/RunCodec.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#RunCodec', 'normalise(int,Codec)')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#RunCodec', 'normalise(int,Codec)')": [
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/bytecode/CPMember.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.bytecode#CPMember', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.bytecode#CPMember', None)": [
                        49
                    ]
                }
            }
        }
    },
    "e716544cda2457e73d10d9b32ae939d6f7b11461": {
        "authored_data": "2021 Aug 05 17:31",
        "commit.message": "Fix some generics. Remove unused exceptions deep in pack200 (maintains\nbinary compatibility but not source compatibility).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "8287bfdb8adbeae433e0a1205c6e4fb180b9d3be",
        "changes": {
            "src/main/java/org/apache/commons/compress/harmony/pack200/NewAttributeBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#NewAttributeBands', 'readNextLayoutElement(StringReader)')": [
                        209,
                        210,
                        211,
                        212,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.compress.harmony.pack200#NewAttributeBands', None)": [
                        698,
                        768
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#NewAttributeBands', 'readNextLayoutElement(StringReader)')": [
                        209,
                        210,
                        211,
                        217,
                        218
                    ],
                    "('org.apache.commons.compress.harmony.pack200#NewAttributeBands', None)": [
                        696,
                        766
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/Pack200Exception.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#Pack200Exception', None)": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#Pack200Exception', None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/Archive.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#Archive', None)": [
                        82,
                        83,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#Archive', None)": [
                        82,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/AttributeLayoutMap.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#AttributeLayoutMap', 'getAttributeLayout(String,int)')": [
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#AttributeLayoutMap', 'getAttributeLayout(String,int)')": [
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/ClassBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getCallCount(int,long,int)')": [
                        405,
                        406
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getClassFlags')": [
                        1091
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getFieldFlags')": [
                        1144
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getMethodFlags')": [
                        1192
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getCallCount(int,long,int)')": [
                        405
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getClassFlags')": [
                        1090
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getFieldFlags')": [
                        1143
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#ClassBands', 'getMethodFlags')": [
                        1191
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/NewAttributeBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#NewAttributeBands', 'readNextLayoutElement(StringReader)')": [
                        228,
                        229,
                        230,
                        236,
                        237,
                        238
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#NewAttributeBands', None)": [
                        741,
                        833
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#NewAttributeBands', 'readNextLayoutElement(StringReader)')": [
                        228,
                        229,
                        235,
                        236
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#NewAttributeBands', None)": [
                        739,
                        831
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/Segment.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'buildClassFile(int)')": [
                        108
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'unpackWrite(JarOutputStream)')": [
                        470
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', None)": [
                        485,
                        486
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'writeJar(JarOutputStream)')": [
                        487
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'buildClassFile(int)')": [
                        108
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'unpackWrite(JarOutputStream)')": [
                        470
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', None)": [
                        485
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#Segment', 'writeJar(JarOutputStream)')": [
                        486
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/SegmentHeader.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#SegmentHeader', None)": [
                        365,
                        366
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#SegmentHeader', 'readFully(InputStream,byte)')": [
                        367
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200#SegmentHeader', None)": [
                        365
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#SegmentHeader', 'readFully(InputStream,byte)')": [
                        366
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/bytecode/forms/ByteCodeForm.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200.bytecode.forms#ByteCodeForm', None)": [
                        31
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.bytecode.forms#ByteCodeForm', 'get(int)')": [
                        367
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.unpack200.bytecode.forms#ByteCodeForm', None)": [
                        31
                    ],
                    "('org.apache.commons.compress.harmony.unpack200.bytecode.forms#ByteCodeForm', 'get(int)')": [
                        367
                    ]
                }
            }
        }
    },
    "0d3d7c730443b65be59e6c62e01416239a53b624": {
        "authored_data": "2021 Jul 19 13:32",
        "commit.message": "Remove unused imports\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "232c923a64eec84d00e8b1edce0174e0bbd50562",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEightByteIntegerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "232c923a64eec84d00e8b1edce0174e0bbd50562": {
        "authored_data": "2021 Jul 19 13:31",
        "commit.message": "Simplify a stream expression in SevenZFile\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "0a55fcc6dfbde322bb7ed9e5d69c1468613b566f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "(None, None)": [
                        44
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'sanityCheckSubStreamsInfo(ByteBuffer,ArchiveStatistics)')": [
                        920
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'sanityCheckSubStreamsInfo(ByteBuffer,ArchiveStatistics)')": [
                        919
                    ]
                }
            }
        }
    },
    "0a55fcc6dfbde322bb7ed9e5d69c1468613b566f": {
        "authored_data": "2021 Jul 19 13:24",
        "commit.message": "Use lambda expressions\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "a9ed0221c7b8d591048013cc317cfac9a60d0ab1",
        "changes": {
            "src/main/java/org/apache/commons/compress/java/util/jar/Pack200.java": {
                "old": {
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newPacker')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', None)": [
                        73,
                        101
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newUnpacker')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newPacker')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newUnpacker')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            }
        }
    }
}