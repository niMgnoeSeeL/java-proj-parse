{
    "c87331031f18d5a41266f0fa83b0eb119d840e05": {
        "authored_data": "2013 Aug 07 11:27",
        "commit.message": "Removed the unnecessary @inheritDoc tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511248 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "8b76ad5c894a6421966b18620c80bddb91df1fa6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        118,
                        123,
                        147,
                        156,
                        161,
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        72,
                        87,
                        218,
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        580
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        448
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        589
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        544
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', None)": [
                        130,
                        143,
                        151,
                        156,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnicodeCommentExtraField', None)": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodePathExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnicodePathExtraField', None)": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        104,
                        109,
                        114,
                        122,
                        135,
                        150,
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        654
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        351
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        401
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/InMemoryCachingStreamBridge.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#InMemoryCachingStreamBridge', None)": [
                        37,
                        38,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', None)": [
                        162,
                        168,
                        174,
                        180,
                        186,
                        196,
                        206,
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorOutputStream', None)": [
                        84,
                        90,
                        91,
                        92,
                        98,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', None)": [
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZCompressorInputStream', None)": [
                        102,
                        110,
                        118,
                        124,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZCompressorOutputStream', None)": [
                        62,
                        68,
                        93
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.memory#MemoryArchiveEntry', None)": [
                        47
                    ]
                }
            }
        }
    },
    "8b76ad5c894a6421966b18620c80bddb91df1fa6": {
        "authored_data": "2013 Aug 07 09:17",
        "commit.message": "Added tests for the ERROR and TRUNCATE long file modes of TarArchiveOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511218 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "10fdfd5513309798cdff0e62e4662f97f5799559",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNameErrorMode')": [
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', None)": [
                        390,
                        391,
                        392,
                        393,
                        394,
                        413,
                        414
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongDirectoryNameTruncateMode')": [
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412
                    ]
                }
            }
        }
    },
    "10fdfd5513309798cdff0e62e4662f97f5799559": {
        "authored_data": "2013 Aug 01 18:04",
        "commit.message": "buffer input and add a test that skips a large amount of bytes by winding forward to the end of the archive\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1509356 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b86d8a6d4b2ed50b79a2c25887a34de01656f699",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#BigFilesIT', 'readFileBiggerThan8GByte(String)')": [
                        42,
                        43,
                        46,
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.compress.archivers.tar#BigFilesIT', None)": [
                        44,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.compress.archivers.tar#BigFilesIT', 'readFileHeadersOfArchiveBiggerThan8GByte')": [
                        45,
                        46,
                        47,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.compress.archivers.tar#BigFilesIT', 'readFileBiggerThan8GByte(String)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        103,
                        104,
                        105
                    ]
                }
            }
        }
    },
    "b86d8a6d4b2ed50b79a2c25887a34de01656f699": {
        "authored_data": "2013 Jul 17 14:37",
        "commit.message": "Remove direct citations form APPNOTE.TXT in javadocs, obey to section\n1.4.2 in http://www.pkware.com/documents/casestudies/APPNOTE.TXT\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1504154 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8f725e70602ebbcc4e410b47472d68aea7e0dd22",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnicodePathExtraField.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        863,
                        864,
                        866,
                        868,
                        870,
                        871,
                        874,
                        875,
                        876
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        863,
                        864,
                        866,
                        868,
                        870,
                        871,
                        874,
                        875,
                        876
                    ]
                }
            }
        }
    },
    "d2bcb0371967f313aa9710f12725c20a5650dc93": {
        "authored_data": "2013 Jul 08 15:09",
        "commit.message": "COMPRESS-233 performance and readability tweak for TarBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1500788 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d57a6629c728365f2813a7121363381282831d95",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'isEOFRecord(byte)')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', None)": [
                        47,
                        48,
                        56,
                        125,
                        126
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', 'isEOFRecord(byte)')": [
                        161
                    ]
                }
            }
        }
    },
    "d57a6629c728365f2813a7121363381282831d95": {
        "authored_data": "2013 Jul 08 14:25",
        "commit.message": "COMPRESS-232 improve readability of TarArchiveInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1500757 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d2391db48acacc6d367865f7507a593964b251b6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        236
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        327,
                        328,
                        329
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecord')": [
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        345,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGNUSparse')": [
                        459
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        236,
                        237
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        328,
                        329,
                        330,
                        331,
                        332
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecord')": [
                        338,
                        339,
                        340,
                        341,
                        342,
                        344,
                        345,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGNUSparse')": [
                        459
                    ]
                }
            }
        }
    }
}