{
    "5ab06da27113785edd51ee465f5b8015c21f2cd9": {
        "authored_data": "2014 Apr 18 14:13",
        "commit.message": "COMPRESS-273 sprinkle in a few null checks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1588476 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2d3e01686f6dea1d5e5a5a280a32d00ab7e80a1d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount')": [
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount')": [
                        472,
                        473,
                        474,
                        475
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getCentralDirectoryLength')": [
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getCentralDirectoryLength')": [
                        146
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeLocalFileDataData(ZipExtraField)')": [
                        214,
                        215,
                        219
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeCentralDirectoryData(ZipExtraField)')": [
                        247,
                        248,
                        252
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeLocalFileDataData(ZipExtraField)')": [
                        213,
                        215,
                        216,
                        217,
                        218,
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'mergeCentralDirectoryData(ZipExtraField)')": [
                        251,
                        253,
                        254,
                        255,
                        256,
                        260,
                        261,
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'getLocalFileDataLength')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnrecognizedExtraField', 'getLocalFileDataLength')": [
                        72
                    ]
                }
            }
        }
    },
    "551db609ccdb4f9f6e76d33afd8816bfc9090fc5": {
        "authored_data": "2014 Apr 13 10:05",
        "commit.message": "Explain why it's OK to share static mutable field - it's write-only\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586950 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "8e5f665d8f3ee23a1804a90d415af530e0ba5095",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        35,
                        36,
                        37
                    ]
                }
            }
        }
    },
    "8e5f665d8f3ee23a1804a90d415af530e0ba5095": {
        "authored_data": "2014 Apr 13 08:56",
        "commit.message": "COMPRESS-274 unnanmed entries cause trouble for ChangeSet#delete*\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586941 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a1379c0992a46bb48a4a05ad6979cd04c4474984",
        "changes": {
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        136,
                        142,
                        143,
                        144,
                        145
                    ]
                }
            }
        }
    },
    "a1379c0992a46bb48a4a05ad6979cd04c4474984": {
        "authored_data": "2014 Apr 13 08:38",
        "commit.message": "ArjArchiveInputStream#canReadEntryData wasn't checking the entry it was supposed to check\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586937 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c28a1c059fe0f80148fafc47eab3841493b577a2",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveEntry', 'getMethod')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveEntry', None)": [
                        127,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        336,
                        340,
                        341
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        339
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        336,
                        341,
                        342
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        339,
                        340
                    ]
                }
            }
        }
    },
    "aa0c705ed4680055eb1ffedaafbc6a53b8f862aa": {
        "authored_data": "2014 Apr 13 08:32",
        "commit.message": "COMPRESS-276 verify there is a current archive entry before reading from or writing to the stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586935 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0508270c67e412b6b5026b25254062ce3d6c2dc7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'read(byte,int,int)')": [
                        344,
                        345,
                        346
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'read(byte,int,int)')": [
                        468,
                        469,
                        470,
                        471
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'read')": [
                        874,
                        875,
                        876
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'read(byte,int,int)')": [
                        903,
                        904,
                        905
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        184
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'setupFileOutputStream')": [
                        275,
                        276,
                        277,
                        278
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        576,
                        577,
                        578,
                        579
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        268
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'write(byte,int,int)')": [
                        372,
                        373,
                        374
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'write(byte,int,int)')": [
                        756,
                        757,
                        758
                    ]
                }
            }
        }
    },
    "0508270c67e412b6b5026b25254062ce3d6c2dc7": {
        "authored_data": "2014 Apr 13 04:07",
        "commit.message": "COMPRESS-277 share the buffer used in skip - concurrent writes to the buffer won't do any harm as the data is discarded ayway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586919 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "557800a53cedad99afc951032a11931f3e39bf13",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#IOUtils', 'skip(InputStream,long)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        35
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', 'skip(InputStream,long)')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            }
        }
    },
    "557800a53cedad99afc951032a11931f3e39bf13": {
        "authored_data": "2014 Apr 12 17:05",
        "commit.message": "COMPRESS-277 make sure IOUtils#skip deals with streams that return 0 on skip even though more could be read\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1586879 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8af0b6c133fe7d147833b70e731c99d179dc8db9",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#IOUtils', 'copy(InputStream,OutputStream)')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        33,
                        34,
                        35,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', 'copy(InputStream,OutputStream)')": [
                        52
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', 'skip(InputStream,long)')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            }
        }
    }
}