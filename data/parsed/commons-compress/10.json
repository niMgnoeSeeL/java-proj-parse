{
    "0aa1cd163503607261812efacc8e982048835471": {
        "authored_data": "2022 Jul 17 14:33",
        "commit.message": "Use streams",
        "commit.author.name": "Gary Gregory",
        "pcid": "21c494ed450c18f20534f1600993b42f7e255f2c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'putAll(Set,ArchiveStreamProvider,TreeMap)')": [
                        204,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        208
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveInputStreamProviders')": [
                        250,
                        251,
                        252
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveOutputStreamProviders')": [
                        288,
                        289,
                        290
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'putAll(Set,ArchiveStreamProvider,TreeMap)')": [
                        204,
                        205
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveInputStreamProviders')": [
                        247
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveOutputStreamProviders')": [
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', 'listZipUsingTarFile(File)')": [
                        129,
                        130
                    ],
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', 'listZipUsingTarFile(File)')": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        377,
                        378,
                        381,
                        382,
                        383,
                        385,
                        389,
                        390,
                        391
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        377,
                        378,
                        381,
                        382,
                        383,
                        385,
                        389
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZArchiveEntry', 'setContentMethods(Iterable)')": [
                        465,
                        466,
                        467
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZArchiveEntry', 'setContentMethods(Iterable)')": [
                        465
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "(None, None)": [
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFilesInfo(ByteBuffer,Archive)')": [
                        1512,
                        1513,
                        1514,
                        1515,
                        1516,
                        1517,
                        1518
                    ]
                },
                "new": [
                    "JavaSyntaxError",
                    "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java",
                    [
                        19,
                        20,
                        46,
                        47,
                        1514
                    ]
                ]
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'writeFileEmptyStreams(DataOutput)')": [
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'writeFileEmptyStreams(DataOutput)')": [
                        551
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map)')": [
                        2019,
                        2020,
                        2021
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map)')": [
                        2019
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'encodeExtendedPaxHeadersContents(Map)')": [
                        497,
                        498,
                        499,
                        500,
                        503,
                        512,
                        516
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'encodeExtendedPaxHeadersContents(Map)')": [
                        497,
                        498,
                        501,
                        510,
                        514
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findUnparseable(List)')": [
                        571,
                        572,
                        573,
                        574,
                        575,
                        576
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findMatching(ZipShort,List)')": [
                        580,
                        581,
                        582,
                        583,
                        584,
                        585
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findUnparseable(List)')": [
                        571
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'findMatching(ZipShort,List)')": [
                        575
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        73,
                        74,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'fillNameMap')": [
                        1403
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        1409
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'fillNameMap')": [
                        1403
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        1409
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forOrderedSeekableByteChannels(SeekableByteChannel,Iterable)')": [
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forFiles(File,Iterable)')": [
                        257,
                        258,
                        259
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forPaths(Path,Iterable)')": [
                        280,
                        281,
                        282
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forOrderedSeekableByteChannels(SeekableByteChannel,Iterable)')": [
                        145
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forFiles(File,Iterable)')": [
                        255
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forPaths(Path,Iterable)')": [
                        276
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'findAvailableCompressorInputStreamProviders')": [
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'findAvailableCompressorOutputStreamProviders')": [
                        286,
                        287,
                        288
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'putAll(Set,CompressorStreamProvider,TreeMap)')": [
                        357,
                        358,
                        359,
                        360
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        361
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'findAvailableCompressorInputStreamProviders')": [
                        248
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'findAvailableCompressorOutputStreamProviders')": [
                        284
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'putAll(Set,CompressorStreamProvider,TreeMap)')": [
                        353,
                        354
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'rewriteLastPairs')": [
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        465,
                        466,
                        467,
                        468,
                        469,
                        470
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', 'rewriteLastPairs')": [
                        348
                    ],
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        418,
                        425,
                        433,
                        437,
                        442,
                        446,
                        450,
                        469,
                        471,
                        472,
                        473,
                        479,
                        487,
                        491,
                        498
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/Archive.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#Archive', None)": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        227,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#Archive', None)": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        227,
                        229,
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/BandSet.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#BandSet', 'encodeWithPopulationCodec(String,int,BHSDCodec,BandData,BandAnalysisResults)')": [
                        354,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#BandSet', 'encodeWithPopulationCodec(String,int,BHSDCodec,BandData,BandAnalysisResults)')": [
                        354,
                        357,
                        358,
                        359,
                        360,
                        361
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel.java": {
                "old": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', 'isOpen')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', 'isOpen')": [
                        114
                    ]
                }
            }
        }
    },
    "21c494ed450c18f20534f1600993b42f7e255f2c": {
        "authored_data": "2022 Jul 17 13:35",
        "commit.message": "Format nit",
        "commit.author.name": "Gary Gregory",
        "pcid": "b76b35020f79215722d10e946a71930518641a50",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        382,
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        382
                    ]
                }
            }
        }
    },
    "2ca7c2a933d154f5539b3c9814b3640b96319a3f": {
        "authored_data": "2022 Jul 09 15:06",
        "commit.message": "Use for-each loop",
        "commit.author.name": "Gary Gregory",
        "pcid": "87a7d706dd8aaf2d65309a4a63301e17ac48b651",
        "changes": {
            "src/main/java/org/apache/commons/compress/harmony/pack200/CpBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpInt(OutputStream)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpFloat(OutputStream)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpLong(OutputStream)')": [
                        216,
                        217
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDouble(OutputStream)')": [
                        237,
                        238
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpString(OutputStream)')": [
                        257,
                        258
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpClass(OutputStream)')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpSignature(OutputStream)')": [
                        286,
                        287
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDescr(OutputStream)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpMethodOrField(Set,OutputStream,String)')": [
                        334,
                        335
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'removeSignaturesFromCpUTF8')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'addIndices')": [
                        390,
                        391,
                        397,
                        398,
                        412,
                        413
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpInt(OutputStream)')": [
                        187
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpFloat(OutputStream)')": [
                        200
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpLong(OutputStream)')": [
                        214
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDouble(OutputStream)')": [
                        234
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpString(OutputStream)')": [
                        253
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpClass(OutputStream)')": [
                        266
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpSignature(OutputStream)')": [
                        280
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDescr(OutputStream)')": [
                        305
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpMethodOrField(Set,OutputStream,String)')": [
                        326
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'removeSignaturesFromCpUTF8')": [
                        365
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'addIndices')": [
                        380,
                        386,
                        400
                    ]
                }
            }
        }
    },
    "87a7d706dd8aaf2d65309a4a63301e17ac48b651": {
        "authored_data": "2022 Jul 09 14:26",
        "commit.message": "Generics",
        "commit.author.name": "Gary Gregory",
        "pcid": "3c4ddba0ddd8369bf4c149ae945b4cf1fb314310",
        "changes": {
            "src/main/java/org/apache/commons/compress/harmony/pack200/CpBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpInt(OutputStream)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpFloat(OutputStream)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpLong(OutputStream)')": [
                        216,
                        217
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDouble(OutputStream)')": [
                        237,
                        238
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpString(OutputStream)')": [
                        257,
                        258
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpClass(OutputStream)')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpSignature(OutputStream)')": [
                        286,
                        287
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDescr(OutputStream)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpMethodOrField(Set,OutputStream,String)')": [
                        328,
                        334,
                        335
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'removeSignaturesFromCpUTF8')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'addIndices')": [
                        390,
                        391,
                        397,
                        398,
                        412,
                        413
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'getConstant(Object)')": [
                        568,
                        571,
                        574,
                        577,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpInt(OutputStream)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpFloat(OutputStream)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpLong(OutputStream)')": [
                        216,
                        217
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDouble(OutputStream)')": [
                        237,
                        238
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpString(OutputStream)')": [
                        257,
                        258
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpClass(OutputStream)')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpSignature(OutputStream)')": [
                        286,
                        287
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpDescr(OutputStream)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'writeCpMethodOrField(Set,OutputStream,String)')": [
                        328,
                        334,
                        335
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'removeSignaturesFromCpUTF8')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'addIndices')": [
                        390,
                        391,
                        397,
                        398,
                        412,
                        413
                    ],
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'getConstant(Object)')": [
                        568,
                        571,
                        574,
                        577,
                        580
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/PackingUtils.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'getPackingFileListFromJar(JarInputStream,boolean)')": [
                        146
                    ],
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'getPackingFileListFromJar(JarFile,boolean)')": [
                        173
                    ],
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'reorderPackingFiles(List)')": [
                        206,
                        207,
                        208,
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'getPackingFileListFromJar(JarInputStream,boolean)')": [
                        146
                    ],
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'getPackingFileListFromJar(JarFile,boolean)')": [
                        173
                    ],
                    "('org.apache.commons.compress.harmony.pack200#PackingUtils', 'reorderPackingFiles(List)')": [
                        206,
                        207,
                        209
                    ]
                }
            }
        }
    },
    "3c4ddba0ddd8369bf4c149ae945b4cf1fb314310": {
        "authored_data": "2022 Jul 09 14:07",
        "commit.message": "Format nit",
        "commit.author.name": "Gary Gregory",
        "pcid": "6bb76f996bc1e8ee2ac7f0e2eaed28702716d507",
        "changes": {
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        106
                    ]
                }
            }
        }
    },
    "6bb76f996bc1e8ee2ac7f0e2eaed28702716d507": {
        "authored_data": "2022 Jul 09 12:19",
        "commit.message": "For for loop instead of while",
        "commit.author.name": "Gary Gregory",
        "pcid": "e622f71efe917af521a3c0311497aa3f43f4ce36",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'getDirectoryEntries')": [
                        852,
                        853,
                        854
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'getDirectoryEntries')": [
                        851
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/CpBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'getCPSignature(String)')": [
                        472,
                        492,
                        493
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.harmony.pack200#CpBands', 'getCPSignature(String)')": [
                        472,
                        492
                    ]
                }
            }
        }
    }
}