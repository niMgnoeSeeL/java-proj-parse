{
    "367d9f0592000eefe9b9b50d3cd36153dd329045": {
        "authored_data": "2022 Feb 13 15:18",
        "commit.message": "Start sentence with a capital.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "367eeaf62eaee0cd8826f930c4987e835876673f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', 'usage')": [
                        137,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', 'usage')": [
                        137,
                        138
                    ]
                }
            }
        }
    },
    "367eeaf62eaee0cd8826f930c4987e835876673f": {
        "authored_data": "2022 Feb 13 15:17",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "48db1fc8ee73b8344fb1cdaf1def1148116362f6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        58
                    ]
                }
            }
        }
    },
    "48db1fc8ee73b8344fb1cdaf1def1148116362f6": {
        "authored_data": "2022 Feb 10 19:37",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "510be7f741c725d2293c77fb64513540b9195218",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/ExactMath.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ExactMath', None)": [
                        34,
                        36,
                        37,
                        38,
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ExactMath', None)": [
                        34,
                        36,
                        37,
                        38,
                        39,
                        40
                    ]
                }
            }
        }
    },
    "510be7f741c725d2293c77fb64513540b9195218": {
        "authored_data": "2022 Feb 09 07:44",
        "commit.message": "COMPRESS-603\n\nExpander should be able to work if an entry's name is \"./\".\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "e03b342b1a514bb5dfed656c5711003e21c93353",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Expander.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveEntrySupplier,EntryWriter,File)')": [
                        349
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveEntrySupplier,EntryWriter,File)')": [
                        349,
                        350,
                        351,
                        352
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/examples/ExpanderTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', None)": [
                        161,
                        168,
                        169,
                        238,
                        239,
                        240
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'testCompress603Tar')": [
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupTar')": [
                        235,
                        236,
                        237
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupTarForCompress603')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260
                    ]
                }
            }
        }
    },
    "e03b342b1a514bb5dfed656c5711003e21c93353": {
        "authored_data": "2022 Feb 09 02:15",
        "commit.message": "Address CodeQL issues in pack200/unpack200 packages.\n\nThrow ArithmeticExceptioninstead of silently overflowing.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "666e787a17e4e7321b70e99e55acf27b6382ab17",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/TapeInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', 'skip(long)')": [
                        208
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.compress.archivers.dump#TapeInputStream', 'skip(long)')": [
                        209
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        435
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        436,
                        437
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExplodingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExplodingInputStream', 'fillBuffer')": [
                        204
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        328,
                        335
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        32,
                        33,
                        34
                    ],
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', None)": [
                        329,
                        336
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ExactMath.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ExactMath', None)": [
                        36,
                        37
                    ],
                    "('org.apache.commons.compress.utils#ExactMath', 'add(int,long)')": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ExactMath', None)": [
                        36,
                        37
                    ],
                    "('org.apache.commons.compress.utils#ExactMath', 'add(int,long)')": [
                        41,
                        42
                    ],
                    "(None, None)": [
                        44
                    ]
                }
            }
        }
    },
    "666e787a17e4e7321b70e99e55acf27b6382ab17": {
        "authored_data": "2022 Feb 09 01:59",
        "commit.message": "Address CodeQL issues in pack200/unpack200 packages.\n\nThrow ArithmeticExceptioninstead of silently overflowing.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "39abfb17b02acd7d07b0c3ff5bac666a7bd35ea7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount(long)')": [
                        575
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount(long)')": [
                        576
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/BHSDCodec.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'decodeInts(int,InputStream)')": [
                        246
                    ],
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'decodeInts(int,InputStream,int)')": [
                        263
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'decodeInts(int,InputStream)')": [
                        248
                    ],
                    "('org.apache.commons.compress.harmony.pack200#BHSDCodec', 'decodeInts(int,InputStream,int)')": [
                        265
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/FileBands.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#FileBands', None)": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.compress.harmony.pack200#FileBands', None)": [
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/pack200/RunCodec.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.pack200#RunCodec', 'normalise(int,Codec)')": [
                        71,
                        101,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.compress.harmony.pack200#RunCodec', 'normalise(int,Codec)')": [
                        73,
                        103,
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/harmony/unpack200/BandSet.java": {
                "old": {
                    "('org.apache.commons.compress.harmony.unpack200#BandSet', 'decodeBandInt(String,InputStream,BHSDCodec,int)')": [
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('org.apache.commons.compress.harmony.unpack200#BandSet', 'decodeBandInt(String,InputStream,BHSDCodec,int)')": [
                        122
                    ]
                }
            }
        }
    },
    "39abfb17b02acd7d07b0c3ff5bac666a7bd35ea7": {
        "authored_data": "2022 Feb 08 23:12",
        "commit.message": "Remove unused exceptions.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "a46881860ff74e7a493a89e2dc72981014459957",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archiver.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        107,
                        108
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,File)')": [
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        107
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,File)')": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/Expander.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Expander', None)": [
                        262,
                        281,
                        301,
                        325
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveInputStream,File)')": [
                        265
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(TarFile,File)')": [
                        285
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ZipFile,File)')": [
                        304
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(SevenZFile,File)')": [
                        328
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ArchiveInputStream,File)')": [
                        264
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(TarFile,File)')": [
                        283
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(ZipFile,File)')": [
                        301
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(SevenZFile,File)')": [
                        324
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        155,
                        156,
                        194,
                        195
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'createArchiveEntry(File,String)')": [
                        159
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'putArchiveEntry(ArchiveEntry)')": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'createArchiveEntry(File,String)')": [
                        157
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        192
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'putArchiveEntry(ArchiveEntry)')": [
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnshrinkingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnshrinkingInputStream', None)": [
                        41,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnshrinkingInputStream', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        404,
                        407
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        406
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/deflate/DeflateCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', None)": [
                        39,
                        41,
                        49,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate#DeflateCompressorOutputStream', None)": [
                        40,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorInputStream', None)": [
                        52,
                        53,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorInputStream', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        96,
                        97,
                        99,
                        110,
                        111,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz4#BlockLZ4CompressorOutputStream', None)": [
                        97,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lz77support#AbstractLZ77CompressorInputStream', None)": [
                        127,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lz77support#AbstractLZ77CompressorInputStream', None)": [
                        129
                    ]
                }
            }
        }
    },
    "8395d5f34f69ab3260758de41769c586065c2820": {
        "authored_data": "2022 Feb 08 22:57",
        "commit.message": "Better IllegalArgumentException message.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "404f47f6d4d8c6e6c4dc6b3debe46760a30b282d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        231
                    ]
                }
            }
        }
    },
    "404f47f6d4d8c6e6c4dc6b3debe46760a30b282d": {
        "authored_data": "2022 Feb 08 22:53",
        "commit.message": "Format tweaks.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "28ca3901594768141e900cc23b74651a9ce3526d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount(long)')": [
                        570,
                        571
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getDataPadCount')": [
                        587,
                        588,
                        591
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getNumberOfLinks')": [
                        633,
                        634,
                        635
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'setSize(long)')": [
                        829,
                        830
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getHeaderPadCount(long)')": [
                        570,
                        571,
                        572,
                        573
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getDataPadCount')": [
                        589,
                        590,
                        591,
                        592,
                        595
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getNumberOfLinks')": [
                        637
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'setSize(long)')": [
                        831
                    ]
                }
            }
        }
    }
}