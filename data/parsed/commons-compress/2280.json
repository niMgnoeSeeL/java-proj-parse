{
    "3e39e47be42eb24d276fce77ab353a8db5f82265": {
        "authored_data": "2013 Dec 01 07:55",
        "commit.message": "COMPRESS-147 some cosmetics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1546788 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5fb76643894e8a89257d998a0f1e922486b66b22",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        220
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'matches(byte,int)')": [
                        228,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241
                    ],
                    "(None, None)": [
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        231
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'close')": [
                        84,
                        85,
                        86,
                        87
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readOnce(byte,int,int)')": [
                        137
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'matches(byte,int)')": [
                        239,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249
                    ]
                }
            }
        }
    },
    "5fb76643894e8a89257d998a0f1e922486b66b22": {
        "authored_data": "2013 Dec 01 07:19",
        "commit.message": "COMPRESS-147 document Snappy stuff, remove now unused Deconmpressor class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1546787 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "56b7c80e21a70fa5aabd1c905b3f7a2ce4f1503c",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "new": {
                    "(None, None)": [
                        32,
                        33
                    ]
                }
            }
        }
    },
    "56b7c80e21a70fa5aabd1c905b3f7a2ce4f1503c": {
        "authored_data": "2013 Dec 01 07:03",
        "commit.message": "COMPRESS-147 and COMPRESS-243 - add .Z and Snappy to Factory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1546784 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0a08d3781b55e12490388d7275b9cff8e9fd6280",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        167
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        192,
                        193
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(InputStream)')": [
                        178,
                        179,
                        180,
                        181
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream)')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        417,
                        418,
                        419
                    ],
                    "(None, None)": [
                        420
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testDefaultExtraction')": [
                        49,
                        54,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        26
                    ],
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testDefaultExtraction')": [
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', None)": [
                        55,
                        56,
                        57,
                        58,
                        65,
                        66,
                        67,
                        68,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testDefaultExtractionViaFactory')": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testDefaultExtractionViaFactoryAutodetection')": [
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testUnarchive(StreamWrapper)')": [
                        77,
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/ZTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#ZTestCase', 'testZUnarchive')": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        70
                    ],
                    "('org.apache.commons.compress.compressors#ZTestCase', 'testZUnarchive')": [
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.compress.compressors#ZTestCase', None)": [
                        37,
                        38,
                        39,
                        40,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.compress.compressors#ZTestCase', 'testZUnarchiveViaFactory')": [
                        41,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.compress.compressors#ZTestCase', 'testUnarchive(StreamWrapper)')": [
                        50,
                        55
                    ]
                }
            }
        }
    },
    "0a08d3781b55e12490388d7275b9cff8e9fd6280": {
        "authored_data": "2013 Dec 01 05:41",
        "commit.message": "Add a missing close() method.\nMake read() deal with 0 bytes read.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1546781 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "db52cdc5c56ab73e8e8f9b6c7bdab01c2d6e25e9",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/z/ZCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', 'read')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', 'close')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', None)": [
                        80,
                        81
                    ],
                    "('org.apache.commons.compress.compressors.z#ZCompressorInputStream', 'read')": [
                        146,
                        147,
                        148
                    ]
                }
            }
        }
    },
    "011a0e7eccf12edd320e256c415e9f8cf7794f5f": {
        "authored_data": "2013 Nov 27 09:59",
        "commit.message": "add a comment explaining why there is a long and not an int\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1545980 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "db0ea954f28050662eee8c2b120499cc1849df5f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUint64(DataInput)')": [
                        898
                    ]
                }
            }
        }
    },
    "db0ea954f28050662eee8c2b120499cc1849df5f": {
        "authored_data": "2013 Nov 27 05:35",
        "commit.message": "COMPRESS-244 might overflow a 32bit int in SevenZFile#readUint64 - based on patch by Nico Kruber\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1545928 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "161781f3b19f9596636eb25a40034d616baa5a67",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUint64(DataInput)')": [
                        898
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readUint64(DataInput)')": [
                        898
                    ]
                }
            }
        }
    },
    "161781f3b19f9596636eb25a40034d616baa5a67": {
        "authored_data": "2013 Nov 10 10:26",
        "commit.message": "COMPRESS-147 CompressorInputStream didn't know the concept of pushback, also take adavantage of count ignoring -1s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1540460 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8c6d38e8b8a165bb0385bfc7a5e6f7a450148095",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'count(long)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'count(long)')": [
                        45
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'pushedBackBytes(long)')": [
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readNextBlock')": [
                        139
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readCrc')": [
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'skipBlock')": [
                        193,
                        194,
                        195
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readStreamIdentifier')": [
                        204,
                        205,
                        206
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readNextBlock')": [
                        139
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readCrc')": [
                        169
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'skipBlock')": [
                        191
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readStreamIdentifier')": [
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'expandLiteral(int)')": [
                        314,
                        315,
                        316
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'expandLiteral(int)')": [
                        314
                    ]
                }
            }
        }
    },
    "8c6d38e8b8a165bb0385bfc7a5e6f7a450148095": {
        "authored_data": "2013 Nov 10 10:14",
        "commit.message": "COMPRESS-147 some cleanup, fix counting, simple available implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1540459 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "425ea1a025fa4469e831760de8ae6f68572d4eae",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        97,
                        98
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readCrc')": [
                        154,
                        157
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'skipBlock')": [
                        175,
                        178
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readStreamIdentifier')": [
                        183,
                        186
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', None)": [
                        93,
                        94,
                        103,
                        104,
                        109,
                        110
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'available')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readNextBlock')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readCrc')": [
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'skipBlock')": [
                        192,
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.compress.compressors.snappy#FramedSnappyCompressorInputStream', 'readStreamIdentifier')": [
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'read(byte,int,int)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', None)": [
                        152,
                        248,
                        249
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'slideBuffer')": [
                        253
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'expandLiteral(int)')": [
                        312
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'read(byte,int,int)')": [
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', None)": [
                        153,
                        154,
                        250,
                        251
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'slideBuffer')": [
                        255
                    ],
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'expandLiteral(int)')": [
                        314,
                        315,
                        316
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/FramedSnappyTestCase.java": {
                "new": {
                    "('org.apache.commons.compress.compressors#FramedSnappyTestCase', 'testDefaultExtraction')": [
                        60
                    ]
                }
            }
        }
    }
}