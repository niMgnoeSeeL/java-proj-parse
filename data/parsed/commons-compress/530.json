{
    "993d5878768f1351d67f61a05f250802a0302945": {
        "authored_data": "2020 Nov 21 03:08",
        "commit.message": "Use final.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "5cacb5d40b4b32d0c976043c281ff841ead2ab2e",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testCompress558')": [
                        490,
                        492,
                        494
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testCompress558')": [
                        490,
                        492,
                        494
                    ]
                }
            }
        }
    },
    "5cacb5d40b4b32d0c976043c281ff841ead2ab2e": {
        "authored_data": "2020 Nov 20 23:52",
        "commit.message": "No need to initialize to default.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "32012f945b85c6dcfd2c8c3bb04d3ee27c6f184f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', 'byteArray2long(byte,boolean)')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', 'long2byteArray(long,int,boolean)')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', 'byteArray2long(byte,boolean)')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', 'long2byteArray(long,int,boolean)')": [
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/BitInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#BitInputStream', 'processBitsGreater57(int)')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#BitInputStream', 'processBitsGreater57(int)')": [
                        142
                    ]
                }
            }
        }
    },
    "32012f945b85c6dcfd2c8c3bb04d3ee27c6f184f": {
        "authored_data": "2020 Nov 20 22:56",
        "commit.message": "Remove redundant calls to super().\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "4c733133b65a4d8aeb8c06841474113fa4b73450",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        277
                    ]
                }
            }
        }
    },
    "4c733133b65a4d8aeb8c06841474113fa4b73450": {
        "authored_data": "2020 Nov 20 21:41",
        "commit.message": "Use Objects.hash().\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "64f01c6036efef1f936ea20b738df1c1ba8d7657",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', 'hashCode')": [
                        183,
                        184,
                        185,
                        186
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', 'hashCode')": [
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'hashCode')": [
                        979,
                        980,
                        981,
                        982
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'hashCode')": [
                        980
                    ]
                }
            }
        }
    },
    "64f01c6036efef1f936ea20b738df1c1ba8d7657": {
        "authored_data": "2020 Nov 20 20:27",
        "commit.message": "Use a switch instead of a cascading if-else.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "de1f857a368c51dafff2d407890ffff775286d19",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'populateDynamicTables(BitInputStream,int,int)')": [
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#HuffmanDecoder', 'populateDynamicTables(BitInputStream,int,int)')": [
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420
                    ]
                }
            }
        }
    },
    "4f52e4a712ec47bd8360fee5e14dc591ed27ba85": {
        "authored_data": "2020 Nov 13 09:23",
        "commit.message": "COMPRESS-558: Fix accidentally added / to file names\n",
        "commit.author.name": "theobisproject",
        "pcid": "6c5384984df236ba5f5d75a5c36031c4f03250f9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        412,
                        414,
                        415,
                        416
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        412,
                        413,
                        415,
                        416
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        481,
                        504,
                        505,
                        506
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testCompress558')": [
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503
                    ]
                }
            }
        }
    }
}