{
    "abfdf35fa5df95853d0f1f9fe0c60f4a1ae8fdee": {
        "authored_data": "2017 May 07 15:10",
        "commit.message": "COMPRESS-393 don't try to invoke LZMAOutputStream#flush\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "092bcac5be680480860dbddae4217347b8b14fab",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/lzma/LZMACompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzma#LZMACompressorOutputStream', 'flush')": [
                        63
                    ]
                }
            }
        }
    },
    "3bf400edc1add6078a9bd935e3ae684b8bf8493f": {
        "authored_data": "2017 May 01 05:03",
        "commit.message": "COMPRESS-390: Expose stream offsets and size\n",
        "commit.author.name": "Zbynek Vyskovsky",
        "pcid": "b19bf2b7e99f59ed3cb2cc1a1f8f2fa7651b458e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        52,
                        53,
                        94,
                        95,
                        96,
                        97,
                        685,
                        686,
                        689,
                        690,
                        693,
                        694,
                        695,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        708,
                        709,
                        710,
                        713,
                        714
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getLocalHeaderOffset')": [
                        687,
                        688
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setLocalHeaderOffset(long)')": [
                        691,
                        692
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getDataOffset')": [
                        696,
                        697
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setDataOffset(long)')": [
                        706,
                        707
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isStreamContiguous')": [
                        711,
                        712
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setStreamContiguous(boolean)')": [
                        715,
                        716
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        842,
                        843
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        322
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        229,
                        310,
                        311,
                        312,
                        313,
                        327
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        1235,
                        1236,
                        1246,
                        1247,
                        1248,
                        1249,
                        1250,
                        1251,
                        1252,
                        1253,
                        1259,
                        1267,
                        1268,
                        1269,
                        1270
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getRawInputStream(ZipArchiveEntry)')": [
                        443,
                        444
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        483,
                        485
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        648,
                        649,
                        708,
                        716
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry,OffsetEntry,int)')": [
                        740,
                        750,
                        769,
                        770
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        1040,
                        1041,
                        1054,
                        1055
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getRawInputStream(ZipArchiveEntry)')": [
                        438
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        478
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        641,
                        700,
                        708
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry,int)')": [
                        741,
                        760
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        1030,
                        1043,
                        1044,
                        1045
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        1225,
                        1226,
                        1236,
                        1242,
                        1250,
                        1251,
                        1252,
                        1253
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        29,
                        36,
                        38
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        254,
                        255,
                        256,
                        257,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testOffsets')": [
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "new": {
                    "(None, None)": [
                        24,
                        39,
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        404,
                        405,
                        406,
                        407,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        460,
                        461,
                        462,
                        530,
                        531
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testOffsets')": [
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testDelayedOffsetsAndSizes')": [
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'calculateCrc32(byte)')": [
                        526,
                        527,
                        528,
                        529
                    ]
                }
            }
        }
    },
    "ccf55ddf2238983ba9f6da9ba2bb61e0c0ac573b": {
        "authored_data": "2017 May 04 06:47",
        "commit.message": "COMPRESS-392 remove matches method if it doesn't work\n\ncloses #23\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c4ad0b75c1f814d5ec5dd600183fb303f7241c33",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', None)": [
                        146,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'matches(byte,int)')": [
                        157,
                        158
                    ],
                    "(None, None)": [
                        159
                    ]
                }
            }
        }
    },
    "c4ad0b75c1f814d5ec5dd600183fb303f7241c33": {
        "authored_data": "2017 May 04 06:46",
        "commit.message": "COMPRESS-392 make test for Brotli check for the library itself\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ac73d23cd70908a48b647576c719875f58fc8e88",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', 'internalIsBrotliCompressionAvailable')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', 'internalIsBrotliCompressionAvailable')": [
                        62,
                        63,
                        64
                    ]
                }
            }
        }
    },
    "ac73d23cd70908a48b647576c719875f58fc8e88": {
        "authored_data": "2017 May 04 06:40",
        "commit.message": "COMPRESS-392 record Brotli support\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "037209cb3e585e59ead364b36d1f1b82a2fc8d54",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            }
        }
    },
    "037209cb3e585e59ead364b36d1f1b82a2fc8d54": {
        "authored_data": "2017 May 03 11:46",
        "commit.message": "COMPRESS-392 tweaks\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4e619852cad8b9b056d4239aff597124e901fe8a",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'testBrotliDecode')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'testCachingIsEnabledByDefaultAndXZIsPresent')": [
                        62
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'availableShouldReturnZero')": [
                        93
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'shouldBeAbleToSkipAByte')": [
                        104
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'singleByteReadWorksAsExpected')": [
                        115
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'singleByteReadReturnsMinusOneAtEof')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'testBrotliDecode')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'testCachingIsEnabledByDefaultAndBrotliIsPresent')": [
                        62
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'availableShouldReturnZero')": [
                        93
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'shouldBeAbleToSkipAByte')": [
                        104
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'singleByteReadWorksAsExpected')": [
                        115
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'singleByteReadReturnsMinusOneAtEof')": [
                        127
                    ]
                }
            }
        }
    },
    "4e619852cad8b9b056d4239aff597124e901fe8a": {
        "authored_data": "2017 May 03 11:44",
        "commit.message": "COMPRESS-392 the semi-mandatory bla.tar test\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "886e924019e35dc28eabe7515f614ba4f6c63a2f",
        "changes": {
            "src/test/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        31,
                        32,
                        153,
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', None)": [
                        37,
                        136,
                        137
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStreamTest', 'testBrotliUnarchive')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ]
                }
            }
        }
    },
    "886e924019e35dc28eabe7515f614ba4f6c63a2f": {
        "authored_data": "2017 May 03 04:24",
        "commit.message": "fix variable name\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "d40b05aee433424281114f921ad501940d2890db",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', 'setCacheBrotliAvailablity(boolean)')": [
                        78,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliUtils', 'setCacheBrotliAvailablity(boolean)')": [
                        78,
                        79
                    ]
                }
            }
        }
    }
}