{
    "040e42d0f0bebc15ca80cb80fb6db53804b2e082": {
        "authored_data": "2013 Aug 08 16:18",
        "commit.message": "COMPRESS-236 - CpioArchiveInputStream doesn't like Redline RPM's archives.  Patch by Andrew Duffy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511850 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a671a703fe86b69adb8c61495a915065c186362d",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isBlockDevice')": [
                        599
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isCharacterDevice')": [
                        608
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isDirectory')": [
                        617
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isNetwork')": [
                        626
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isPipe')": [
                        635
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isRegularFile')": [
                        644
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isSocket')": [
                        653
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isSymbolicLink')": [
                        662
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isBlockDevice')": [
                        599
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isCharacterDevice')": [
                        608
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isDirectory')": [
                        617
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isNetwork')": [
                        626
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isPipe')": [
                        635
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isRegularFile')": [
                        644
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isSocket')": [
                        653
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'isSymbolicLink')": [
                        662
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readNewEntry(boolean)')": [
                        331,
                        347
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldAsciiEntry')": [
                        361,
                        373
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        387,
                        399
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readNewEntry(boolean)')": [
                        331,
                        347
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldAsciiEntry')": [
                        361,
                        373
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        387,
                        399
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioUtil.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', 'fileType(long)')": [
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', None)": [
                        48
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', 'testCpioUnarchiveCreatedByRedlineRpm')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ],
                    "(None, None)": [
                        61
                    ]
                }
            }
        }
    },
    "a671a703fe86b69adb8c61495a915065c186362d": {
        "authored_data": "2013 Aug 08 15:57",
        "commit.message": "COMPRESS-234 read/skip performance improvements to TarArchiveInputStream - patch by BELUGA BEHR\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511843 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c70896112c7b4d0a24b840618601b3416e5496d7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        49,
                        50,
                        51,
                        57,
                        58,
                        67,
                        77,
                        86,
                        98,
                        108,
                        121,
                        122,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'close')": [
                        133
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecordSize')": [
                        142
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecord')": [
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        491,
                        492,
                        493,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getCurrentEntry')": [
                        571
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        49,
                        51,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        65,
                        66,
                        68,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        83,
                        93,
                        94,
                        103,
                        115,
                        125,
                        138,
                        141,
                        142,
                        152,
                        153,
                        154,
                        155,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        306,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        551,
                        552,
                        604,
                        605,
                        606,
                        607,
                        608,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        635
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'close')": [
                        151
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecordSize')": [
                        160
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        231,
                        232,
                        233,
                        234,
                        235,
                        253,
                        292
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skipRecordPadding')": [
                        300,
                        301,
                        302,
                        303,
                        304,
                        305
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getRecord')": [
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'isEOFRecord(byte)')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readRecord')": [
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'tryToConsumeSecondEOFRecord')": [
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        570,
                        571,
                        572,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getCurrentEntry')": [
                        609
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'consumeRemainderOfLastBlock')": [
                        630,
                        631,
                        632,
                        633,
                        634
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        70,
                        95,
                        105,
                        114,
                        126,
                        152
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'finish')": [
                        220
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        230,
                        235
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'getRecordSize')": [
                        247
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        320
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        356
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'write(byte,int,int)')": [
                        410,
                        441
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writeEOFRecord')": [
                        515
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        72,
                        73,
                        74,
                        97,
                        107,
                        116,
                        128,
                        157,
                        158,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        573,
                        574,
                        580,
                        581
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'finish')": [
                        223,
                        224
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        234
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'getRecordSize')": [
                        250
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        323
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'closeArchiveEntry')": [
                        359
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'write(byte,int,int)')": [
                        413,
                        444
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writeEOFRecord')": [
                        518
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writeRecord(byte)')": [
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writeRecord(byte,int)')": [
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'padAsNeeded')": [
                        575,
                        576,
                        577,
                        578,
                        579
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java": {
                "old": {
                    "(None, None)": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', None)": [
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ],
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'isArrayZero(byte,int)')": [
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249
                    ],
                    "(None, None)": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "new": {
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        96
                    ],
                    "('org.apache.commons.compress.utils#IOUtils', 'skip(InputStream,long)')": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        44
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        55
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        44,
                        45
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        56,
                        57
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        71,
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPadsOutputToFullBlockLength')": [
                        485
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPadsOutputToFullBlockLength')": [
                        485
                    ]
                }
            }
        }
    },
    "c70896112c7b4d0a24b840618601b3416e5496d7": {
        "authored_data": "2013 Aug 08 14:33",
        "commit.message": "verify TarArchiveOutputStream is a \"well-behaving citizen\" and pads the output\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511806 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3a7e01b838763e4822038a935f5ad24efccef9f7",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        35,
                        486,
                        487
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPadsOutputToFullBlockLength')": [
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485
                    ]
                }
            }
        }
    },
    "3a7e01b838763e4822038a935f5ad24efccef9f7": {
        "authored_data": "2013 Aug 07 14:31",
        "commit.message": "Added more tests for CompressorStreamFactory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511331 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "dab23f70249430ca50a863195e6a15a1e548b009",
        "changes": {
            "src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#DetectCompressorTestCase', None)": [
                        40
                    ],
                    "('org.apache.commons.compress#DetectCompressorTestCase', 'testDetection')": [
                        44,
                        45,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        34,
                        35
                    ],
                    "('org.apache.commons.compress#DetectCompressorTestCase', 'testDetection')": [
                        46,
                        50,
                        53,
                        54,
                        55,
                        56,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.compress#DetectCompressorTestCase', None)": [
                        65,
                        66,
                        67
                    ]
                }
            }
        }
    },
    "dab23f70249430ca50a863195e6a15a1e548b009": {
        "authored_data": "2013 Aug 07 14:15",
        "commit.message": "Removed the explicit calls to the default constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511326 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "bb2200b087e604986922414878a1db36e2dcd86e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveException.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveException', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        993,
                        994
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        379,
                        380,
                        381,
                        382,
                        383,
                        385,
                        386,
                        389,
                        390,
                        1329,
                        1330
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        379,
                        381,
                        384
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        55
                    ]
                }
            }
        }
    },
    "bb2200b087e604986922414878a1db36e2dcd86e": {
        "authored_data": "2013 Aug 07 14:07",
        "commit.message": "Replaced StringBuffers with StringBuilders\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511322 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "26fc82f9fda2bded536ad203172506561a3bc90c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "(None, None)": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeAsciiLong(long,int,int)')": [
                        458
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeAsciiLong(long,int,int)')": [
                        458
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'stripTo7Bits(String)')": [
                        499
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        523
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'stripTo7Bits(String)')": [
                        499
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'toString(ArchiveEntry)')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'toString(ArchiveEntry)')": [
                        44
                    ]
                }
            }
        }
    },
    "26fc82f9fda2bded536ad203172506561a3bc90c": {
        "authored_data": "2013 Aug 07 13:52",
        "commit.message": "Changed the return type of CpioArchiveInputStream.getNextEntry() to avoid casting to CpioArchiveEntry\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511316 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "6f63fab43852f92226b462e737c7d580c28461c7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextEntry')": [
                        449
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextEntry')": [
                        449
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', 'testCpioUnarchive')": [
                        28,
                        34,
                        35,
                        36,
                        38,
                        39,
                        44,
                        45,
                        46,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', 'testCpioUnarchive')": [
                        28,
                        34,
                        35,
                        37,
                        38,
                        43,
                        44,
                        45,
                        46
                    ]
                }
            }
        }
    },
    "6f63fab43852f92226b462e737c7d580c28461c7": {
        "authored_data": "2013 Aug 07 13:50",
        "commit.message": "Add some tests for ARJ archives\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511314 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "4c71a4793498f6f6c151dfa61ee3b892f32991ce",
        "changes": {
            "src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java": {
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.compress#DetectArchiverTestCase', 'testDetection')": [
                        77,
                        78,
                        79,
                        80
                    ]
                }
            }
        }
    },
    "4c71a4793498f6f6c151dfa61ee3b892f32991ce": {
        "authored_data": "2013 Aug 07 13:46",
        "commit.message": "Build the debug messages only if the debugging is enabled\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511309 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "46e61a97137b525485eae1ff21719c3b296c5b60",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        93,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'debug(String)')": [
                        95,
                        96
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readMainHeader')": [
                        197
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readLocalFileHeader')": [
                        259
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', None)": [
                        93,
                        96,
                        97
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'debug(String)')": [
                        95
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readMainHeader')": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readLocalFileHeader')": [
                        259,
                        260,
                        261
                    ]
                }
            }
        }
    },
    "46e61a97137b525485eae1ff21719c3b296c5b60": {
        "authored_data": "2013 Aug 07 13:04",
        "commit.message": "Removed the final modifier on the private methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1511292 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "c87331031f18d5a41266f0fa83b0eb119d840e05",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'debug(String)')": [
                        94
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'read16(DataInputStream)')": [
                        100
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readString(DataInputStream)')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'debug(String)')": [
                        94
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'read16(DataInputStream)')": [
                        100
                    ],
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readString(DataInputStream)')": [
                        105
                    ]
                }
            }
        }
    }
}