{
    "9ede8aec5fd9a6a856bedd5246810d3a82b5a17c": {
        "authored_data": "2020 Jan 25 16:23",
        "commit.message": "Reuse own CloseShieldFilterInputStream instead of creating an anonymous\ninner class.",
        "commit.author.name": "Gary Gregory",
        "pcid": "50bd693a5e8889617611c729cc3818b2b72e3cb3",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', None)": [
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', None)": [
                        181,
                        182,
                        183
                    ]
                }
            }
        }
    },
    "50bd693a5e8889617611c729cc3818b2b72e3cb3": {
        "authored_data": "2020 Jan 25 15:12",
        "commit.message": "address javadoc warnings\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "0572a33b974cca37232c57b9a7ecb802954f5f31",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveSparseEntry', None)": [
                        80,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        309,
                        310,
                        311
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', None)": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel.java": {
                "old": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', None)": [
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', None)": [
                        138
                    ]
                }
            }
        }
    },
    "0572a33b974cca37232c57b9a7ecb802954f5f31": {
        "authored_data": "2020 Jan 25 14:10",
        "commit.message": "argument name has changed\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "57464b2f19e0cb048d549fc6f7682ce324bcf9ad",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        672
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        672
                    ]
                }
            }
        }
    },
    "57464b2f19e0cb048d549fc6f7682ce324bcf9ad": {
        "authored_data": "2020 Jan 25 14:02",
        "commit.message": "OK, so tar fails. Try to figure out why.\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "560f243b97c2342f3569758bf0a51e5cb3f2c326",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'extractTarAndGetInputStream(File,String)')": [
                        236,
                        237,
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'extractTarAndGetInputStream(File,String)')": [
                        236,
                        237,
                        238,
                        240
                    ]
                }
            }
        }
    },
    "560f243b97c2342f3569758bf0a51e5cb3f2c326": {
        "authored_data": "2020 Jan 25 13:31",
        "commit.message": "add a few assertions\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "822026997f2bff5f4bcbc8ec1a875512f8cc6f4f",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'extractTarAndGetInputStream(File,String)')": [
                        239,
                        242,
                        246
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'extractTarAndGetInputStream(File,String)')": [
                        239,
                        242,
                        246
                    ]
                }
            }
        }
    },
    "822026997f2bff5f4bcbc8ec1a875512f8cc6f4f": {
        "authored_data": "2020 Jan 25 11:15",
        "commit.message": "try to debug test failure in Jenkins\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "1221cd85369e270824f7c105781d0f2112a522e2",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractOldGNU')": [
                        129,
                        136,
                        137,
                        138,
                        139
                    ]
                }
            }
        }
    },
    "1221cd85369e270824f7c105781d0f2112a522e2": {
        "authored_data": "2020 Jan 24 18:59",
        "commit.message": "remove shaded commons-io used in tests, plug some test leaks\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "1a04946e86a79c22122f2f40def9546369583e81",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipTest')": [
                        683,
                        684
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipTest')": [
                        683,
                        684
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractSparseTarsOnWindows')": [
                        95,
                        96,
                        97,
                        99,
                        100,
                        101,
                        103,
                        106,
                        107,
                        108,
                        110,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractOldGNU')": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractExtendedOldGNU')": [
                        154
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractPaxGNU')": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractSparseTarsOnWindows')": [
                        95,
                        96,
                        99,
                        100,
                        101,
                        102,
                        103,
                        107,
                        108,
                        109,
                        110,
                        111,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractOldGNU')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractExtendedOldGNU')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractPaxGNU')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZip')": [
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipOfZip64')": [
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByWinrar')": [
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZip')": [
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        618,
                        619,
                        640,
                        641,
                        662,
                        663
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipOfZip64')": [
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByWinrar')": [
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661
                    ]
                }
            }
        }
    },
    "1a04946e86a79c22122f2f40def9546369583e81": {
        "authored_data": "2020 Jan 23 20:12",
        "commit.message": "Sonar want the comment on a different line, so be it\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "011e9f0c53a9e0ac1e98df345748fe1b539d95a9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFolder(ByteBuffer)')": [
                        853,
                        854
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFolder(ByteBuffer)')": [
                        853,
                        854
                    ]
                }
            }
        }
    },
    "011e9f0c53a9e0ac1e98df345748fe1b539d95a9": {
        "authored_data": "2020 Jan 23 19:56",
        "commit.message": "a few more Sonar findings\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "f18f44936b4dc7002e21423c4c533b132bade9af",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        129
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFolder(ByteBuffer)')": [
                        854
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        129
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readFolder(ByteBuffer)')": [
                        854
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'setupFileOutputStream')": [
                        312
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'setupFileOutputStream')": [
                        312,
                        313
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'mark(int)')": [
                        324
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'mark(int)')": [
                        324
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        539
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        539
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'mark(int)')": [
                        66
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'reset')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'mark(int)')": [
                        66
                    ],
                    "('org.apache.commons.compress.compressors.brotli#BrotliCompressorInputStream', 'reset')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'mark(int)')": [
                        224
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'reset')": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'mark(int)')": [
                        224
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', 'reset')": [
                        233
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'mark(int)')": [
                        67
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'reset')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'mark(int)')": [
                        67
                    ],
                    "('org.apache.commons.compress.compressors.zstandard#ZstdCompressorInputStream', 'reset')": [
                        99
                    ]
                }
            }
        }
    },
    "f18f44936b4dc7002e21423c4c533b132bade9af": {
        "authored_data": "2020 Jan 23 17:56",
        "commit.message": "make Sonar a bit less unhappy\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "80657d31997ed64aeef57376402985258430a8f9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'tryToLocateEndHeader(byte)')": [
                        474
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'tryToLocateEndHeader(byte)')": [
                        474
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'buildSparseInputStreams')": [
                        1062
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'buildSparseInputStreams')": [
                        1062,
                        1063
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        539
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeZip64CentralDirectory')": [
                        1640,
                        1645,
                        1660
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        539
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeZip64CentralDirectory')": [
                        1640,
                        1645,
                        1660
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'openNewSplitSegment')": [
                        179,
                        180,
                        182,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'openNewSplitSegment')": [
                        180,
                        185
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', 'getInputView')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#TempFileCachingStreamBridge', 'getInputView')": [
                        51,
                        52
                    ]
                }
            }
        }
    }
}