{
    "e7517b8d5d43910f4317a64f549d58b2db21a64c": {
        "authored_data": "2010 Jan 29 07:47",
        "commit.message": "Applied COMPRESS-95 from Joerg Bellmann: Improve ExceptionMessages in ArchiveStreamFactory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@904403 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Christian Grobmeier",
        "pcid": "7be979633a4ab427d820c591a1cb940c2721ba1a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        86
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        116,
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        86,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        119,
                        120,
                        121,
                        122,
                        123
                    ]
                }
            }
        }
    },
    "7be979633a4ab427d820c591a1cb940c2721ba1a": {
        "authored_data": "2010 Jan 26 05:24",
        "commit.message": "complete equals implementation.  COMPRESS-94\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@903086 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5066e9aeb98f386b29a31cd4acb97aa43844cd30",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        472
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493
                    ]
                }
            }
        }
    },
    "5066e9aeb98f386b29a31cd4acb97aa43844cd30": {
        "authored_data": "2010 Jan 07 09:34",
        "commit.message": "ZipArchiveEntry#equals is broken if the String-arg constructor is used.  COMPRESS-94 - submitted by Anon Devs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@896818 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "41aa509d836dcdd316a40e68680cc54e0f6c1e04",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        462,
                        463,
                        466
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        64,
                        100
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'equals(Object)')": [
                        463,
                        464,
                        465,
                        466,
                        469
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', None)": [
                        222,
                        223,
                        224,
                        225,
                        226
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', 'testNotEquals')": [
                        227,
                        228,
                        229,
                        230
                    ],
                    "(None, None)": [
                        231
                    ]
                }
            }
        }
    },
    "41aa509d836dcdd316a40e68680cc54e0f6c1e04": {
        "authored_data": "2009 Dec 13 20:07",
        "commit.message": "COMPRESS-93: Support for alternative ZIP compression methods\n\nFix the Maven221MultiVolumeTest failure by not using skip() to skip bytes. The FileInputStream implementation of skip() will happily skip past the end of the file, so we never see the EOFException that Maven221MultiVolumeTest expects to see when closing a truncated entry.\n\nAlso added an explicit test case for the ability to skip entries with unsupported compression methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@890110 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Jukka Zitting",
        "pcid": "b6886eb41d060b9569bf101a017abdf89acb29f2",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        336,
                        337,
                        338,
                        339
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        336
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        156
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testSkipEntryWithUnsupportedCompressionMethod')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                }
            }
        }
    },
    "b6886eb41d060b9569bf101a017abdf89acb29f2": {
        "authored_data": "2009 Dec 13 19:44",
        "commit.message": "COMPRESS-93: Support for alternative ZIP compression methods\n\nAllow entries with unsupported compression methods to be safely skipped if the compressed size of the entry is stored in the entry header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@890104 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Jukka Zitting",
        "pcid": "90991bd87fd338b917de30a63dcf0eb321652e0b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        313,
                        314,
                        315,
                        316,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        330,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362
                    ]
                }
            }
        }
    },
    "7b125a334e513349a4445e38b9d5a109f5e26f99": {
        "authored_data": "2009 Dec 13 18:31",
        "commit.message": "COMPRESS-93: Support for alternative ZIP compression methods\n\nOverride the ZipEntry compression method getter and setter in ZipArchiveEntry. This prevents the IllegalArgumentException that was thrown whenever a zip entry with an unsupported compression method was encountered. With this change an IOException is thrown instead only if or when the entry is actually being read or written. In addition, a public ZipArchiveEntry.isSupportedCompressionMethod() method is introduced so client code can choose to explicitly skip reading ZIP entries with unsupported compression methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@890088 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Jukka Zitting",
        "pcid": "dc3fc4703211876fb38cccf55adc92ee5cbc28d0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        81,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'isSupportedCompressionMethod')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getMethod')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setMethod(int)')": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        233
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'write(byte,int,int)')": [
                        513
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'write(byte,int,int)')": [
                        513,
                        514,
                        515,
                        516,
                        517
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        130,
                        131
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testSupportedCompressionMethod')": [
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', None)": [
                        198,
                        199,
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', 'testCompressionMethod')": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219
                    ],
                    "(None, None)": [
                        220,
                        221
                    ]
                }
            }
        }
    },
    "dc3fc4703211876fb38cccf55adc92ee5cbc28d0": {
        "authored_data": "2009 Oct 30 05:29",
        "commit.message": "make ZipArchiveInputStream deal better with truncated archives.  Submitted by Antoni Mylka.  COMPRESS-87\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@831204 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c520d00b707fe6ecf4f3d7d062af09ffea6812e8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        239,
                        240
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        239,
                        240,
                        241,
                        242,
                        243,
                        244
                    ]
                }
            }
        }
    }
}