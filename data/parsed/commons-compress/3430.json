{
    "e3347fdcd269c382cd0bae3d249143b9f0c8e2bd": {
        "authored_data": "2009 Feb 23 13:14",
        "commit.message": "use desired encoding when decoding a file name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@747005 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "c1ae67b28feb62d63de62663640594a91097290e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte,String)')": [
                        541
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte,String)')": [
                        541
                    ]
                }
            }
        }
    },
    "c1ae67b28feb62d63de62663640594a91097290e": {
        "authored_data": "2009 Feb 23 09:22",
        "commit.message": "re-enable tests disabled by accident.  7ZIP uses CP437 by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@746940 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a96f1f2e5d305e64fb23f18269194f37f87ff04e",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestUtf8FileRoundtripNoEFS')": [
                        46
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestCP437FileRoundtrip')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestASCIIFileRoundtrip')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        58
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadEFS')": [
                        61,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFS')": [
                        46
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testCP437FileRoundtrip')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtrip')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        58,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testRead7ZipArchive')": [
                        64,
                        69,
                        72
                    ]
                }
            }
        }
    },
    "a96f1f2e5d305e64fb23f18269194f37f87ff04e": {
        "authored_data": "2009 Feb 23 09:01",
        "commit.message": "use NIO to decode names as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@746933 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "51af42b07093e3cfb3d72fab153df8649f732055",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'decodeName(byte,String)')": [
                        181,
                        182,
                        183
                    ],
                    "(None, None)": [
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte,String)')": [
                        541,
                        542,
                        543
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte,String)')": [
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        549
                    ]
                }
            }
        }
    },
    "51af42b07093e3cfb3d72fab153df8649f732055": {
        "authored_data": "2009 Feb 23 08:21",
        "commit.message": "EFS-Flag interop test using 7-Zip created file submitted by wolfgang Glas.  SANDBOX-176\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@746917 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5c4bbc571c2e85fd8e766cbdae624bbf588e4888",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtrip')": [
                        39
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFS')": [
                        43
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testCP437FileRoundtrip')": [
                        47
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtrip')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestUtf8FileRoundtrip')": [
                        42
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestUtf8FileRoundtripNoEFS')": [
                        46
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestCP437FileRoundtrip')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'xtestASCIIFileRoundtrip')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        71
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testReadEFS')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            }
        }
    },
    "5c4bbc571c2e85fd8e766cbdae624bbf588e4888": {
        "authored_data": "2009 Feb 20 16:46",
        "commit.message": "separate unicode tests with and without EFS flag\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@746291 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "ca01ec476d1b2bd659ec7400fd55635d62b64b52",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtrip')": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testCP437FileRoundtrip')": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtrip')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testFileRoundtrip(String)')": [
                        52,
                        65
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String)')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtrip')": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFS')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testCP437FileRoundtrip')": [
                        48
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtrip')": [
                        52
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testFileRoundtrip(String,boolean)')": [
                        55,
                        68
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean)')": [
                        77,
                        78,
                        85
                    ]
                }
            }
        }
    },
    "ca01ec476d1b2bd659ec7400fd55635d62b64b52": {
        "authored_data": "2009 Feb 19 17:23",
        "commit.message": "NIO doesn't recognize all encoding names that String.getBytes does, strange.  At least it fails for 'UnicodeBig' on my Java 1.4 installation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@745933 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4ba374a86f76f4be48acb2491abc55952b0c1285",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'getBytes(String)')": [
                        910,
                        914
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        907,
                        924,
                        925
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'getBytes(String)')": [
                        911,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923
                    ]
                }
            }
        }
    },
    "4ba374a86f76f4be48acb2491abc55952b0c1285": {
        "authored_data": "2009 Feb 19 16:42",
        "commit.message": "SANDBOX-176 - use and detect the EFS flag.  Based on submissions made by Wolfgang Glas to commons-compress and TAMURA Kent to Ant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@745920 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e451ee48eea0be402f9a3502b22b0104d55d3cb9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        99,
                        907,
                        919
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'setEncoding(String)')": [
                        315
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        765
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'getBytes(String)')": [
                        911,
                        915,
                        916,
                        917,
                        918
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        266,
                        267,
                        268,
                        269,
                        270,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        968,
                        969,
                        970,
                        971,
                        979,
                        980
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'setEncoding(String)')": [
                        331,
                        333
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'setUseEFS(boolean)')": [
                        352,
                        353
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        675
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        760,
                        761,
                        765
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'getBytes(String)')": [
                        910,
                        914
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'isUTF8(String)')": [
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeVersionNeededToExtractAndGeneralPurposeBits(int)')": [
                        981,
                        982,
                        983,
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000
                    ],
                    "(None, None)": [
                        1001
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        111,
                        122
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        296,
                        336,
                        337,
                        359
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte)')": [
                        528,
                        529,
                        533
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        111,
                        122
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        344,
                        366
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getString(byte,String)')": [
                        535,
                        536,
                        537,
                        541
                    ]
                }
            }
        }
    },
    "684f72e44fd17d4226f619b1c33b146ddf055f80": {
        "authored_data": "2009 Feb 19 12:59",
        "commit.message": "disable test that fails in Gump\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@745846 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "1903db40e53210537fd022ac5cd922323959ff0e",
        "changes": {
            "src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToZip')": [
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'XtestDeleteFromAndAddToZip')": [
                        134
                    ]
                }
            }
        }
    },
    "1903db40e53210537fd022ac5cd922323959ff0e": {
        "authored_data": "2009 Feb 18 15:52",
        "commit.message": "Add a JarMarker to the very first entry in a jar.  SANDBOX-289\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/compress/trunk@745545 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4e2380bd5925e436266865ebf988d8362b675cc6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.jar#JarArchiveOutputStream', None)": [
                        30
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        34,
                        35,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveOutputStream', None)": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveOutputStream', 'putNextEntry(ZipArchiveEntry)')": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        219,
                        220,
                        221,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addExtraField(ZipExtraField)')": [
                        230
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addAsFirstExtraField(ZipExtraField)')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntryTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', None)": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        126,
                        127
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntryTest', 'testAddAsFirstExtraField')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            }
        }
    }
}