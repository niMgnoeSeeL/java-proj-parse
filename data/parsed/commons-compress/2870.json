{
    "a9bd2e2984b4c6c0cbd094d11d3a9d07640d5667": {
        "authored_data": "2011 Jul 26 14:12",
        "commit.message": "For non-ZIP64 entries this should actually fix COMPRESS-129\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1151104 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "33dcf854969fc6fdc35fb203a70fe5745c6946d8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        423
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        423
                    ]
                }
            }
        }
    },
    "5031a979acd4a373968f22b81e97336a10cbbbc5": {
        "authored_data": "2011 Jul 26 05:31",
        "commit.message": "ignore 'version made by' and use the Zip64 field if present\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150988 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3879e477a60c6e2bf5e23842d2a5d9a8734a46ce",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        160,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        213,
                        214,
                        215,
                        216,
                        217
                    ]
                }
            }
        }
    },
    "3879e477a60c6e2bf5e23842d2a5d9a8734a46ce": {
        "authored_data": "2011 Jul 26 04:38",
        "commit.message": "Assume a record is using ZIP64 if and only if the ZIP64 extended information\nextra field is present.\n\nhttp://www.pkware.com/documents/casestudies/APPNOTE.TXT says:\n\n      When extracting, if \n      the zip64 extended information extra field is present for \n      the file the compressed and uncompressed sizes will be 8\n      byte values.\n\nwhen talking about the data descriptor, making the extra field the the\nthing to decide upon.  InfoZip's ZIP 3.0 agrees with this interpretation.\nI even found this in ZIP 3.0' zipfile.c:\n\n      /* PKZIP does not care of the version set in a CDH: if  */\n      /* there is a zip64 extra field assigned to a CDH PKZIP */\n      /* uses it, we should do so, too.                       */\n\nso \"version made by\" is ignored in the central directory.  The comment\nis not present when looking at the local file header, I'm not yet decided\nwhether to ignore the version there as well.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150985 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "865908836ab2a9e22a4c3f875736ee56eab5e351",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                }
            }
        }
    },
    "865908836ab2a9e22a4c3f875736ee56eab5e351": {
        "authored_data": "2011 Jul 25 20:17",
        "commit.message": "minor optimization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150881 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "825b46d748279b9d29f53bc1e4223648f98fbb7b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        515,
                        517
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        515,
                        517
                    ]
                }
            }
        }
    },
    "825b46d748279b9d29f53bc1e4223648f98fbb7b": {
        "authored_data": "2011 Jul 25 20:15",
        "commit.message": "whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150879 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6c5f04b0f4489aab92cb3a178b59ab4392bfd9f5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        514,
                        515,
                        516,
                        517
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        514,
                        515,
                        516,
                        517
                    ]
                }
            }
        }
    },
    "6c5f04b0f4489aab92cb3a178b59ab4392bfd9f5": {
        "authored_data": "2011 Jul 25 20:14",
        "commit.message": "first cut at reading Zip64 without any real tests, yet.  At least the existing test still pass.  COMPRESS-148\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/branches/zip64@1150878 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "45ac135ea4189b9974f0336fb26cce3a964fe54f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        180,
                        183
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        551,
                        572,
                        574,
                        576,
                        577,
                        578,
                        579
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        39
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        78,
                        524
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        160,
                        181,
                        186,
                        189,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        513,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStoredEntry')": [
                        565,
                        566,
                        567,
                        587,
                        608,
                        610,
                        612,
                        613,
                        614,
                        615,
                        616
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipConstants.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipConstants', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ]
                }
            }
        }
    }
}