{
    "9b852f382500ba4edc778edd2bbb0d54563d4307": {
        "authored_data": "2016 Feb 05 17:00",
        "commit.message": "verify parsing works as expected\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b67a14697fcf363bc2d7f18407e51b12ca05c1a9",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', None)": [
                        361
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctalCompress330')": [
                        362,
                        363,
                        364,
                        365,
                        366,
                        367
                    ],
                    "(None, None)": [
                        368,
                        369
                    ]
                }
            }
        }
    },
    "b67a14697fcf363bc2d7f18407e51b12ca05c1a9": {
        "authored_data": "2016 Feb 03 14:32",
        "commit.message": "Added buffering for random access which speeds up 7Z support. (by Dawid Weiss)\n\nfixes https://github.com/apache/commons-compress/pull/7\n",
        "commit.author.name": "Torsten Curdt",
        "pcid": "1fb42987de0d21c9b6777272320b64230eadb277",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        856,
                        857
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        857,
                        858,
                        859,
                        860
                    ]
                }
            }
        }
    },
    "1fb42987de0d21c9b6777272320b64230eadb277": {
        "authored_data": "2016 Jan 31 12:12",
        "commit.message": "COMPRESS-331 make tar checksum check as strict as GNU tar\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "7a6e507dcd5788e3c41e6c249f505283c9f4adf0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'verifyCheckSum(byte)')": [
                        622,
                        623,
                        624
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'verifyCheckSum(byte)')": [
                        612
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testVerifyHeaderCheckSum')": [
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testVerifyHeaderCheckSum')": [
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ]
                }
            }
        }
    },
    "7a6e507dcd5788e3c41e6c249f505283c9f4adf0": {
        "authored_data": "2016 Jan 29 20:58",
        "commit.message": "COMPRESS-323 ZipFile.getRawInputStream is public now\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e0a76ac46cc6a65c3eb33404edb8e6341b5f6199",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getRawInputStream(ZipArchiveEntry)')": [
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getRawInputStream(ZipArchiveEntry)')": [
                        360
                    ]
                }
            }
        }
    },
    "30f1ac1dcf7c333bbf5f2aa77e143f001216130c": {
        "authored_data": "2016 Jan 29 20:33",
        "commit.message": "COMPRESS-332 snappy stream returns 0 when it should return -1\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "61db5ea79b6bb932c09b89812772eec67c05956a",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.snappy#SnappyCompressorInputStream', 'read(byte,int,int)')": [
                        138,
                        139,
                        140
                    ]
                }
            }
        }
    },
    "61db5ea79b6bb932c09b89812772eec67c05956a": {
        "authored_data": "2016 Jan 27 11:58",
        "commit.message": "Changes to allow byte-for-byte replication of Zip entries\n\nTwo small changes required in order to do this are:\n- Read general purpose bit as raw flag\n- Support for reading versions made by and required\nThis is for a general purpose library for doing deltas on JARs using a merkletree mechanism.\n\nCloses https://github.com/apache/commons-compress/pull/6\n",
        "commit.author.name": "Torsten Curdt",
        "pcid": "68db5fa9ed38fb599c59be98d561daefc541d7da",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        81,
                        82,
                        84,
                        805,
                        808,
                        809,
                        812,
                        813,
                        816,
                        817,
                        820,
                        821,
                        824,
                        825
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setVersionMadeBy(int)')": [
                        806,
                        807
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setVersionRequired(int)')": [
                        810,
                        811
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getVersionRequired')": [
                        814,
                        815
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getVersionMadeBy')": [
                        818,
                        819
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getRawFlag')": [
                        822,
                        823
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setRawFlag(int)')": [
                        826,
                        827
                    ],
                    "(None, None)": [
                        828
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        564
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'readCentralDirectoryEntry(Map)')": [
                        562,
                        565,
                        566,
                        573,
                        577
                    ]
                }
            }
        }
    },
    "68db5fa9ed38fb599c59be98d561daefc541d7da": {
        "authored_data": "2016 Jan 15 14:35",
        "commit.message": "fixes COMPRESS-328 TarArchiveEntry preserveLeadingSlashes has no effect on setName\n",
        "commit.author.name": "Torsten Curdt",
        "pcid": "ce9e0cefd5be63ca46ff45460464d0d391d037db",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'setName(String)')": [
                        392
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        120,
                        121,
                        122,
                        221,
                        222
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'setName(String)')": [
                        397
                    ]
                }
            }
        }
    },
    "ce9e0cefd5be63ca46ff45460464d0d391d037db": {
        "authored_data": "2016 Jan 15 14:31",
        "commit.message": "fixed line endings\n",
        "commit.author.name": "Torsten Curdt",
        "pcid": "633f9c9533e6df8b457634c75a1f45fdb85a07d8",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        88
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        213,
                        246,
                        415,
                        417,
                        717,
                        745,
                        747,
                        749,
                        758,
                        760
                    ]
                },
                "new": {
                    "(None, None)": [
                        88
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        213,
                        246,
                        415,
                        417,
                        717,
                        745,
                        747,
                        749,
                        758,
                        760
                    ]
                }
            }
        }
    }
}