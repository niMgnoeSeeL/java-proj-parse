{
    "dab9c48811f90c92daf3dd095623f5f18010a553": {
        "authored_data": "2020 Aug 08 20:06",
        "commit.message": "Add Path support to ZipArchiveOutputStream with an eye on implementing (#123)\n\nadditional ArchiveOutputStream.createArchiveEntry(Path, String,\r\nLinkOption...) methods.",
        "commit.author.name": "Gary Gregory",
        "pcid": "2c85b2cd40889166c0341a3049cd769b22d7687e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        113
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'createArchiveEntry(Path,String,LinkOption)')": [
                        111,
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setTime(FileTime)')": [
                        265,
                        266
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        315,
                        324
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        330,
                        339,
                        1773,
                        1774,
                        1775,
                        1776,
                        1777,
                        1778,
                        1779,
                        1780,
                        1781,
                        1782,
                        1783,
                        1784,
                        1785,
                        1786,
                        1787,
                        1788,
                        1789,
                        1790,
                        1791,
                        1792
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createArchiveEntry(Path,String,LinkOption)')": [
                        1793,
                        1794,
                        1795,
                        1796,
                        1797,
                        1798
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testFileEntryFromFile')": [
                        502,
                        505,
                        507,
                        508,
                        521,
                        522,
                        534,
                        535
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        39
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testFileEntryFromFile')": [
                        508,
                        509,
                        511,
                        514,
                        516,
                        517,
                        530,
                        531,
                        543,
                        544
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        545,
                        546,
                        547,
                        548
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveEntryNewFromPath')": [
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594
                    ]
                }
            }
        }
    },
    "2c85b2cd40889166c0341a3049cd769b22d7687e": {
        "authored_data": "2020 Aug 08 20:02",
        "commit.message": "Reimplement org.apache.commons.compress.archivers.examples.Archiver\nusing Java NIO tree walking instead custom file system traversal which\nwas painful when dealing with large directories and calls to\nFile.listFiles().\n\nAlso provide Java NIO Path APIs.\n\nThere is some cruft still, due to the fact that this component is still\non Java 7 and Java 8 lambdas cannot be used.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "fee64bc2cdd017fdb756fc9cb0cd13521503957a",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/examples/Archiver.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        38,
                        292,
                        293
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        68,
                        69,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        267,
                        268,
                        269,
                        270,
                        273,
                        274,
                        279,
                        280
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,File,File)')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File)')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File,CloseableConsumer)')": [
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,SeekableByteChannel,File)')": [
                        154
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,SeekableByteChannel,File,CloseableConsumer)')": [
                        180,
                        181,
                        182,
                        184,
                        185,
                        187,
                        188,
                        189,
                        191,
                        192
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,File)')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(SevenZOutputFile,File)')": [
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'prefersSeekableByteChannel(String)')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(File,ArchiveEntryCreator,ArchiveEntryConsumer,Finisher)')": [
                        275,
                        276,
                        277,
                        278
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,File,ArchiveEntryCreator,ArchiveEntryConsumer)')": [
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        30,
                        31,
                        33,
                        34,
                        35,
                        46,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', None)": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        134,
                        135,
                        136,
                        137,
                        138,
                        142,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        292,
                        293,
                        294,
                        295,
                        296,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        358,
                        359,
                        360
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,File)')": [
                        105,
                        106
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,Path,EnumSet)')": [
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(ArchiveOutputStream,Path)')": [
                        132,
                        133
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(SevenZOutputFile,File)')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(SevenZOutputFile,Path)')": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,File,File)')": [
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File)')": [
                        222
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File,CloseableConsumer)')": [
                        246,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,Path,Path)')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,SeekableByteChannel,File)')": [
                        297,
                        298,
                        299
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,SeekableByteChannel,File,CloseableConsumer)')": [
                        321,
                        322,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,SeekableByteChannel,Path)')": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        353,
                        354,
                        355,
                        357
                    ],
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'prefersSeekableByteChannel(String)')": [
                        361,
                        362,
                        363
                    ]
                }
            }
        }
    },
    "fee64bc2cdd017fdb756fc9cb0cd13521503957a": {
        "authored_data": "2020 Aug 08 19:54",
        "commit.message": "Add SevenZOutputFile.write(Path, OpenOption...).",
        "commit.author.name": "Gary Gregory",
        "pcid": "379f75ace59e52853aae91c591aeaee20e3f3c79",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        43
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        273,
                        274,
                        275,
                        276
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'write(Path,OpenOption)')": [
                        270,
                        271,
                        272
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java": {
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFileTest', 'testDirectoriesAndEmptyFiles')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ]
                }
            }
        }
    },
    "379f75ace59e52853aae91c591aeaee20e3f3c79": {
        "authored_data": "2020 Aug 08 19:45",
        "commit.message": "Add SevenZOutputFile.write(InputStream).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "8e34ee48898ea1cd0547d1df263f44a14e68678c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "new": {
                    "(None, None)": [
                        20,
                        27,
                        829
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        258,
                        259,
                        260,
                        261
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'write(InputStream)')": [
                        253,
                        254,
                        255,
                        256,
                        257
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFileTest.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFileTest', 'testDirectoriesAndEmptyFiles')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            }
        }
    },
    "8e34ee48898ea1cd0547d1df263f44a14e68678c": {
        "authored_data": "2020 Aug 08 15:23",
        "commit.message": "Make the private static final instance public under the name \"DEFAULT\"\nsince it uses the platform default encoding.\n\nReuse this constant instead of creating new factories all over with the\nexception of some tests that check for deprecated behavior.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "93105cabfc5c139866433d3e8958140538d6c7d7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        97
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveInputStreamProviders')": [
                        214
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveOutputStreamProviders')": [
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveInputStreamProviders')": [
                        218
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'findAvailableArchiveOutputStreamProviders')": [
                        259
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'createArchiveInputStream(String,InputStream)')": [
                        76,
                        78
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'detectFormat(File)')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        40,
                        41
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'createArchiveInputStream(String,InputStream)')": [
                        77,
                        79
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'detectFormat(File)')": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/Archiver.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File,CloseableConsumer)')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Archiver', 'create(String,OutputStream,File,CloseableConsumer)')": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/examples/Expander.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(File,File)')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(InputStream,File,CloseableConsumer)')": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(String,InputStream,File,CloseableConsumer)')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(File,File)')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(InputStream,File,CloseableConsumer)')": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers.examples#Expander', 'expand(String,InputStream,File,CloseableConsumer)')": [
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArArchiveCreation')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArUnarchive')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArDelete')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArArchiveCreation')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArUnarchive')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers#ArTestCase', 'testArDelete')": [
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveServiceLoaderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveServiceLoaderTest', 'testInputStream')": [
                        32
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveServiceLoaderTest', 'testOutputStream')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveServiceLoaderTest', 'testInputStream')": [
                        32
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveServiceLoaderTest', 'testOutputStream')": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'shortTextFilesAreNoTARs')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'aiffFilesAreNoTARs')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testCOMPRESS209')": [
                        81
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'cantRead7zFromStream')": [
                        91
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'cantWrite7zToStream')": [
                        98
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'detectsAndThrowsFor7z')": [
                        112
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'skipsPK00Prefix')": [
                        129
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'shortTextFilesAreNoTARs')": [
                        54
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'aiffFilesAreNoTARs')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'testCOMPRESS209')": [
                        81
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'cantRead7zFromStream')": [
                        91
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'cantWrite7zToStream')": [
                        98
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'detectsAndThrowsFor7z')": [
                        112
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', 'skipsPK00Prefix')": [
                        129
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactoryTest', None)": [
                        196
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioArchiveCreation')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        72,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioArchiveCreation')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        72,
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/DumpTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'unarchiveAll(File)')": [
                        53
                    ],
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'archiveDetection(File)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'unarchiveAll(File)')": [
                        53
                    ],
                    "('org.apache.commons.compress.archivers#DumpTestCase', 'archiveDetection(File)')": [
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenArchiverNameIsNull_1')": [
                        36
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenInputStreamIsNull')": [
                        48
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenArchiverNameIsNull_2')": [
                        60
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenOutputStreamIsNull')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenArchiverNameIsNull_1')": [
                        36
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenInputStreamIsNull')": [
                        48
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenArchiverNameIsNull_2')": [
                        60
                    ],
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', 'testMessageWhenOutputStreamIsNull')": [
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/JarTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarArchiveCreation')": [
                        43
                    ],
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarUnarchive')": [
                        61
                    ],
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarUnarchiveAll')": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarArchiveCreation')": [
                        43
                    ],
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarUnarchive')": [
                        61
                    ],
                    "('org.apache.commons.compress.archivers#JarTestCase', 'testJarUnarchiveAll')": [
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/TarTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveCreation')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        74,
                        97
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarUnarchive')": [
                        122
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testCOMPRESS178')": [
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveCreation')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        74,
                        97
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarUnarchive')": [
                        122
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testCOMPRESS178')": [
                        327
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreation')": [
                        72,
                        91
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreationInMemory')": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipUnarchive')": [
                        162
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        242,
                        248
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testInputStreamStatistics(String,Map)')": [
                        701
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreation')": [
                        72,
                        91
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreationInMemory')": [
                        139
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipUnarchive')": [
                        162
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        242,
                        248
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testInputStreamStatistics(String,Map)')": [
                        701
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/examples/ExpanderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupZip')": [
                        179
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupZip(String)')": [
                        203
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupZip')": [
                        179
                    ],
                    "('org.apache.commons.compress.archivers.examples#ExpanderTest', 'setupZip(String)')": [
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/examples/ParameterizedArchiverTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#ParameterizedArchiverTest', 'archiveStreamVersion')": [
                        111
                    ],
                    "('org.apache.commons.compress.archivers.examples#ParameterizedArchiverTest', 'verifyContent')": [
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#ParameterizedArchiverTest', 'archiveStreamVersion')": [
                        111
                    ],
                    "('org.apache.commons.compress.archivers.examples#ParameterizedArchiverTest', 'verifyContent')": [
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/examples/ParameterizedExpanderTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.examples#ParameterizedExpanderTest', 'setUp')": [
                        76
                    ],
                    "('org.apache.commons.compress.archivers.examples#ParameterizedExpanderTest', 'archiveInputStreamVersion')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.examples#ParameterizedExpanderTest', 'setUp')": [
                        76
                    ],
                    "('org.apache.commons.compress.archivers.examples#ParameterizedExpanderTest', 'archiveInputStreamVersion')": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testDirectoryWithLongNameEndsWithSlash')": [
                        418
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testDirectoryWithLongNameEndsWithSlash')": [
                        418
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testCount')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testCount')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarMemoryFileSystemTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'tarFromMemoryFileSystem')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'tarToMemoryFileSystem')": [
                        68
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'checkUserInformationInTarEntry')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'tarFromMemoryFileSystem')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'tarToMemoryFileSystem')": [
                        68
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarMemoryFileSystemTest', 'checkUserInformationInTarEntry')": [
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'fuzzingTest(int)')": [
                        743
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'fuzzingTest(int)')": [
                        743
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/Pack200TestCase.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#Pack200TestCase', 'jarUnarchiveAll(boolean,Pack200Strategy)')": [
                        74
                    ],
                    "('org.apache.commons.compress.compressors#Pack200TestCase', 'jarArchiveCreation(Pack200Strategy)')": [
                        114,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#Pack200TestCase', 'jarUnarchiveAll(boolean,Pack200Strategy)')": [
                        74
                    ],
                    "('org.apache.commons.compress.compressors#Pack200TestCase', 'jarArchiveCreation(Pack200Strategy)')": [
                        114,
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        154
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        287
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.deflate64#Deflate64CompressorInputStreamTest', 'fuzzingTest(int)')": [
                        287
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/pack200/Pack200UtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200UtilsTest', 'testNormalize')": [
                        44
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200UtilsTest', 'testNormalizeInPlace')": [
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200UtilsTest', 'testNormalize')": [
                        44
                    ],
                    "('org.apache.commons.compress.compressors.pack200#Pack200UtilsTest', 'testNormalizeInPlace')": [
                        90
                    ]
                }
            }
        }
    },
    "93105cabfc5c139866433d3e8958140538d6c7d7": {
        "authored_data": "2020 Aug 08 15:12",
        "commit.message": "Format nits.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "d3b33f88cf0fe7f23abb04112fa0f1fa81c7ff69",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        439
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        408
                    ]
                }
            }
        }
    }
}