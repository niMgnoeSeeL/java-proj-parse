{
    "0299191ff40323d4b0c6c4e997571cd365942f96": {
        "authored_data": "2011 Aug 08 04:41",
        "commit.message": "Bzip2CompressorInputStream never called count() - reported by Lasse Collin\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154818 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4aea7b2961fe4526fa49e5f0cec5d27f3e3ac968",
        "changes": {
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'read')": [
                        119
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'read(byte,int,int)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'read')": [
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'read(byte,int,int)')": [
                        155,
                        156,
                        157
                    ]
                }
            }
        }
    },
    "4aea7b2961fe4526fa49e5f0cec5d27f3e3ac968": {
        "authored_data": "2011 Aug 07 07:56",
        "commit.message": "address most issues detected by findbugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154667 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e81176f64f9f3e2f9832224940a4d0aa98b84d0e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', None)": [
                        69,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', 'equals(Object)')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', 'hashCode')": [
                        75,
                        76
                    ],
                    "(None, None)": [
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getUnicodeName')": [
                        106
                    ],
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'setUnicodeName(byte)')": [
                        113
                    ],
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getCentralDirectoryData')": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getUnicodeName')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'setUnicodeName(byte)')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', 'getCentralDirectoryData')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        66,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'setEncoding(String)')": [
                        300
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        466
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'setEncoding(String)')": [
                        300,
                        301
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        302
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'closeArchiveEntry')": [
                        468,
                        469,
                        470
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEightByteInteger', None)": [
                        66
                    ]
                }
            }
        }
    },
    "e81176f64f9f3e2f9832224940a4d0aa98b84d0e": {
        "authored_data": "2011 Aug 07 06:55",
        "commit.message": "@Override is not valid for interface implementations in Java5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154665 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "716757f5e582e79629d0104ef1af81aa3a06fd07",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        119,
                        125,
                        150,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        424,
                        518,
                        583,
                        620
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        364,
                        530,
                        558,
                        643
                    ]
                }
            }
        }
    },
    "52b9fcd801fe96efd88546f79ae6aebba92c48df": {
        "authored_data": "2011 Aug 07 06:09",
        "commit.message": "disable a few tests to speed up site generation, add Clirr report\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154660 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "46628efdacc42d4b6bdc11f69405ab7bbea32c03",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Zip64SupportTest', None)": [
                        570,
                        889,
                        897
                    ]
                }
            }
        }
    },
    "46628efdacc42d4b6bdc11f69405ab7bbea32c03": {
        "authored_data": "2011 Aug 06 16:30",
        "commit.message": "@Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154536 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "43978207f8947d1bc875d0b07088cb0691578f57",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveEntry', None)": [
                        119,
                        125,
                        150,
                        160,
                        166,
                        175
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        219,
                        229,
                        243
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        56,
                        72,
                        169,
                        179,
                        189,
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        424,
                        518,
                        583,
                        620,
                        865,
                        876
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        102,
                        117,
                        227,
                        402,
                        427
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        168,
                        322,
                        363,
                        398,
                        429,
                        499
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        329,
                        342,
                        364,
                        530,
                        558,
                        643
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        89,
                        115,
                        133,
                        155,
                        361,
                        379,
                        452
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        338
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        116,
                        135,
                        170,
                        221,
                        263,
                        343,
                        349
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        116,
                        130,
                        308
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorOutputStream', None)": [
                        435,
                        501,
                        524,
                        533,
                        646
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        47,
                        59,
                        71,
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        36,
                        46,
                        56,
                        61
                    ]
                }
            }
        }
    },
    "43978207f8947d1bc875d0b07088cb0691578f57": {
        "authored_data": "2011 Aug 06 13:38",
        "commit.message": "foreach loops\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154517 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "4a82530abb49b5100cb85e3b33fb5b1a79da569b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        308,
                        309,
                        310,
                        311,
                        312
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        307,
                        308,
                        309
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        137,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        137,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        87,
                        88,
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'isDeletedLater(Set,ArchiveEntry)')": [
                        142,
                        146,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        87,
                        88,
                        118,
                        119
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'isDeletedLater(Set,ArchiveEntry)')": [
                        142,
                        146
                    ]
                }
            }
        }
    },
    "4a82530abb49b5100cb85e3b33fb5b1a79da569b": {
        "authored_data": "2011 Aug 06 13:20",
        "commit.message": "compile without warnings with -Xlint\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154515 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3553cda8108998a2340591056ad0b2474079214b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        112
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'assertEntryName(ArrayList,int,String)')": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'assertEntryName(ArrayList,int,String)')": [
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwice')": [
                        91
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwiceWithoutReplace')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwice')": [
                        91
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwiceWithoutReplace')": [
                        123
                    ]
                }
            }
        }
    },
    "3553cda8108998a2340591056ad0b2474079214b": {
        "authored_data": "2011 Aug 06 13:01",
        "commit.message": "compile without warnings using -Xlint:unchecked\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1154512 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "afd202f8d400b373f03be9500534228c8c80a5b3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        262
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        53,
                        62,
                        63,
                        64,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        53,
                        62,
                        91,
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addAsFirstExtraField(ZipExtraField)')": [
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'addAsFirstExtraField(ZipExtraField)')": [
                        363
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        37
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'getChanges')": [
                        160,
                        161
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        37
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'getChanges')": [
                        160,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', None)": [
                        42
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        71,
                        73,
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', None)": [
                        42
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        71,
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        28,
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        40,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        35,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        35,
                        36,
                        46,
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        47
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createArchive(String)')": [
                        142
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createEmptyArchive(String)')": [
                        201
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createSingleEntryArchive(String)')": [
                        227
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(File,List)')": [
                        254
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List)')": [
                        273
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List,boolean)')": [
                        287
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        47
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createArchive(String)')": [
                        142
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createEmptyArchive(String)')": [
                        201
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'createSingleEntryArchive(String)')": [
                        227
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(File,List)')": [
                        254
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List)')": [
                        273
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List,boolean)')": [
                        287
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/ArchiveReadTests.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        49
                    ],
                    "('org.apache.commons.compress#ArchiveReadTests', 'testArchive')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        49
                    ],
                    "('org.apache.commons.compress#ArchiveReadTests', 'testArchive')": [
                        96,
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        90,
                        102,
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        90,
                        102,
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        95,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        95,
                        96,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreation')": [
                        69,
                        97,
                        99
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testZipArchiveCreation')": [
                        69,
                        97,
                        99
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStreamTest', 'testReadLongNamesGNU')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStreamTest', 'testReadLongNamesGNU')": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testCDOrder')": [
                        37
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testPhysicalOrder')": [
                        65
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'assertEntryName(ArrayList,int,String)')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testCDOrder')": [
                        37,
                        38
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testPhysicalOrder')": [
                        66,
                        67
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'assertEntryName(ArrayList,int,String)')": [
                        119,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromZip')": [
                        678
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromTar')": [
                        714
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromJar')": [
                        752
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToTar')": [
                        796
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToJar')": [
                        840
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAr')": [
                        877
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToAr')": [
                        919
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromZip')": [
                        678
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromTar')": [
                        714
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromJar')": [
                        752
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToTar')": [
                        796
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToJar')": [
                        840
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAr')": [
                        877
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToAr')": [
                        919
                    ]
                }
            }
        }
    }
}