{
    "21025c71938d91bcaa1d55529087c0a082d22324": {
        "authored_data": "2019 Dec 09 13:18",
        "commit.message": "COMPRESS-477 set disk number start to long\n\nBasing on bodewig's rebased branch, disk number start should be a long variable.\n",
        "commit.author.name": "Lee",
        "pcid": "95140bd9675df0284e97706c1b48d34e339738c9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getDiskNumberStart')": [
                        1089
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setDiskNumberStart(int)')": [
                        1099
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getDiskNumberStart')": [
                        1089
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setDiskNumberStart(long)')": [
                        1099
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,EntryMetaData,boolean)')": [
                        1370
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,EntryMetaData,boolean)')": [
                        1370
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        865
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        865
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        650,
                        659
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipTest')": [
                        651
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        50,
                        838
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        654,
                        657,
                        658,
                        659,
                        662,
                        663,
                        664,
                        677,
                        678,
                        679,
                        810,
                        811,
                        826
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipWithTooSmallSizeThrowsException')": [
                        655,
                        656
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipWithTooLargeSizeThrowsException')": [
                        660,
                        661
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipWithSegmentAlreadyExistThrowsException')": [
                        665,
                        671,
                        672,
                        673,
                        674
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipTest')": [
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'createTestSplitZipSegments')": [
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'countNonDirectories(File)')": [
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837
                    ]
                }
            }
        }
    },
    "dfa9ed3712097c10765301b15d720f867c4a061d": {
        "authored_data": "2019 Dec 08 13:30",
        "commit.message": "COMPRESS-477 mostly cosmetic changes to #84\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "992ecf3c0a70ab1646d3689b9ac60844a5d603cf",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        1084,
                        1085,
                        1086,
                        1087,
                        1088,
                        1089,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        231,
                        232
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        397
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        397,
                        398,
                        399,
                        400,
                        402
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        361,
                        362,
                        363,
                        364,
                        365,
                        1443
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        868
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory64')": [
                        1058,
                        1066,
                        1082,
                        1094
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory32')": [
                        1113,
                        1124
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setDataOffset(ZipArchiveEntry)')": [
                        1264,
                        1265
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        361,
                        1443
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setSizesAndOffsetFromZip64Extra(ZipArchiveEntry)')": [
                        864
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory64')": [
                        1054,
                        1062,
                        1063,
                        1079,
                        1091,
                        1092
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'positionAtCentralDirectory32')": [
                        1111,
                        1122,
                        1123
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'setDataOffset(ZipArchiveEntry)')": [
                        1263,
                        1264,
                        1265
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', None)": [
                        41,
                        45,
                        46,
                        47,
                        51,
                        52,
                        56,
                        114,
                        188,
                        209,
                        210
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'validSplitSignature(List)')": [
                        75,
                        85
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forSeekableByteChannels(SeekableByteChannel)')": [
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forSeekableByteChannels(SeekableByteChannel,Iterable)')": [
                        115,
                        127
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'buildFromLastSplitSegment(File)')": [
                        138,
                        140,
                        144
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', None)": [
                        49,
                        50,
                        54,
                        55,
                        56,
                        57,
                        61,
                        62,
                        63,
                        64,
                        65,
                        69,
                        74,
                        83,
                        130,
                        131,
                        132,
                        155,
                        156,
                        190,
                        191,
                        211,
                        212,
                        233,
                        234
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'assertSplitSignature(List)')": [
                        90,
                        91,
                        101
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forOrderedSeekableByteChannels(SeekableByteChannel)')": [
                        115
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'forOrderedSeekableByteChannels(SeekableByteChannel,Iterable)')": [
                        133,
                        134,
                        146
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitReadOnlySeekableByteChannel', 'buildFromLastSplitSegment(File)')": [
                        159,
                        161,
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "(None, None)": [
                        21,
                        224
                    ],
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        196,
                        197,
                        209,
                        210
                    ],
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getExtension(String)')": [
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel.java": {
                "old": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', 'forSeekableByteChannels(SeekableByteChannel)')": [
                        215
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', 'forSeekableByteChannels(SeekableByteChannel)')": [
                        215
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsThrowsOnNullArg')": [
                        67,
                        69
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsOfTwoParametersThrowsOnNullArg')": [
                        73,
                        75
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsReturnCorrectClass')": [
                        79,
                        93,
                        96
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forSeekableByteChannelsReturnsIdentityForSingleElement')": [
                        101,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsThrowsOnNullArg')": [
                        67,
                        69
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsOfTwoParametersThrowsOnNullArg')": [
                        73,
                        75
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsReturnCorrectClass')": [
                        79,
                        93,
                        96
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'forOrderedSeekableByteChannelsReturnsIdentityForSingleElement')": [
                        101,
                        103
                    ]
                }
            }
        }
    },
    "50569e5bfb1526c54acf0abe5a6e4d5463c5a4bd": {
        "authored_data": "2019 Nov 22 09:24",
        "commit.message": "COMPRESS-124 : add testcases for extracting sparse\n",
        "commit.author.name": "Lee",
        "pcid": "b87cc99c8312630427ade0319d100b40143dd9e7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        855,
                        856,
                        1080,
                        1081,
                        1082,
                        1106,
                        1107,
                        1115,
                        1116,
                        1117
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map,List)')": [
                        1085,
                        1089
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map)')": [
                        1104,
                        1105
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map,List)')": [
                        1120,
                        1121,
                        1175
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        855,
                        856,
                        857
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'getRealSize')": [
                        860,
                        861,
                        862
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map)')": [
                        1086,
                        1090
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map)')": [
                        1114
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        73,
                        89,
                        721
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'available')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        235
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        261,
                        264,
                        267,
                        268,
                        269
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        539,
                        540
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map,List)')": [
                        720
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readOldGNUSparse')": [
                        745,
                        746
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        830,
                        831
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        36,
                        1107,
                        1108
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        92,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1080,
                        1081,
                        1082,
                        1083,
                        1084,
                        1085,
                        1086,
                        1087,
                        1088,
                        1089,
                        1090,
                        1091,
                        1092,
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'close')": [
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'available')": [
                        236,
                        239
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        265,
                        270
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skipSparse(long)')": [
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        569,
                        570
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map,List)')": [
                        750,
                        751
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readOldGNUSparse')": [
                        775,
                        776
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        862,
                        863,
                        864
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readSparse(byte,int,int)')": [
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'buildSparseInputStreams')": [
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062,
                        1063,
                        1064,
                        1065,
                        1066,
                        1067,
                        1068,
                        1069,
                        1070,
                        1071,
                        1072,
                        1073,
                        1074,
                        1075,
                        1076,
                        1077,
                        1078,
                        1079
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java": {
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveSparseEntry', None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveStructSparse', None)": [
                        44,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        64,
                        65
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveStructSparse', 'equals(Object)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveStructSparse', 'hashCode')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveStructSparse', 'toString')": [
                        59,
                        60,
                        61,
                        62,
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        27,
                        28
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        26,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', None)": [
                        36,
                        37,
                        38,
                        83,
                        84,
                        85,
                        86,
                        87,
                        125,
                        126,
                        127,
                        128,
                        129,
                        151,
                        152,
                        153,
                        154,
                        155,
                        201,
                        202,
                        203,
                        204,
                        205,
                        259,
                        260
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testOldGNU')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testPaxGNU')": [
                        81,
                        82
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractSparseTarsOnWindows')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractOldGNU')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractExtendedOldGNU')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'testExtractPaxGNU')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'assertPaxGNUEntry(TarArchiveInputStream,String)')": [
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258
                    ],
                    "('org.apache.commons.compress.archivers.tar#SparseFilesTest', 'extractTarAndGetInputStream(File,String)')": [
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', None)": [
                        384
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseSparse')": [
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ],
                    "(None, None)": [
                        394,
                        395
                    ]
                }
            }
        }
    },
    "0df4d084182c2c2662b777ee2c3b04a1c42bbc66": {
        "authored_data": "2019 Oct 28 08:04",
        "commit.message": "COMPRESS-477:add support for splitted zip file\n\nadd support for splitted zip file for ZipArchiveInputStream\n",
        "commit.author.name": "Lee",
        "pcid": "444970ce5f441e1ff0224339c9b524fa9075de8b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        123,
                        124,
                        125,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        246
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        395,
                        396,
                        397,
                        398
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "(None, None)": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        149,
                        363,
                        364
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        215,
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/MultiReadOnlySeekableByteChannel.java": {
                "old": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', None)": [
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', None)": [
                        47,
                        48,
                        49,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.compress.utils#MultiReadOnlySeekableByteChannel', 'position(long,long)')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        37,
                        38
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        601,
                        617,
                        618,
                        619,
                        620,
                        636,
                        637,
                        638,
                        639,
                        655,
                        656,
                        657,
                        658,
                        668,
                        669,
                        670
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZip')": [
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipOfZip64')": [
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByWinrar')": [
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testSplitZipCreatedByZipThrowsException')": [
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "old": {
                    "(None, None)": [
                        49,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByZip')": [
                        700,
                        701
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByZipOfZip64')": [
                        717,
                        718
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByWinrar')": [
                        734,
                        735,
                        738
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByZip')": [
                        697,
                        698
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByZipOfZip64')": [
                        714,
                        715
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'extractFileLiesAcrossSplitZipSegmentsCreatedByWinrar')": [
                        731,
                        732,
                        735
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/utils/ZipSplitReadOnlySeekableByteChannelTest.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'channelsPositionIsZeroAfterConstructor')": [
                        60
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'positionToSomeZipSplitSegment')": [
                        145,
                        148,
                        151,
                        155,
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'channelsPositionIsZeroAfterConstructor')": [
                        61
                    ],
                    "('org.apache.commons.compress.utils#ZipSplitReadOnlySeekableByteChannelTest', 'positionToSomeZipSplitSegment')": [
                        146,
                        149,
                        152,
                        156,
                        158
                    ]
                }
            }
        }
    },
    "e61d22ee3549e9ac7379114d9e0a40d68b5dc600": {
        "authored_data": "2019 Nov 12 01:20",
        "commit.message": "COMPRESS-477 building a split/spanned zip\n\nadd testcases for building a split/spanned zip, as the PR of extracting a split zip is not merged yet,\nthere're no other ways to test in code if my constructed zip is valid.\n\nI will add this part of testcases as soon as the PR of extracting split zip is merged.\n",
        "commit.author.name": "Lee",
        "pcid": "be2d130862163cfa8597744140830c3f7bb3a5ed",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1432
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,EntryMetaData,boolean)')": [
                        1302,
                        1303
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1434
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipSplitOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', None)": [
                        11
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'write(int)')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'createNewSplitSegmentFile(Integer)')": [
                        203,
                        204,
                        207
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', None)": [
                        28,
                        32
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'write(int)')": [
                        90,
                        91
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipSplitOutputStream', 'createNewSplitSegmentFile(Integer)')": [
                        221,
                        224
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        201,
                        202
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        202
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', None)": [
                        650,
                        659,
                        660,
                        661,
                        716,
                        752,
                        753
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'buildSplitZipTest')": [
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'getFilesToZip')": [
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'addFilesToZip(ZipArchiveOutputStream,File)')": [
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765
                    ],
                    "(None, None)": [
                        766,
                        767
                    ]
                }
            }
        }
    },
    "b87cc99c8312630427ade0319d100b40143dd9e7": {
        "authored_data": "2019 Nov 16 10:49",
        "commit.message": "COMPRESS-124 add support for sparse files in tar\n\nadd support for extracting tar archives containing sparse files\n",
        "commit.author.name": "Lee",
        "pcid": "28049d2f89a76c5a4845c12151a483ca7773fb6f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map)')": [
                        1046,
                        1050
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map)')": [
                        1074
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        27,
                        30
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        206,
                        207,
                        208,
                        217,
                        218,
                        219,
                        220,
                        755,
                        756,
                        757,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        769,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        778,
                        779,
                        780,
                        1080,
                        1081,
                        1082,
                        1106,
                        1107,
                        1115,
                        1116,
                        1117
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'setSparseHeaders(List)')": [
                        758,
                        759
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'getSparseHeaders')": [
                        767,
                        768
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'isPaxGNU1XSparse')": [
                        776,
                        777
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'updateEntryFromPaxHeaders(Map,List)')": [
                        1085,
                        1089
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map)')": [
                        1104,
                        1105
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'processPaxHeader(String,String,Map,List)')": [
                        1120,
                        1121,
                        1175
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'parseTarHeader(byte,ZipEncoding,boolean,boolean)')": [
                        1392,
                        1393,
                        1394,
                        1395,
                        1396,
                        1397,
                        1398,
                        1399,
                        1400,
                        1401
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'fillGNUSparse1xData(Map)')": [
                        1522
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'available')": [
                        217,
                        220
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        246,
                        247
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        351
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGlobalPaxHeaders')": [
                        469
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        474,
                        476
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        477,
                        478,
                        479,
                        480,
                        481,
                        546,
                        547
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        482
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map)')": [
                        536,
                        537
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readOldGNUSparse')": [
                        550,
                        551,
                        552,
                        553,
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        632,
                        642
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        73,
                        74,
                        75,
                        87,
                        88,
                        89,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'available')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        235
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'skip(long)')": [
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        374
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGlobalPaxHeaders')": [
                        492
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'paxHeaders')": [
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePAX01SparseHeaders(String)')": [
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePAX1XSparseHeaders')": [
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readLineOfNumberForPax1X(InputStream)')": [
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream,List)')": [
                        648,
                        651,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'applyPaxHeadersToCurrentEntry(Map,List)')": [
                        719,
                        720
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readOldGNUSparse')": [
                        740,
                        743,
                        744,
                        745,
                        746
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        811,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        830,
                        831,
                        832,
                        833,
                        834
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.java": {
                "new": {
                    "(None, None)": [
                        22,
                        79
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveSparseEntry', None)": [
                        48,
                        49,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        76
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveSparseEntry', 'getSparseHeaders')": [
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "new": {
                    "(None, None)": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        304,
                        305
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'parseSparse(byte,int)')": [
                        306,
                        307,
                        308,
                        309,
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/BoundedInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.utils#BoundedInputStream', None)": [
                        76,
                        77
                    ],
                    "('org.apache.commons.compress.utils#BoundedInputStream', 'skip(long)')": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "(None, None)": [
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        57
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'secondEntryWinsWhenPaxHeaderContainsDuplicateKey')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'paxHeaderEntryWithEmptyValueRemovesKey')": [
                        81
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        92
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        57
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'secondEntryWinsWhenPaxHeaderContainsDuplicateKey')": [
                        69
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'paxHeaderEntryWithEmptyValueRemovesKey')": [
                        81
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        92
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        106
                    ]
                }
            }
        }
    },
    "be2d130862163cfa8597744140830c3f7bb3a5ed": {
        "authored_data": "2019 Nov 07 06:48",
        "commit.message": "COMPRESS-477 support for splitted zip files\n\nadd support for constructing splitted zip files\n",
        "commit.author.name": "Lee",
        "pcid": "28049d2f89a76c5a4845c12151a483ca7773fb6f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        147,
                        1085,
                        1086,
                        1089,
                        1090
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'getDiskNumberStart')": [
                        1083,
                        1084
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setDiskNumberStart(int)')": [
                        1087,
                        1088
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        470,
                        473
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry,boolean)')": [
                        1039
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,EntryMetaData,boolean)')": [
                        1294
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1357,
                        1358,
                        1359,
                        1374,
                        1375
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeZip64CentralDirectory')": [
                        1411,
                        1414,
                        1415,
                        1431,
                        1432,
                        1433,
                        1438,
                        1450,
                        1454
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        1586
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'finish')": [
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        530,
                        531,
                        532,
                        533
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry,boolean)')": [
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,EntryMetaData,boolean)')": [
                        1301,
                        1302,
                        1303,
                        1304,
                        1305,
                        1306,
                        1307,
                        1308,
                        1309,
                        1310,
                        1367,
                        1368,
                        1369,
                        1370,
                        1371
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralDirectoryEnd')": [
                        1432,
                        1433,
                        1434,
                        1435,
                        1438,
                        1439,
                        1440,
                        1441,
                        1442,
                        1443,
                        1444,
                        1445,
                        1446,
                        1460,
                        1461,
                        1462,
                        1463,
                        1464,
                        1465,
                        1466,
                        1468
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeZip64CentralDirectory')": [
                        1504,
                        1505,
                        1506,
                        1507,
                        1508,
                        1509,
                        1510,
                        1511,
                        1512,
                        1513,
                        1516,
                        1517,
                        1533,
                        1534,
                        1535,
                        1536,
                        1537,
                        1538,
                        1539,
                        1540,
                        1541,
                        1542,
                        1543,
                        1544,
                        1545,
                        1546,
                        1547,
                        1559,
                        1560,
                        1561,
                        1562,
                        1563,
                        1564,
                        1565,
                        1566,
                        1567,
                        1568,
                        1569,
                        1570,
                        1575,
                        1579,
                        1580,
                        1581,
                        1582,
                        1583,
                        1584,
                        1585
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "new": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', 'getBaseName(String)')": [
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209
                    ],
                    "(None, None)": [
                        210
                    ]
                }
            }
        }
    }
}