{
    "a40c53d1494d71d09f57880f1a333445ddf4c535": {
        "authored_data": "2020 Aug 18 07:22",
        "commit.message": "COMPRESS-550 : add writePreamble to ZipArchiveInputStream\n\nAdd writePreamble to ZipArchiveInputStream. This is used to create\nself-extracting zips.\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "4eb3bbe8e95f5e3b6388b1e8db28b862cc712294",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writePreamble(byte)')": [
                        1015,
                        1016
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writePreamble(byte,int,int)')": [
                        1029,
                        1030,
                        1031,
                        1032,
                        1033
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', None)": [
                        766,
                        771,
                        772,
                        773,
                        843,
                        844,
                        845
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'throwsExceptionWhenWritingPreamble')": [
                        767,
                        768,
                        769,
                        770
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFileTest', 'testSelfExtractingZipUsingUnzipsfx')": [
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        789,
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809,
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842
                    ]
                }
            }
        }
    },
    "4eb3bbe8e95f5e3b6388b1e8db28b862cc712294": {
        "authored_data": "2020 Sep 02 12:54",
        "commit.message": "COMPRESS-547 : add asserts for Arrays.copyOf\n\nAdd asserts for Arrays.copyOf in X0017_StrongEncryptionHeader.\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "3b28227a5ebed06f15e5706a4d5801c46549d72c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#X0017_StrongEncryptionHeader', 'parseFileFormat(byte,int,int)')": [
                        344,
                        357,
                        370,
                        372
                    ]
                }
            }
        }
    },
    "3b28227a5ebed06f15e5706a4d5801c46549d72c": {
        "authored_data": "2020 Sep 01 08:19",
        "commit.message": "COMPRESS-554 : update name of testcase\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "319a848ce71953ace6977f9b2dc505f24576addc",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'stCompress554')": [
                        464
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'testThrowExceptionWithNullEntry')": [
                        464
                    ]
                }
            }
        }
    },
    "319a848ce71953ace6977f9b2dc505f24576addc": {
        "authored_data": "2020 Sep 01 07:16",
        "commit.message": "COMPRESS-554 : throw IOExcepiton if error is met\n\nThrow an decleared IOException if a null entry is met when reading a global pax header instead of a runtime NPE.\n",
        "commit.author.name": "PeterAlfredLee",
        "pcid": "a0ec219e19bb219776425e2e6b87ae3c6394acd1",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'readGlobalPaxHeaders')": [
                        576,
                        577,
                        578
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        579
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        463,
                        468,
                        469,
                        470,
                        471
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'stCompress554')": [
                        464,
                        465,
                        466,
                        467
                    ]
                }
            }
        }
    },
    "a0ec219e19bb219776425e2e6b87ae3c6394acd1": {
        "authored_data": "2020 Aug 30 23:07",
        "commit.message": "Use US English spelling.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "08d754cce4bb9a3bc30467e965ab86c64473e032",
        "changes": {
            "src/main/java/org/apache/commons/compress/utils/IOUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#IOUtils', None)": [
                        50
                    ]
                }
            }
        }
    },
    "e3ea7b6607e7c96b9e2b6813c05bfba887c8e226": {
        "authored_data": "2020 Aug 30 22:55",
        "commit.message": "Renamed the package org.apache.harmony\nto\u00a0org.apache.commons.compress.harmony to more easily track\npotential\u00a0future changes.",
        "commit.author.name": "Gary Gregory",
        "pcid": "7e487e113997f3f9e31e54e690b96c9ad045cda5",
        "changes": {
            "src/main/java/org/apache/commons/compress/java/util/jar/Pack200.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newPacker')": [
                        65
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newUnpacker')": [
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newPacker')": [
                        65
                    ],
                    "('org.apache.commons.compress.java.util.jar#Pack200', 'newUnpacker')": [
                        95
                    ]
                }
            }
        }
    }
}