{
    "ace950bc8268436f2221464897058e3e0924569e": {
        "authored_data": "2014 Dec 26 17:35",
        "commit.message": "amended for time zone in the wrong direction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1648000 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "5ad7e43cc3d3f0c4e7069d928b64d5d2adf28288",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testInsideCalendar')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        106,
                        107
                    ]
                }
            }
        }
    },
    "5ad7e43cc3d3f0c4e7069d928b64d5d2adf28288": {
        "authored_data": "2014 Dec 26 17:30",
        "commit.message": "so my assumption about time zones was wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647999 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "090e7cc2c6059e22016442c851f3e3dfd955aedd",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testInsideCalendar')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        106,
                        107
                    ]
                }
            }
        }
    },
    "090e7cc2c6059e22016442c851f3e3dfd955aedd": {
        "authored_data": "2014 Dec 26 16:21",
        "commit.message": "add back test but take UTC offset into account\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647993 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "20403a5ab39f4a69d4149a485b23a002e6dde2c8",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testInsideCalendar')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        106,
                        107
                    ]
                }
            }
        }
    },
    "6fd3c9fe3521e63f7e0d0b19dd260462a6001301": {
        "authored_data": "2014 Dec 24 14:47",
        "commit.message": "Removed testcase added in previous commit.\n\nIt seems like OpenJDK calendar operations are somewhat different from sun jdk, so this is\nnot a viable test to make\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647798 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Kristian Rosenvold",
        "pcid": "1418705648202405208e3f4d900dfcc81457cbac",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testInsideCalendar')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        103,
                        104
                    ]
                }
            }
        }
    },
    "1418705648202405208e3f4d900dfcc81457cbac": {
        "authored_data": "2014 Dec 24 14:00",
        "commit.message": "Cut overall object instantiation in half by changing file\nheader generation algorithm, for a 10-15 percent performance\nimprovement when archive contains lots of small files.\n\nAlso extracted two private methods createLocalFileHeader\nand createCentralFileHeader in ZipArchiveOutputStream.\n\nThese may have some interesting additional usages in the near future.\n\nThis is basically a \"tactical refactoring\"; scatter/gather had a\nwonderful performance in the \"scatter\" algorithm, but spent\nan *equal* amount of time in the \"gather\" phase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647787 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Kristian Rosenvold",
        "pcid": "bc685791be4207184ca5823dc0fb7615c129e415",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'encode')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'encode')": [
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'encode(byte,int)')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        666
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        934,
                        942,
                        943,
                        944,
                        945,
                        950,
                        951,
                        952,
                        953,
                        954,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        967,
                        969,
                        974,
                        975,
                        977,
                        978,
                        981,
                        982,
                        984,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        994,
                        995,
                        998,
                        999,
                        1000,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        1012,
                        1385
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        1081,
                        1082,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106,
                        1107,
                        1108,
                        1109,
                        1110,
                        1111,
                        1112,
                        1113,
                        1114,
                        1115,
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124,
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1146,
                        1147,
                        1156,
                        1157,
                        1158,
                        1161,
                        1162,
                        1165,
                        1166,
                        1169,
                        1170,
                        1173,
                        1174,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1183,
                        1186,
                        1187,
                        1188
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeVersionNeededToExtractAndGeneralPurposeBits(int,boolean,boolean)')": [
                        1358,
                        1359,
                        1360,
                        1361,
                        1362,
                        1363,
                        1364,
                        1365,
                        1366,
                        1367,
                        1370,
                        1371,
                        1372,
                        1373,
                        1377,
                        1378,
                        1379,
                        1380,
                        1381,
                        1382,
                        1383,
                        1384
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        48
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        976,
                        977,
                        978,
                        1040,
                        1041,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1409,
                        1410,
                        1420,
                        1421,
                        1424,
                        1425
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        695
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeLocalFileHeader(ZipArchiveEntry)')": [
                        970,
                        971,
                        972,
                        973,
                        974,
                        975
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createLocalFileHeader(ZipArchiveEntry,ByteBuffer,boolean)')": [
                        979,
                        980,
                        981,
                        982,
                        983,
                        984,
                        985,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        999,
                        1000,
                        1001,
                        1007,
                        1012,
                        1013,
                        1015,
                        1016,
                        1019,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1027,
                        1029,
                        1032,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'writeCentralFileHeader(ZipArchiveEntry)')": [
                        1125,
                        1128,
                        1129,
                        1130
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'createCentralFileHeader(ZipArchiveEntry,ByteBuffer,long)')": [
                        1142,
                        1152,
                        1153,
                        1154,
                        1155,
                        1156,
                        1157,
                        1158,
                        1159,
                        1160,
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166,
                        1167,
                        1168,
                        1169,
                        1170,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1183,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190,
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1196,
                        1197,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204,
                        1205,
                        1206,
                        1207,
                        1210,
                        1213,
                        1216,
                        1219,
                        1222,
                        1223,
                        1224,
                        1225,
                        1226,
                        1227,
                        1228,
                        1231,
                        1232
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'getGeneralPurposeBits(int,boolean)')": [
                        1402,
                        1405,
                        1408
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'versionNeededToExtract(int,boolean)')": [
                        1411,
                        1413,
                        1414,
                        1415,
                        1416,
                        1417,
                        1418,
                        1419
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'isDeflatedToOutputStream(int)')": [
                        1422,
                        1423
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', 'getBytes(long)')": [
                        137,
                        138,
                        139,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', 'getBytes(long)')": [
                        137
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        155,
                        156
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLong', 'putLong(long,byte,int)')": [
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLong', 'putLong(byte,int)')": [
                        157,
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipShort.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipShort', 'getBytes(int)')": [
                        88,
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipShort', 'getBytes(int)')": [
                        88
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipShort', None)": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipShort', 'putShort(int,byte,int)')": [
                        100,
                        101,
                        102
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(long)')": [
                        59,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(long)')": [
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        299,
                        300,
                        301
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(long,byte,int)')": [
                        69,
                        75,
                        76,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'copy(byte,byte,int)')": [
                        296,
                        297,
                        298
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipLongTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipLongTest', None)": [
                        47,
                        48,
                        56,
                        57,
                        58
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipLongTest', 'testPut')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipShortTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipShortTest', None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        53,
                        54
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipShortTest', 'testPut')": [
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipUtilTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testOutsideCalendar')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', None)": [
                        95,
                        96,
                        103,
                        104
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipUtilTest', 'testInsideCalendar')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ]
                }
            }
        }
    },
    "1baac88bb027c33ffdcdbf44015c2764597bcd56": {
        "authored_data": "2014 Dec 23 17:39",
        "commit.message": "zap wildcard imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647623 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "99d11ce4792f1f26cc4b9715b938c02f0104afc9",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "(None, None)": [
                        21,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ]
                }
            }
        }
    },
    "99d11ce4792f1f26cc4b9715b938c02f0104afc9": {
        "authored_data": "2014 Dec 23 14:31",
        "commit.message": "Removed wildcard imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647582 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Kristian Rosenvold",
        "pcid": "56c83a5dd4284f9150e4959a5e266215a292ba28",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ]
                }
            }
        }
    },
    "56c83a5dd4284f9150e4959a5e266215a292ba28": {
        "authored_data": "2014 Dec 22 16:36",
        "commit.message": "COMPRESS-297 only mark file as non-closed when it can be read\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1647348 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "e214adb4b9164910d62614dbd7b3043cb0cc3467",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        137,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        137,
                        221
                    ]
                }
            }
        }
    }
}