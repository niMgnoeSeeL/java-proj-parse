{
    "b0d75e6155c08fca835610e303351f0c1a79286f": {
        "authored_data": "2010 Feb 18 16:30",
        "commit.message": "forgot to fix javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911475 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "58568f4443cb48576dda48b25bd77bdbc7a812d7",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        119
                    ]
                }
            }
        }
    },
    "58568f4443cb48576dda48b25bd77bdbc7a812d7": {
        "authored_data": "2010 Feb 18 16:24",
        "commit.message": "confusing argument name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911474 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "a1015f312480c697c8dbc2772e4076eb15e41406",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'count(int)')": [
                        121,
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'count(int)')": [
                        121,
                        122
                    ]
                }
            }
        }
    },
    "a1015f312480c697c8dbc2772e4076eb15e41406": {
        "authored_data": "2010 Feb 18 16:11",
        "commit.message": "properly count bytes read.  COMPRESS-74\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911467 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "2dca66105a3ec80f99a48ed8c43e3988cc86e84e",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        341,
                        360
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'fill')": [
                        380
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFully(byte)')": [
                        392
                    ]
                }
            }
        }
    },
    "2dca66105a3ec80f99a48ed8c43e3988cc86e84e": {
        "authored_data": "2010 Feb 18 16:10",
        "commit.message": "use long to count bytes or we get trouble with archives > 2GB\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911465 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "6179d0e9ed81b74fd721d3d98d211f2d6ae2c5bf",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        46,
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'count(int)')": [
                        92
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'getCount')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        46,
                        77,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        107,
                        108,
                        109,
                        110,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'count(int)')": [
                        91
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'count(long)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'pushedBackBytes(long)')": [
                        111,
                        112
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'getCount')": [
                        121,
                        122
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', 'getBytesRead')": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        55,
                        56,
                        116,
                        128,
                        129
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'count(int)')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'getCount')": [
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        55,
                        56,
                        116,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        138,
                        139,
                        140,
                        141,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'count(int)')": [
                        122
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'count(long)')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'getCount')": [
                        144
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', 'getBytesWritten')": [
                        151,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        89,
                        128,
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'getNextArEntry')": [
                        89,
                        128,
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextCPIOEntry')": [
                        187
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        242
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readNewEntry(boolean)')": [
                        323
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldAsciiEntry')": [
                        349
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        375
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'getNextCPIOEntry')": [
                        187
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'read(byte,int,int)')": [
                        242
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readNewEntry(boolean)')": [
                        323
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldAsciiEntry')": [
                        349
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        375
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        278
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'read(byte,int,int)')": [
                        278
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        24,
                        37
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'getCount')": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        24,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        56,
                        57
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'count(int)')": [
                        33
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'count(long)')": [
                        42
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'getCount')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.compress.compressors#CompressorInputStream', 'getBytesRead')": [
                        62
                    ]
                }
            }
        }
    },
    "6179d0e9ed81b74fd721d3d98d211f2d6ae2c5bf": {
        "authored_data": "2010 Feb 18 15:31",
        "commit.message": "now that the copy method is there ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911441 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "315b947350def29078dde98703cb9bdd6734b3a5",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(long)')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'toDosTime(long)')": [
                        57
                    ]
                }
            }
        }
    },
    "57cb8c89cf8a8ae285cd03ad2397bbb137006c86": {
        "authored_data": "2010 Feb 18 13:08",
        "commit.message": "allow format to be specified with convenience constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911381 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "bed564b55d405bea0be8379576676e5a9be83493",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        151,
                        191,
                        229,
                        230,
                        236,
                        241,
                        242,
                        250,
                        251,
                        256,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        151,
                        191,
                        229,
                        230,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        260,
                        261,
                        269,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        337,
                        338
                    ]
                }
            }
        }
    },
    "bed564b55d405bea0be8379576676e5a9be83493": {
        "authored_data": "2010 Feb 18 12:34",
        "commit.message": "equalsIgnoreCase does not depend on the current Locale.  My bad.  Revert unnecessary part of earlier changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911369 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b11dca2f006da939879c9729a8af09f8519df007",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        104,
                        105,
                        106,
                        109,
                        112,
                        115,
                        118
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        144,
                        145,
                        146,
                        149,
                        152,
                        155,
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', None)": [
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        101,
                        104,
                        107,
                        110,
                        113
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveOutputStream(String,OutputStream)')": [
                        139,
                        142,
                        145,
                        148,
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        663
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', 'normalizeFileName(String,boolean)')": [
                        663
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        202
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        253,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        196
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', 'isUTF8(String)')": [
                        247,
                        248
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream)')": [
                        120,
                        121,
                        124,
                        128
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorOutputStream(String,OutputStream)')": [
                        156,
                        157,
                        160,
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', None)": [
                        58,
                        59
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorInputStream(String,InputStream)')": [
                        120,
                        124
                    ],
                    "('org.apache.commons.compress.compressors#CompressorStreamFactory', 'createCompressorOutputStream(String,OutputStream)')": [
                        154,
                        158
                    ]
                }
            }
        }
    },
    "b11dca2f006da939879c9729a8af09f8519df007": {
        "authored_data": "2010 Feb 18 11:55",
        "commit.message": "make block size configurable, auto-generate unique values for inode and dev, provide a reasonable default for mode.  COMPRESS-85\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911353 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "14684241489dbe1b607aafd3423ebaf34be377b1",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getMode')": [
                        428
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getNumberOfLinks')": [
                        446
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getMode')": [
                        428
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', 'getNumberOfLinks')": [
                        446,
                        447,
                        448
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        85,
                        86,
                        103,
                        438,
                        443
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        149
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeNewEntry(CpioArchiveEntry)')": [
                        196,
                        204
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldAsciiEntry(CpioArchiveEntry)')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldBinaryEntry(CpioArchiveEntry,boolean)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        254
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        330,
                        341,
                        343
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        123,
                        126,
                        503,
                        508
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        170
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeNewEntry(CpioArchiveEntry)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        240
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldAsciiEntry(CpioArchiveEntry)')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'writeOldBinaryEntry(CpioArchiveEntry,boolean)')": [
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'closeArchiveEntry')": [
                        320
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        396,
                        407,
                        409
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'close')": [
                        426
                    ]
                }
            }
        }
    },
    "14684241489dbe1b607aafd3423ebaf34be377b1": {
        "authored_data": "2010 Feb 17 16:00",
        "commit.message": "it looks as if CPIO was writing files in blocks with 512 being the default blocksize.  COMPRESS-85\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@911031 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "3c5ab4f7ae6827a90a5c72a1befe92d57436f189",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        94
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        339
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        94,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', 'finish')": [
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345
                    ],
                    "(None, None)": [
                        446
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioConstants.java": {
                "new": {
                    "(None, None)": [
                        137,
                        138,
                        139
                    ]
                }
            }
        }
    }
}