{
    "59bb502a7ae8c9e268c72e83ca2a94274e97a907": {
        "authored_data": "2012 Apr 01 13:13",
        "commit.message": "Redundant superinterface ArchiveEntry for the type JarArchiveEntry, already defined by ZipArchiveEntry\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1308099 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "336c42d96187974858a71c58764ef0b1bbfc7536",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/jar/JarArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.jar#JarArchiveEntry', None)": [
                        33
                    ]
                }
            }
        }
    },
    "336c42d96187974858a71c58764ef0b1bbfc7536": {
        "authored_data": "2012 Apr 01 13:04",
        "commit.message": "Remove unnecessary cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1308096 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "2bd0dd4057e274901de8971f1d70de229afc0e54",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveUtil', 'convert64(byte,int)')": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveUtil', 'convert64(byte,int)')": [
                        97
                    ]
                }
            }
        }
    },
    "2bd0dd4057e274901de8971f1d70de229afc0e54": {
        "authored_data": "2012 Apr 01 13:02",
        "commit.message": "Normalize all @since tags to \"@since version\" instead of \"@since Apache Commons Compress version\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1308095 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "cf206ca8268f0526b43445eb5baa6d298b52dd9c",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveEntry.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        100,
                        112,
                        132,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        100,
                        112,
                        132,
                        146
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        131,
                        153,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        131,
                        153,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        333,
                        345
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', None)": [
                        333,
                        345
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveOutputStream', None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        254,
                        292,
                        332
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveEntry', None)": [
                        254,
                        292,
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioConstants.java": {
                "old": {
                    "(None, None)": [
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        140
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        219,
                        420,
                        597,
                        608,
                        622,
                        633,
                        686,
                        698,
                        728,
                        743,
                        752,
                        761,
                        770,
                        779,
                        834
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        219,
                        420,
                        597,
                        608,
                        622,
                        633,
                        686,
                        687,
                        699,
                        729,
                        744,
                        753,
                        762,
                        771,
                        780,
                        835
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        173,
                        181,
                        450
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        173,
                        181,
                        450
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "old": {
                    "(None, None)": [
                        237,
                        245,
                        252,
                        259,
                        280,
                        287
                    ]
                },
                "new": {
                    "(None, None)": [
                        237,
                        245,
                        252,
                        259,
                        280,
                        287
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        165,
                        462
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        165,
                        462
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        125,
                        259
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        125,
                        259
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
                "old": {
                    "(None, None)": [
                        73
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        73
                    ],
                    "('org.apache.commons.compress.archivers.zip#Zip64ExtendedInformationExtraField', None)": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64Mode.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Zip64RequiredException.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        187,
                        199,
                        318,
                        393,
                        420,
                        549,
                        563,
                        590,
                        598
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', None)": [
                        187,
                        199,
                        318,
                        393,
                        420,
                        549,
                        563,
                        590,
                        598
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        153,
                        286
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        153,
                        286
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        242,
                        394,
                        737,
                        1193,
                        1341,
                        1373,
                        1386
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        242,
                        394,
                        737,
                        1193,
                        1341,
                        1373,
                        1386
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipConstants.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEightByteInteger.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        303
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        303
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipLong.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        54,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipLong', None)": [
                        54,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        32,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        32,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        1031
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', None)": [
                        1031
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        223,
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        223,
                        320
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        44,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorOutputStream', None)": [
                        44,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/InMemoryCachingStreamBridge.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorOutputStream.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200Strategy.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200Utils.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/StreamBridge.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/TempFileCachingStreamBridge.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/CountingInputStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/CountingOutputStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            }
        }
    },
    "cf206ca8268f0526b43445eb5baa6d298b52dd9c": {
        "authored_data": "2012 Apr 01 11:53",
        "commit.message": "Unnecessary cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1308086 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "aa1a75cdb63f172c61f6a319c98d57038ae0dccd",
        "changes": {
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testBigNumberStarMode')": [
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testBigNumberStarMode')": [
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "aa1a75cdb63f172c61f6a319c98d57038ae0dccd": {
        "authored_data": "2012 Mar 31 22:40",
        "commit.message": "Replace Javadoc \"<code>null|true|false</code>\" with \"{@code null|true|false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1307928 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "d7119be63642c0cc862e636071b96daaa0b99ec0",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        684,
                        696
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntry', None)": [
                        684,
                        696
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/FallbackZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#FallbackZipEncoding', None)": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#FallbackZipEncoding', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        155,
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        155,
                        176
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        208
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        208
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        288,
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        288,
                        292
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        130,
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipCompressorInputStream', None)": [
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        61,
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        61,
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', None)": [
                        64,
                        82,
                        143,
                        186,
                        199,
                        211,
                        226
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', None)": [
                        64,
                        82,
                        143,
                        186,
                        199,
                        211,
                        226
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        296,
                        308
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        296,
                        308
                    ]
                }
            }
        }
    },
    "d7119be63642c0cc862e636071b96daaa0b99ec0": {
        "authored_data": "2012 Mar 31 22:36",
        "commit.message": "Replace magic strings \"UTF-8\", \"US-ASCII\", and so on with references to a new .util class CharsetNames (like in other commons components.) The Charsets class will be more useful when [compress] moves to Java 6 and can use String#getBytes(Charset) instead of String#getBytes(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1307926 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "f331a7d122ea31e844b16e37ff1711b633aa6214",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        333,
                        346
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        334,
                        347
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writePaxHeaders(String,Map)')": [
                        468,
                        477,
                        481
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'writePaxHeaders(String,Map)')": [
                        469,
                        478,
                        482
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', None)": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.compress.archivers.zip#AbstractUnicodeExtraField', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        198
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveStreamFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/JarTestCase.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/TarTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        56
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testCOMPRESS114')": [
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testTarArchiveLongNameCreation')": [
                        57
                    ],
                    "('org.apache.commons.compress.archivers#TarTestCase', 'testCOMPRESS114')": [
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ar/ArArchiveOutputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/cpio/CpioUtilTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntryTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/dump/DumpArchiveUtilTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/jar/JarArchiveOutputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/memory/MemoryArchiveEntry.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/BigFilesIT.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/SparseFilesTest.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        40
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        58,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        33,
                        34
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readSimplePaxHeader')": [
                        43
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readPaxHeaderWithEmbeddedNewline')": [
                        52
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', 'readNonAsciiPaxHeader')": [
                        61,
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testBigNumberPosixMode')": [
                        117
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteSimplePaxHeaders')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPaxHeadersWithLength99')": [
                        149,
                        152
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPaxHeadersWithLength101')": [
                        167,
                        170
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongFileNamePosixMode')": [
                        203
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testOldEntryPosixMode')": [
                        254
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteNonAsciiPathNamePaxHeader')": [
                        290
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteNonAsciiLinkPathNamePaxHeader')": [
                        311
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testBigNumberPosixMode')": [
                        118
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteSimplePaxHeaders')": [
                        134,
                        135
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPaxHeadersWithLength99')": [
                        150,
                        153
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testPaxHeadersWithLength101')": [
                        168,
                        171
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteLongFileNamePosixMode')": [
                        204
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testOldEntryPosixMode')": [
                        255
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteNonAsciiPathNamePaxHeader')": [
                        291
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStreamTest', 'testWriteNonAsciiLinkPathNamePaxHeader')": [
                        312
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctal')": [
                        49
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctalInvalid')": [
                        83,
                        89,
                        95,
                        101
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testNegative')": [
                        178
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testOverflow')": [
                        184
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testRoundEncoding')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        25
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctal')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctalInvalid')": [
                        85,
                        91,
                        97,
                        103
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testNegative')": [
                        180
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testOverflow')": [
                        186
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testRoundEncoding')": [
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/EncryptedArchiveTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBitTest.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Lister.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Maven221MultiVolumeTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/TestZipEncodings.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#TestZipEncodings', 'doSimpleEncodingTest(String,byte)')": [
                        141,
                        143
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.compress.archivers.zip#TestZipEncodings', 'doSimpleEncodingTest(String,byte)')": [
                        143,
                        145
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', None)": [
                        37,
                        39
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripExplicitUnicodeExtra')": [
                        46
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFSExplicitUnicodeExtra')": [
                        51
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtripExplicitUnicodeExtra')": [
                        61
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripImplicitUnicodeExtra')": [
                        66
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFSImplicitUnicodeExtra')": [
                        71
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtripImplicitUnicodeExtra')": [
                        81
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testZipFileReadsUnicodeFields')": [
                        175,
                        177
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testZipArchiveInputStreamReadsUnicodeFields')": [
                        195,
                        196
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        280,
                        296,
                        313
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'assertUnicodeName(ZipArchiveEntry,String,String)')": [
                        372
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripExplicitUnicodeExtra')": [
                        45
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFSExplicitUnicodeExtra')": [
                        50
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtripExplicitUnicodeExtra')": [
                        60
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripImplicitUnicodeExtra')": [
                        65
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testUtf8FileRoundtripNoEFSImplicitUnicodeExtra')": [
                        70
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testASCIIFileRoundtripImplicitUnicodeExtra')": [
                        80
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testZipFileReadsUnicodeFields')": [
                        174,
                        176
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'testZipArchiveInputStreamReadsUnicodeFields')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        279,
                        295,
                        312
                    ],
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'assertUnicodeName(ZipArchiveEntry,String,String)')": [
                        371
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraFieldTest.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/Zip64SupportIT.java": {
                "old": {
                    "(None, None)": [
                        34,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipEightByteIntegerTest.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipFileTest.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/BZip2UtilsTestCase.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/GzipUtilsTestCase.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/XZUtilsTestCase.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/utils/CountingStreamTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        26
                    ]
                }
            }
        }
    },
    "f331a7d122ea31e844b16e37ff1711b633aa6214": {
        "authored_data": "2012 Mar 31 18:24",
        "commit.message": "COMPRESS-180 new String(byte[]) conversions use default encoding\nDocument where the charset might need specifying\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1307868 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2a36651fbdd822b97efdb1a04788b8fcbfa47cf2",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readCString(int)')": [
                        388
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readCString(int)')": [
                        388
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'readDirectoryEntry(DumpArchiveEntry)')": [
                        329
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveSummary.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveSummary', None)": [
                        48,
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveSummary', None)": [
                        48,
                        50,
                        51,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        252
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'getNextTarEntry')": [
                        252
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'exceptionMessage(byte,int,int,int,byte)')": [
                        238
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'exceptionMessage(byte,int,int,int,byte)')": [
                        238
                    ]
                }
            }
        }
    },
    "2a36651fbdd822b97efdb1a04788b8fcbfa47cf2": {
        "authored_data": "2012 Mar 31 18:21",
        "commit.message": "COMPRESS-180 new String(byte[]) conversions use default encoding\nFixed ArArchiveInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1307867 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "bcc42c53455cf1f9bc05d0c1c7f06b3264bb728f",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'asLong(byte)')": [
                        193
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'asInt(byte,int,boolean)')": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'asLong(byte)')": [
                        193
                    ],
                    "('org.apache.commons.compress.archivers.ar#ArArchiveInputStream', 'asInt(byte,int,boolean)')": [
                        209
                    ]
                }
            }
        }
    },
    "39c93f49db5bc064eba73478c339c5aee61de3fd": {
        "authored_data": "2012 Mar 31 12:30",
        "commit.message": "Trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1307789 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "578aefdcc32a4ec07813d902b2f9d7e4d624bf7b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/ArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        44,
                        84,
                        107,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveInputStream', None)": [
                        44,
                        84,
                        107,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        50,
                        58,
                        75,
                        96,
                        98,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStream', None)": [
                        50,
                        58,
                        75,
                        96,
                        98,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        119,
                        123,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveStreamFactory', 'createArchiveInputStream(String,InputStream)')": [
                        119,
                        123,
                        146
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        36
                    ],
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        366
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        436
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'matches(byte,int)')": [
                        449
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'readOldBinaryEntry(boolean)')": [
                        366
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', None)": [
                        436
                    ],
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStream', 'matches(byte,int)')": [
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioConstants.java": {
                "old": {
                    "(None, None)": [
                        41,
                        63,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioUtil.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', None)": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioUtil', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveConstants.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveConstants', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveConstants', None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        771
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        771
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        75,
                        78
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'finish')": [
                        211
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', None)": [
                        75,
                        78
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'finish')": [
                        211
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'close')": [
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarBuffer.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', None)": [
                        57,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarBuffer', None)": [
                        57,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarConstants.java": {
                "old": {
                    "(None, None)": [
                        255,
                        262,
                        283
                    ]
                },
                "new": {
                    "(None, None)": [
                        255,
                        262,
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        75
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'formatLongOctalBytes(long,byte,int,int)')": [
                        440
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtils', None)": [
                        75
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtils', 'formatLongOctalBytes(long,byte,int,int)')": [
                        440
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UnsupportedZipFeatureException', None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        58,
                        70,
                        81,
                        121
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        94
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        58,
                        70,
                        81,
                        121
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addAddition(Change)')": [
                        94
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'addDeletion(Change)')": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', None)": [
                        43,
                        51
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        70,
                        72,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', None)": [
                        43,
                        51
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveInputStream,ArchiveOutputStream)')": [
                        70,
                        72,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        31,
                        39,
                        48,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        31,
                        39,
                        48,
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        25,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#CompressorInputStream', None)": [
                        25,
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'matches(byte,int)')": [
                        1038,
                        1050
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2CompressorInputStream', 'matches(byte,int)')": [
                        1038,
                        1050
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/ArchiveUtils.java": {
                "old": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', None)": [
                        29,
                        31,
                        76,
                        87,
                        176,
                        193,
                        204,
                        216
                    ],
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'isEqual(byte,int,int,byte,int,int,boolean)')": [
                        170
                    ],
                    "(None, None)": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#ArchiveUtils', None)": [
                        29,
                        31,
                        76,
                        87,
                        176,
                        193,
                        204,
                        216
                    ],
                    "('org.apache.commons.compress.utils#ArchiveUtils', 'isEqual(byte,int,int,byte,int,int,boolean)')": [
                        170
                    ],
                    "(None, None)": [
                        233
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/CountingInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#CountingInputStream', None)": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#CountingInputStream', None)": [
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/utils/CountingOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.utils#CountingOutputStream', None)": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.utils#CountingOutputStream', None)": [
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/AbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        49,
                        303
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List,boolean)')": [
                        333
                    ],
                    "(None, None)": [
                        392
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#AbstractTestCase', None)": [
                        49,
                        303
                    ],
                    "('org.apache.commons.compress#AbstractTestCase', 'checkArchiveContent(ArchiveInputStream,List,boolean)')": [
                        333
                    ],
                    "(None, None)": [
                        392
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/ArchiveReadTests.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        45,
                        50,
                        54,
                        59,
                        89
                    ],
                    "('org.apache.commons.compress#ArchiveReadTests', 'suite')": [
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ArchiveReadTests', None)": [
                        45,
                        50,
                        54,
                        59,
                        89
                    ],
                    "('org.apache.commons.compress#ArchiveReadTests', 'suite')": [
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/ArchiveUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress#ArchiveUtilsTest', None)": [
                        47,
                        56
                    ],
                    "('org.apache.commons.compress#ArchiveUtilsTest', 'testCompareAscii')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#ArchiveUtilsTest', None)": [
                        47,
                        56
                    ],
                    "('org.apache.commons.compress#ArchiveUtilsTest', 'testCompareAscii')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/DetectArchiverTestCase.java": {
                "old": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', None)": [
                        78,
                        93,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#DetectArchiverTestCase', None)": [
                        78,
                        93,
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/DetectCompressorTestCase.java": {
                "old": {
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/IOMethodsTest.java": {
                "old": {
                    "('org.apache.commons.compress#IOMethodsTest', None)": [
                        51,
                        120
                    ],
                    "('org.apache.commons.compress#IOMethodsTest', 'compareWrites(String,ArchiveEntry)')": [
                        105,
                        113
                    ],
                    "('org.apache.commons.compress#IOMethodsTest', 'compareReads(String)')": [
                        127,
                        132,
                        138,
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.compress#IOMethodsTest', None)": [
                        51,
                        120
                    ],
                    "('org.apache.commons.compress#IOMethodsTest', 'compareWrites(String,ArchiveEntry)')": [
                        105,
                        113
                    ],
                    "('org.apache.commons.compress#IOMethodsTest', 'compareReads(String)')": [
                        127,
                        132,
                        138,
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ArchiveOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testFinish')": [
                        50,
                        59,
                        68,
                        77,
                        86
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testOptionalFinish')": [
                        99,
                        104
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', None)": [
                        116
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        140,
                        151,
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testFinish')": [
                        50,
                        59,
                        68,
                        77,
                        86
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'testOptionalFinish')": [
                        99,
                        104
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', None)": [
                        116
                    ],
                    "('org.apache.commons.compress.archivers#ArchiveOutputStreamTest', 'doCallSequence(String)')": [
                        140,
                        151,
                        165
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/CpioTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#CpioTestCase', 'testCpioUnarchive')": [
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ExceptionMessageTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', None)": [
                        27,
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ExceptionMessageTest', None)": [
                        27,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/LongPathTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        47,
                        57,
                        62,
                        94
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        91
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#LongPathTest', None)": [
                        47,
                        57,
                        62,
                        94
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'suite')": [
                        91
                    ],
                    "('org.apache.commons.compress.archivers#LongPathTest', 'testArchive')": [
                        127
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        170,
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testListAllFilesWithNestedArchive')": [
                        170,
                        195
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/cpio/CpioArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', 'testCpioUnarchive')": [
                        32,
                        37
                    ],
                    "(None, None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveInputStreamTest', 'testCpioUnarchive')": [
                        32,
                        37
                    ],
                    "(None, None)": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveEntryTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntryTest', None)": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveEntryTest', None)": [
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        81
                    ],
                    "(None, None)": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStreamTest', None)": [
                        81
                    ],
                    "(None, None)": [
                        110
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/tar/TarUtilsTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', None)": [
                        27,
                        43,
                        116,
                        158,
                        174,
                        191
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctal')": [
                        57,
                        60
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testOverflow')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', None)": [
                        27,
                        43,
                        116,
                        158,
                        174,
                        191
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testParseOctal')": [
                        57,
                        60
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarUtilsTest', 'testOverflow')": [
                        184
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/UTF8ZipFilesTest.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        315
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#UTF8ZipFilesTest', 'createTestFile(File,String,boolean,boolean)')": [
                        315
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/changes/ChangeSetTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', None)": [
                        46,
                        100,
                        132,
                        402,
                        461,
                        948,
                        1089,
                        1131
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwice')": [
                        82,
                        85,
                        89
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwiceWithoutReplace')": [
                        114,
                        117,
                        121
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFile')": [
                        277
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFile2')": [
                        317
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeletePlusAddSame')": [
                        347,
                        387
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testChangeSetResults')": [
                        444
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddDeleteAdd')": [
                        585
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteAddDelete')": [
                        633
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromZip')": [
                        670
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromTar')": [
                        707
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromJar')": [
                        745
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToTar')": [
                        789
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToJar')": [
                        833
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAr')": [
                        869
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToAr')": [
                        912
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteAddToOneFileArchive')": [
                        1018,
                        1023
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddDeleteToOneFileArchive')": [
                        1071
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddAllreadyExistingWithReplaceTrue')": [
                        1116
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddAllreadyExistingWithReplaceFalse')": [
                        1158
                    ],
                    "(None, None)": [
                        1175
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', None)": [
                        46,
                        100,
                        132,
                        402,
                        461,
                        948,
                        1089,
                        1131
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwice')": [
                        82,
                        85,
                        89
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddChangeTwiceWithoutReplace')": [
                        114,
                        117,
                        121
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFile')": [
                        277
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFile2')": [
                        317
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeletePlusAddSame')": [
                        347,
                        387
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testChangeSetResults')": [
                        444
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddDeleteAdd')": [
                        585
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteAddDelete')": [
                        633
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromZip')": [
                        670
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromTar')": [
                        707
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromJar')": [
                        745
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToTar')": [
                        789
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToJar')": [
                        833
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAr')": [
                        869
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteFromAndAddToAr')": [
                        912
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testDeleteAddToOneFileArchive')": [
                        1018,
                        1023
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddDeleteToOneFileArchive')": [
                        1071
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddAllreadyExistingWithReplaceTrue')": [
                        1116
                    ],
                    "('org.apache.commons.compress.changes#ChangeSetTestCase', 'testAddAllreadyExistingWithReplaceFalse')": [
                        1158
                    ],
                    "(None, None)": [
                        1175
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/compressors/BZip2TestCase.java": {
                "old": {
                    "(None, None)": [
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        127
                    ]
                }
            }
        }
    }
}