{
    "afce414fb9351fba7e68dc5e77e2e144c3c59722": {
        "authored_data": "2013 Dec 20 05:16",
        "commit.message": "can't write shrunk entries either\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552494 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "b7fc931e05615f45b43385774ddf63962d62ed05",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'canWriteEntryData(ArchiveEntry)')": [
                        745
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'canWriteEntryData(ArchiveEntry)')": [
                        745,
                        746,
                        747
                    ]
                }
            }
        }
    },
    "f9487ac192219b1c0419d80eb2b3cc6674992788": {
        "authored_data": "2013 Dec 19 16:09",
        "commit.message": "Explode support for ZipFile and ZipArchiveInputStream (COMPRESS-115)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552325 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "3fd6f60ca21a18baad27d31a5d9b253de11a3944",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/GeneralPurposeBit.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'parse(byte,int)')": [
                        146,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', None)": [
                        28,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        76,
                        77,
                        141,
                        142,
                        143,
                        144,
                        145,
                        148,
                        149,
                        150,
                        151,
                        152,
                        174
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'getSlidingDictionarySize')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'getNumberOfShannonFanoTrees')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.compress.archivers.zip#GeneralPurposeBit', 'parse(byte,int)')": [
                        183,
                        185,
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        274,
                        275,
                        276,
                        277
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        383,
                        384
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'canWriteEntryData(ArchiveEntry)')": [
                        744
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', 'canWriteEntryData(ArchiveEntry)')": [
                        744,
                        745
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'getInputStream(ZipArchiveEntry)')": [
                        382,
                        383,
                        384
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipUtil.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipUtil', 'supportsMethodOf(ZipArchiveEntry)')": [
                        306
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/ZipTestCase.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testSupportedCompressionMethod')": [
                        145,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testSupportedCompressionMethod')": [
                        143,
                        147,
                        148,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.compress.archivers#ZipTestCase', 'testSkipEntryWithUnsupportedCompressionMethod')": [
                        170
                    ]
                }
            }
        }
    },
    "3fd6f60ca21a18baad27d31a5d9b253de11a3944": {
        "authored_data": "2013 Dec 19 13:39",
        "commit.message": "data descriptor is not supported for shrunk entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552319 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stefan Bodewig",
        "pcid": "8d44f86110b0d4c0efd120c5af7a60b5db956ed9",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        705,
                        706
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        705,
                        706,
                        707
                    ]
                }
            }
        }
    },
    "8d44f86110b0d4c0efd120c5af7a60b5db956ed9": {
        "authored_data": "2013 Dec 19 13:12",
        "commit.message": "Changed canReadEntryData() to support shrunk entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552309 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "1b47ffe3bb81de2a922d72782b6b685de610f7a6",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'canReadEntryData(ArchiveEntry)')": [
                        345
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testUnshrinkEntry')": [
                        132,
                        143
                    ]
                }
            }
        }
    },
    "1b47ffe3bb81de2a922d72782b6b685de610f7a6": {
        "authored_data": "2013 Dec 19 12:30",
        "commit.message": "Support shrunk entries in ZipArchiveInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552293 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "8be4fba85c87795c84d2fbcb73dddb61483d75fa",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        274,
                        275,
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        378,
                        379
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        981,
                        982,
                        983,
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062
                    ],
                    "(None, None)": [
                        1063
                    ]
                }
            },
            "src/test/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        148,
                        149
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', None)": [
                        125,
                        126
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStreamTest', 'testUnshrinkEntry')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ]
                }
            }
        }
    },
    "bfc8e03bdcf73162cc0f52c5ccb20b24961d54a8": {
        "authored_data": "2013 Dec 19 10:01",
        "commit.message": "Defer checking the inflater state to the readDeflated() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552274 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "429462a14d4f87846adf3e9a7109d8afdf3d5195",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        351
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        351,
                        352
                    ]
                }
            }
        }
    },
    "429462a14d4f87846adf3e9a7109d8afdf3d5195": {
        "authored_data": "2013 Dec 19 09:53",
        "commit.message": "Formatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552269 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "d11e8d1cc1bc180a742df9df57cd890d4967ec41",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        61,
                        62,
                        63,
                        66,
                        67,
                        68,
                        71,
                        72,
                        73,
                        76,
                        77,
                        78,
                        81,
                        82,
                        83,
                        85,
                        86,
                        87,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        105,
                        106,
                        107,
                        108,
                        177,
                        178,
                        179,
                        544,
                        545,
                        546,
                        547,
                        560,
                        561,
                        900,
                        963,
                        964
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        241,
                        242,
                        246,
                        247,
                        290,
                        291
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        308,
                        309,
                        310,
                        311
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'processZip64Extra(ZipLong,ZipLong)')": [
                        329,
                        330,
                        331,
                        335,
                        336,
                        337,
                        338,
                        339
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        412,
                        413
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        452,
                        453
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        473,
                        474
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skip(long)')": [
                        526,
                        527,
                        528
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'matches(byte,int)')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'checksig(byte,byte)')": [
                        562
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        599,
                        604,
                        605,
                        606
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        633,
                        634,
                        638,
                        639
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        716,
                        717,
                        722,
                        723,
                        724,
                        725,
                        726
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        803,
                        804,
                        805,
                        806
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        845,
                        846
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'pushback(byte,int,int)')": [
                        858,
                        859
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skipRemainderOfArchive')": [
                        891,
                        892
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'realSkip(long)')": [
                        947,
                        948,
                        949
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        61,
                        64,
                        67,
                        70,
                        73,
                        75,
                        76,
                        78,
                        79,
                        81,
                        82,
                        84,
                        92,
                        161,
                        513,
                        514,
                        526,
                        527,
                        855,
                        916
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'getNextZipEntry')": [
                        223,
                        227,
                        270
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFirstLocalFileHeader(byte)')": [
                        287,
                        288,
                        289
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'processZip64Extra(ZipLong,ZipLong)')": [
                        307,
                        308,
                        312,
                        313
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readStored(byte,int,int)')": [
                        386
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDeflated(byte,int,int)')": [
                        425
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readFromInflater(byte,int,int)')": [
                        445
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skip(long)')": [
                        497
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'matches(byte,int)')": [
                        525
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'checksig(byte,byte)')": [
                        528
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        565,
                        570,
                        571
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'drainCurrentEntryData')": [
                        598,
                        602
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'readDataDescriptor')": [
                        679,
                        684,
                        685
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'bufferContainsSignature(ByteArrayOutputStream,int,int,int)')": [
                        762,
                        763,
                        764
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'cacheBytesRead(ByteArrayOutputStream,int,int,int)')": [
                        803
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'pushback(byte,int,int)')": [
                        815
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'skipRemainderOfArchive')": [
                        847
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'realSkip(long)')": [
                        902
                    ]
                }
            }
        }
    },
    "d11e8d1cc1bc180a742df9df57cd890d4967ec41": {
        "authored_data": "2013 Dec 19 09:35",
        "commit.message": "Moved the entry crc into the CurrentEntry inner class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/compress/trunk@1552260 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "8bfb8987a3f5c73a38880c2c10cf7eda06ac9ddd",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        408
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'closeEntry')": [
                        629
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        744,
                        745,
                        746
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'read(byte,int,int)')": [
                        403
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', 'supportsDataDescriptorFor(ZipArchiveEntry)')": [
                        738,
                        739,
                        740
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveInputStream', None)": [
                        985,
                        990,
                        995,
                        1000,
                        1006,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019
                    ]
                }
            }
        }
    }
}