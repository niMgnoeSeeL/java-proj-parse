{
    "d5aa050a642409fab36805b2296a99e8e5ce8449": {
        "authored_data": "2016 Jun 25 21:21",
        "commit.message": "[COMPRESS-362] Bullet-proof code using try-with-resources statements.",
        "commit.author.name": "Gary Gregory",
        "pcid": "cd9d5ee5dc83fb74c0e823e0b13db397ef017251",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readStartHeader(long)')": [
                        231,
                        232,
                        233,
                        234,
                        239,
                        240,
                        241
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        242
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'getCurrentStream')": [
                        913,
                        914,
                        915
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'readStartHeader(long)')": [
                        231,
                        232
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'getCurrentStream')": [
                        907,
                        908,
                        909
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'addArchiveEntry(ZipArchiveEntryRequest)')": [
                        95,
                        96,
                        98,
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'addArchiveEntry(ZipArchiveEntryRequest)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200CompressorInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', None)": [
                        171,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        182,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200CompressorInputStream', None)": [
                        171,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        182,
                        186,
                        187,
                        188,
                        189,
                        190
                    ]
                }
            }
        }
    },
    "cd9d5ee5dc83fb74c0e823e0b13db397ef017251": {
        "authored_data": "2016 Jun 25 21:14",
        "commit.message": "[COMPRESS-362] Bullet-proof code using try-with-resources statements.",
        "commit.author.name": "Gary Gregory",
        "pcid": "f52ecf8657801852c55bc9118dd953a096388ab3",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        47,
                        48,
                        50,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.compress.archivers#Lister', None)": [
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.compress.archivers#Lister', 'createArchiveInputStream(String,InputStream)')": [
                        57,
                        58,
                        60,
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/CLI.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        85,
                        86,
                        102,
                        103
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#CLI', 'main(String)')": [
                        130,
                        131,
                        136,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#CLI', None)": [
                        85
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#CLI', 'main(String)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'writeTo(ZipArchiveOutputStream)')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', 'writeTo(ZipArchiveOutputStream)')": [
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', None)": [
                        118,
                        119
                    ]
                }
            }
        }
    },
    "f52ecf8657801852c55bc9118dd953a096388ab3": {
        "authored_data": "2016 Jun 25 20:40",
        "commit.message": "Format nits.",
        "commit.author.name": "Gary Gregory",
        "pcid": "b3c6bf720c1520276c927bb38b321d22a654590b",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/Lister.java": {
                "old": {
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        42,
                        54,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers#Lister', 'main(String)')": [
                        42,
                        54,
                        56
                    ]
                }
            }
        }
    },
    "b3c6bf720c1520276c927bb38b321d22a654590b": {
        "authored_data": "2016 Jun 25 20:38",
        "commit.message": "Remove Redundant specification of type (Java 7).",
        "commit.author.name": "Gary Gregory",
        "pcid": "f5a98515ef3b0b5a1318fb6c89cd57177e1e40a4",
        "changes": {
            "src/main/java/org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readLocalFileHeader')": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.arj#ArjArchiveInputStream', 'readLocalFileHeader')": [
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.cpio#CpioArchiveOutputStream', None)": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        826
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveEntry', None)": [
                        826
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        66,
                        69,
                        139
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getPath(DumpArchiveEntry)')": [
                        418
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', None)": [
                        66,
                        69,
                        139
                    ],
                    "('org.apache.commons.compress.archivers.dump#DumpArchiveInputStream', 'getPath(DumpArchiveEntry)')": [
                        418
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/Folder.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#Folder', 'getOrderedCoders')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#Folder', 'getOrderedCoders')": [
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZArchiveEntry', 'setContentMethods(Iterable)')": [
                        458
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZArchiveEntry', 'setContentMethods(Iterable)')": [
                        458
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        80
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        871
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', None)": [
                        80
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZFile', 'buildDecoderStack(Folder,long,int,SevenZArchiveEntry)')": [
                        871
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        47,
                        57
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'setupFileOutputStream')": [
                        283
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'reverse(Iterable)')": [
                        733
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', None)": [
                        47,
                        57
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'setupFileOutputStream')": [
                        283
                    ],
                    "('org.apache.commons.compress.archivers.sevenz#SevenZOutputFile', 'reverse(Iterable)')": [
                        733
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        82
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        454
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', None)": [
                        82
                    ],
                    "('org.apache.commons.compress.archivers.tar#TarArchiveInputStream', 'parsePaxHeaders(InputStream)')": [
                        454
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        278
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.tar#TarArchiveOutputStream', 'putArchiveEntry(ArchiveEntry)')": [
                        278
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ExtraFieldUtils.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        41
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', None)": [
                        41
                    ],
                    "('org.apache.commons.compress.archivers.zip#ExtraFieldUtils', 'parse(byte,boolean,UnparseableExtraField)')": [
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/PKWareExtraHeader.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', None)": [
                        219,
                        274
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#PKWareExtraHeader', None)": [
                        219,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ParallelScatterZipCreator', None)": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ParallelScatterZipCreator', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ScatterZipOutputStream', None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/Simple8BitZipEncoding.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#Simple8BitZipEncoding', None)": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtraFields(ZipExtraField)')": [
                        324
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'removeExtraField(ZipShort)')": [
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'setExtraFields(ZipExtraField)')": [
                        324
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveEntry', 'removeExtraField(ZipShort)')": [
                        472
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        174,
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipArchiveOutputStream', None)": [
                        174,
                        204
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipEncodingHelper.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipEncodingHelper', None)": [
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipFile.java": {
                "old": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        93,
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        540
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        990
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.archivers.zip#ZipFile', None)": [
                        93,
                        99
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'populateFromCentralDirectory')": [
                        540
                    ],
                    "('org.apache.commons.compress.archivers.zip#ZipFile', 'resolveLocalFileHeaderData(Map)')": [
                        990
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/archivers/zip/ZipMethod.java": {
                "old": {
                    "(None, None)": [
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        176
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSet.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        37
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'getChanges')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSet', None)": [
                        37
                    ],
                    "('org.apache.commons.compress.changes#ChangeSet', 'getChanges')": [
                        164
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetPerformer.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveEntryIterator,ArchiveOutputStream)')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetPerformer', 'perform(ArchiveEntryIterator,ArchiveOutputStream)')": [
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/changes/ChangeSetResults.java": {
                "old": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.changes#ChangeSetResults', None)": [
                        28,
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/FileNameUtil.java": {
                "old": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors#FileNameUtil', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/bzip2/BZip2Utils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.bzip2#BZip2Utils', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.gzip#GzipUtils', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/lzma/LZMAUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.lzma#LZMAUtils', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.lzma#LZMAUtils', None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/pack200/Pack200Utils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200Utils', 'normalize(File,File,Map)')": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.pack200#Pack200Utils', 'normalize(File,File,Map)')": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/compress/compressors/xz/XZUtils.java": {
                "old": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.compress.compressors.xz#XZUtils', None)": [
                        51
                    ]
                }
            }
        }
    }
}