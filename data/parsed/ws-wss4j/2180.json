{
    "abe3516429585848e9ea49588383f5283463a5e1": {
        "authored_data": "2007 Nov 24 02:47",
        "commit.message": "There are instances where a key is encrypted with another symm key and we need to be able to figureout when it is encrypted with an asymm key.\nThis fix adds a property in the processing results to flag those cases where the key is encrypted with an asymm key.\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "dcb3b2c0b3d56aba72ff5be418b7289d20d2ff41",
        "changes": {
            "src/org/apache/ws/security/WSSecurityEngineResult.java": {
                "old": {
                    "('org.apache.ws.security#WSSecurityEngineResult', None)": [
                        212
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSSecurityEngineResult', None)": [
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        221,
                        222,
                        229
                    ]
                }
            },
            "src/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        85
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', None)": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        91,
                        92
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        303
                    ]
                }
            },
            "src/org/apache/ws/security/util/WSSecurityUtil.java": {
                "old": {
                    "('org.apache.ws.security.util#WSSecurityUtil', 'findBodyElement(Document,SOAPConstants)')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.ws.security.util#WSSecurityUtil', 'findBodyElement(Document,SOAPConstants)')": [
                        165
                    ]
                }
            }
        }
    },
    "dcb3b2c0b3d56aba72ff5be418b7289d20d2ff41": {
        "authored_data": "2007 Nov 09 08:49",
        "commit.message": "A security context token can be used to encrypt/sign a msg ... made sure we support that.\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "4de2797bc5a6ebf4b2a4c4120c2a9a3507bd69fa",
        "changes": {
            "src/org/apache/ws/security/WSConstants.java": {
                "old": {
                    "(None, None)": [
                        417
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        417,
                        418
                    ],
                    "(None, None)": [
                        419
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncrypt.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        437,
                        440
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,KeyInfo,Vector)')": [
                        496,
                        502,
                        545
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecEncrypt', None)": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        749
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        444,
                        445,
                        446,
                        447,
                        448,
                        449
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,KeyInfo,Vector)')": [
                        504,
                        505,
                        554,
                        555
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'setCustomReferenceValue(String)')": [
                        750,
                        751
                    ],
                    "(None, None)": [
                        752
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncryptedKey.java": {
                "old": {
                    "(None, None)": [
                        508
                    ]
                }
            },
            "src/org/apache/ws/security/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getTokenElement(Document,WSDocInfo,CallbackHandler)')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getTokenElement(Document,WSDocInfo,CallbackHandler)')": [
                        165,
                        166,
                        167,
                        168
                    ]
                }
            }
        }
    },
    "4de2797bc5a6ebf4b2a4c4120c2a9a3507bd69fa": {
        "authored_data": "2007 Nov 08 19:01",
        "commit.message": "We don't need this now\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "d1bd0797a1f6ffd428a5a68b1ce41012ad704f05",
        "changes": {
            "src/org/apache/ws/security/WSConstants.java": {
                "old": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        64
                    ]
                }
            }
        }
    },
    "d1bd0797a1f6ffd428a5a68b1ce41012ad704f05": {
        "authored_data": "2007 Nov 08 00:43",
        "commit.message": "We should be able to set a custom reference type in the STR of a derived key\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "a2847f6efe4aeabd76eebfa015efe380e990ae3e",
        "changes": {
            "src/org/apache/ws/security/message/WSSecDerivedKeyBase.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecDerivedKeyBase', 'prepare(Document)')": [
                        207
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecDerivedKeyBase', None)": [
                        105,
                        106,
                        265
                    ],
                    "('org.apache.ws.security.message#WSSecDerivedKeyBase', 'prepare(Document)')": [
                        207,
                        210,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.ws.security.message#WSSecDerivedKeyBase', 'setCustomValueType(String)')": [
                        266,
                        267
                    ],
                    "(None, None)": [
                        268
                    ]
                }
            },
            "src/org/apache/ws/security/message/token/DerivedKeyToken.java": {
                "old": {
                    "('org.apache.ws.security.message.token#DerivedKeyToken', 'setOffset(int)')": [
                        282
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#DerivedKeyToken', 'setOffset(int)')": [
                        282
                    ]
                }
            }
        }
    },
    "a2847f6efe4aeabd76eebfa015efe380e990ae3e": {
        "authored_data": "2007 Nov 07 23:59",
        "commit.message": "EncryptedKeySHA1 reference uses the the base64 encoded value of the SHA-1 digest of encrypted bytes of the ephemeral key.\nUpdated wss4j to support this.\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "13d6e3dbb6f1d883539be9c2be9576f0f87dc661",
        "changes": {
            "src/org/apache/ws/security/WSSecurityEngineResult.java": {
                "new": {
                    "('org.apache.ws.security#WSSecurityEngineResult', None)": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        210,
                        216
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncrypt.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        438
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        43,
                        44,
                        737,
                        738,
                        739
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        440
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'getSHA1(byte)')": [
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        208,
                        210,
                        222
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        503
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        213,
                        215,
                        227
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'getEncryptedEphemeralKey')": [
                        504,
                        505
                    ],
                    "(None, None)": [
                        506
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecSignature.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        419
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecSignature', None)": [
                        111,
                        112,
                        835
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        421
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'setEncrKeySha1value(String)')": [
                        836,
                        837
                    ],
                    "(None, None)": [
                        838
                    ]
                }
            },
            "src/org/apache/ws/security/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'setKeyIdentifierEncKeySHA1(byte)')": [
                        302,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'setKeyIdentifierEncKeySHA1(String)')": [
                        302,
                        305
                    ]
                }
            },
            "src/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "(None, None)": [
                        24,
                        50,
                        51
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', None)": [
                        61
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        82
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        301
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        49,
                        530
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', None)": [
                        60,
                        61,
                        527
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        82,
                        83
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        301,
                        303
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'getEncryptedEphemeralKey')": [
                        528,
                        529
                    ]
                }
            }
        }
    },
    "13d6e3dbb6f1d883539be9c2be9576f0f87dc661": {
        "authored_data": "2007 Oct 26 08:40",
        "commit.message": "Applied patch in WSS-92. Thanks Nandana\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "3789a5f49a4e3560dee87bfb436a15268d896018",
        "changes": {
            "src/org/apache/ws/security/WSConstants.java": {
                "new": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                }
            },
            "src/org/apache/ws/security/WSPasswordCallback.java": {
                "new": {
                    "('org.apache.ws.security#WSPasswordCallback', None)": [
                        77
                    ],
                    "(None, None)": [
                        186
                    ]
                }
            },
            "src/org/apache/ws/security/action/EncryptionAction.java": {
                "new": {
                    "('org.apache.ws.security.action#EncryptionAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        49
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncrypt.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncrypt', None)": [
                        153
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        406
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,KeyInfo,Vector)')": [
                        444,
                        471,
                        472,
                        473,
                        474,
                        475
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        35,
                        38,
                        39
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', None)": [
                        66,
                        67,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        168,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'setUseKeyIdentifier(boolean)')": [
                        132,
                        133
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'getUseKeyIdentifier')": [
                        189,
                        190
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,Vector)')": [
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ],
                    "('org.apache.ws.security.message#WSSecEncrypt', 'doEncryption(Document,SecretKey,KeyInfo,Vector)')": [
                        481,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        188,
                        233
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        497,
                        498
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        189,
                        234
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'isCertSet')": [
                        495,
                        496
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecSignature.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        290
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'computeSignature')": [
                        668
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        290,
                        291,
                        416,
                        417,
                        418,
                        419
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'computeSignature')": [
                        673,
                        674
                    ]
                }
            },
            "src/org/apache/ws/security/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getTokenElement(Document,WSDocInfo,CallbackHandler)')": [
                        204,
                        209,
                        210
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', None)": [
                        59,
                        301,
                        317,
                        318,
                        319,
                        342
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getTokenElement(Document,WSDocInfo,CallbackHandler)')": [
                        205,
                        210,
                        211,
                        212
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'setKeyIdentifierEncKeySHA1(byte)')": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316
                    ]
                }
            },
            "src/org/apache/ws/security/processor/DerivedKeyTokenProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'extractSecret(WSDocInfo,DerivedKeyToken,CallbackHandler,Crypto)')": [
                        128,
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'extractSecret(WSDocInfo,DerivedKeyToken,CallbackHandler,Crypto)')": [
                        123,
                        124,
                        125,
                        133,
                        134,
                        135,
                        141,
                        142,
                        143
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'getSecret(CallbackHandler,String,String)')": [
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', None)": [
                        219,
                        220
                    ]
                }
            },
            "src/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "new": {
                    "(None, None)": [
                        50,
                        51,
                        525
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        324
                    ]
                }
            },
            "src/org/apache/ws/security/processor/ReferenceListProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'decryptDataRefEmbedded(Document,String,CallbackHandler,Crypto)')": [
                        151
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'getKeyFromReference(Element,String,Crypto,CallbackHandler)')": [
                        210,
                        256
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'handleReferenceList(Element,CallbackHandler,Crypto)')": [
                        106
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'decryptDataRefEmbedded(Document,String,CallbackHandler,Crypto)')": [
                        152,
                        167,
                        169,
                        170,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'getKeyFromSecurityTokenReference(Element,String,Crypto,CallbackHandler)')": [
                        225,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        235,
                        272
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        237,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289
                    ]
                }
            },
            "test/wssec/TestWSSecurityNew10.java": {
                "new": {
                    "('wssec#TestWSSecurityNew10', 'testEMBED_SECURITY_TOKEN_REF')": [
                        184
                    ]
                }
            },
            "test/wssec/TestWSSecurityNew9.java": {
                "new": {
                    "('wssec#TestWSSecurityNew9', 'testSigningEncryptionEmbedded')": [
                        164
                    ]
                }
            }
        }
    },
    "3789a5f49a4e3560dee87bfb436a15268d896018": {
        "authored_data": "2007 Oct 22 12:43",
        "commit.message": "Making sure we can use certificates with key usage restrictions to\ncreate the encrypted key\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "277974be1217c05fc306d6ae99554e2b75fc6ebb",
        "changes": {
            "src/org/apache/ws/security/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        191
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(byte,X509Certificate,Crypto)')": [
                        191
                    ]
                }
            }
        }
    },
    "277974be1217c05fc306d6ae99554e2b75fc6ebb": {
        "authored_data": "2007 Oct 05 11:29",
        "commit.message": "Applied Nandana's patch for WSS-89, Thanks Nandana\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "13d049a2fb15c584c184046929e181a099d6c555",
        "changes": {
            "src/org/apache/ws/security/WSConstants.java": {
                "old": {
                    "(None, None)": [
                        393
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                }
            },
            "src/org/apache/ws/security/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'setSAMLKeyIdentifier(String)')": [
                        293,
                        294,
                        295
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', None)": [
                        297,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getFirstElement')": [
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getTokenElement(Document,WSDocInfo,CallbackHandler)')": [
                        204,
                        206,
                        207,
                        208,
                        209,
                        210
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'setSAMLKeyIdentifier(String)')": [
                        299,
                        300,
                        301
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', None)": [
                        303,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        339,
                        340
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getFirstElement')": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        238
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        238,
                        239,
                        240,
                        241,
                        242,
                        243
                    ]
                }
            }
        }
    },
    "13d049a2fb15c584c184046929e181a099d6c555": {
        "authored_data": "2007 Sep 06 14:15",
        "commit.message": "Improved handling of STR in a derived key token\nThere are cases where the STR contains a KeyIdentifier\n\n<c:DerivedKeyToken xmlns:c=\"http://schemas.xmlsoap.org/ws/2005/02/sc\" u:Id=\"_9\">\n\t<o:SecurityTokenReference>\n\t\t<o:KeyIdentifier ValueType=\"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID\">uuid:12aa0c64-d7bb-4394-a0b5-a7410ba975d6</o:KeyIdentifier>\n\t</o:SecurityTokenReference>\n\t<c:Offset>0</c:Offset>\n\t<c:Length>24</c:Length>\n\t<c:Nonce>GchqApY/EE3zi9WVVUIIzg==</c:Nonce>\n</c:DerivedKeyToken>\n\n\n\n",
        "commit.author.name": "Ruchith Udayanga Fernando",
        "pcid": "8130f40a4641e82c7e453aa961ef4280563d68ef",
        "changes": {
            "src/org/apache/ws/security/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getKeyIdentifier(Crypto)')": [
                        347,
                        348
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getKeyIdentifier(Crypto)')": [
                        347,
                        348
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', None)": [
                        354,
                        366,
                        367,
                        375,
                        376,
                        377
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getKeyIdentifierValue')": [
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.ws.security.message.token#SecurityTokenReference', 'getKeyIdentifierValueType')": [
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374
                    ]
                }
            },
            "src/org/apache/ws/security/processor/DerivedKeyTokenProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        65
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'extractSecret(WSDocInfo,DerivedKeyToken,CallbackHandler)')": [
                        113,
                        117,
                        118,
                        119,
                        120,
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        67
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'extractSecret(WSDocInfo,DerivedKeyToken,CallbackHandler,Crypto)')": [
                        115,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        135,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        371
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381
                    ]
                }
            }
        }
    },
    "8130f40a4641e82c7e453aa961ef4280563d68ef": {
        "authored_data": "2007 Aug 17 11:40",
        "commit.message": "More flexible handling of username token signature action. Now the\nsignature may contain the username token that is used to create the\nsignature key.\n",
        "commit.author.name": "Werner Dittmann",
        "pcid": "bec11aaad54cf299616f39befb67a89c42c38f5a",
        "changes": {
            "src/org/apache/ws/security/action/UsernameTokenSignedAction.java": {
                "old": {
                    "('org.apache.ws.security.action#UsernameTokenSignedAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        59,
                        60,
                        61,
                        66,
                        67,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        31,
                        32,
                        35
                    ],
                    "('org.apache.ws.security.action#UsernameTokenSignedAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        111
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecSignature.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecSignature', 'build(Document,Crypto,WSSecHeader)')": [
                        713,
                        714
                    ]
                }
            }
        }
    }
}