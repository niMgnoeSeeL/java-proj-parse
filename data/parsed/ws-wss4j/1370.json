{
    "bf52ea1c10500972775d21f0bcd4b4eca06f0253": {
        "authored_data": "2013 Mar 08 18:55",
        "commit.message": "Add method to get a list of the various algsuite elements that are known\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "f5e7ecfb7fc7e7b6beea1f2c3dff1957816d6cf0",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/model/AlgorithmSuite.java": {
                "new": {
                    "('org.apache.wss4j.policy.model#AlgorithmSuite', None)": [
                        516
                    ],
                    "('org.apache.wss4j.policy.model#AlgorithmSuite', 'getSupportedAlgorithmSuiteNames')": [
                        517,
                        518
                    ],
                    "(None, None)": [
                        519,
                        521
                    ]
                }
            }
        }
    },
    "f5e7ecfb7fc7e7b6beea1f2c3dff1957816d6cf0": {
        "authored_data": "2013 Mar 08 16:33",
        "commit.message": "Optimize the normalization to hold onto the normalized form to avoid the costly normalization being done over and over.\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "23cc06883a6e20aeb0b025ec4b73f6a3ab72bd42",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/model/AbstractSecurityAssertion.java": {
                "old": {
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', None)": [
                        40,
                        78,
                        79,
                        82,
                        83
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'setNormalized(boolean)')": [
                        76,
                        77
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'isNormalized')": [
                        80,
                        81
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'normalize')": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'normalize(Policy)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'serialize(XMLStreamWriter,Policy)')": [
                        148
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'clone(Policy)')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        102,
                        103
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'normalize')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        101
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'isNormalized')": [
                        104,
                        105
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'normalize(Policy)')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        144
                    ],
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'serialize(XMLStreamWriter,Policy)')": [
                        154
                    ]
                }
            }
        }
    },
    "23cc06883a6e20aeb0b025ec4b73f6a3ab72bd42": {
        "authored_data": "2013 Mar 08 15:18",
        "commit.message": "Relax some checks a little to start working on getting CXF tests to pass \"as is\"\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "5873220f3bba42642c1867c008a029b7caea25c6",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/builders/HttpsTokenBuilder.java": {
                "old": {
                    "('org.apache.wss4j.policy.builders#HttpsTokenBuilder', 'build(Element,AssertionBuilderFactory)')": [
                        56,
                        58
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.builders#HttpsTokenBuilder', 'build(Element,AssertionBuilderFactory)')": [
                        55,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/model/AbstractBinding.java": {
                "old": {
                    "('org.apache.wss4j.policy.model#AbstractBinding', 'parseNestedBindingPolicy(Policy,AbstractBinding)')": [
                        102
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.wss4j.policy.model#AbstractBinding', 'parseNestedBindingPolicy(Policy,AbstractBinding)')": [
                        103
                    ]
                }
            }
        }
    },
    "d70104e833c4f954325226dc2402d018c7c00763": {
        "authored_data": "2013 Mar 08 11:06",
        "commit.message": "Removing some deprecated stuff\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "7abd5fdca58c68f187f438cb6950c243df5fccff",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CertificateStore.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#CertificateStore', None)": [
                        139,
                        140,
                        141,
                        142,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.wss4j.common.crypto#CertificateStore', 'verifyTrust(X509Certificate)')": [
                        143,
                        144
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Crypto.java": {
                "old": {
                    "(None, None)": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', None)": [
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        772,
                        773,
                        774
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'verifyTrust(X509Certificate)')": [
                        775,
                        776
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/saml/builder/SAML2ComponentBuilder.java": {
                "old": {
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', None)": [
                        335,
                        336,
                        337,
                        338,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createAttribute(String,String,List)')": [
                        339,
                        340
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createSubjectConfirmationData(String,String,DateTime,KeyInfoBean)')": [
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createAttribute(String,String)')": [
                        597,
                        598
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/WSDocInfo.java": {
                "old": {
                    "('org.apache.wss4j.dom#WSDocInfo', None)": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        204,
                        205,
                        206
                    ],
                    "('org.apache.wss4j.dom#WSDocInfo', 'addProtectionElement(Element)')": [
                        189,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.wss4j.dom#WSDocInfo', 'getProtectionElement(String)')": [
                        202,
                        203
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncrypt.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', None)": [
                        315,
                        316,
                        317,
                        318,
                        319,
                        323,
                        324,
                        325,
                        326,
                        327
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'encryptForInternalRef(Element,List)')": [
                        320,
                        321,
                        322
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'encryptForExternalRef(Element,List)')": [
                        328,
                        329,
                        330
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/KerberosTokenValidator.java": {
                "old": {
                    "('org.apache.wss4j.dom.validate#KerberosTokenValidator', None)": [
                        67,
                        68,
                        69,
                        70,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.wss4j.dom.validate#KerberosTokenValidator', 'getJaasLoginModuleName')": [
                        71,
                        72
                    ],
                    "('org.apache.wss4j.dom.validate#KerberosTokenValidator', 'setJaasLoginModuleName(String)')": [
                        80,
                        81
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/SignatureTrustValidator.java": {
                "old": {
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', None)": [
                        116,
                        120,
                        121,
                        122,
                        126,
                        127,
                        274,
                        280,
                        281,
                        282,
                        289,
                        290
                    ],
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto)')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto,boolean)')": [
                        123,
                        124,
                        125
                    ],
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto)')": [
                        275,
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto,boolean)')": [
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ]
                }
            }
        }
    },
    "7abd5fdca58c68f187f438cb6950c243df5fccff": {
        "authored_data": "2013 Mar 07 13:47",
        "commit.message": "Fixed some typos in the model\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "6c9b390252c61e0bc1766aacf9486ca45f943025",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/SP11Constants.java": {
                "old": {
                    "('org.apache.wss4j.policy#SP11Constants', None)": [
                        236,
                        308,
                        309
                    ],
                    "('org.apache.wss4j.policy#SP11Constants', 'getRequireInternalReference')": [
                        434
                    ],
                    "('org.apache.wss4j.policy#SP11Constants', 'getRequireKeyIdentifierReference')": [
                        509
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy#SP11Constants', None)": [
                        236,
                        308,
                        309
                    ],
                    "('org.apache.wss4j.policy#SP11Constants', 'getRequireInternalReference')": [
                        434
                    ],
                    "('org.apache.wss4j.policy#SP11Constants', 'getRequireKeyIdentifierReference')": [
                        509
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/SP12Constants.java": {
                "old": {
                    "('org.apache.wss4j.policy#SP12Constants', None)": [
                        280,
                        367,
                        368
                    ],
                    "('org.apache.wss4j.policy#SP12Constants', 'getRequireInternalReference')": [
                        503
                    ],
                    "('org.apache.wss4j.policy#SP12Constants', 'getRequireKeyIdentifierReference')": [
                        578
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy#SP12Constants', None)": [
                        280,
                        367,
                        368
                    ],
                    "('org.apache.wss4j.policy#SP12Constants', 'getRequireInternalReference')": [
                        503
                    ],
                    "('org.apache.wss4j.policy#SP12Constants', 'getRequireKeyIdentifierReference')": [
                        578
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/SPConstants.java": {
                "old": {
                    "('org.apache.wss4j.policy#SPConstants', None)": [
                        464
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy#SPConstants', None)": [
                        464
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/model/SupportingTokens.java": {
                "new": {
                    "('org.apache.wss4j.policy.model#SupportingTokens', None)": [
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.wss4j.policy.model#SupportingTokens', 'isEndorsing')": [
                        205,
                        206,
                        207,
                        208,
                        209,
                        210
                    ],
                    "(None, None)": [
                        211
                    ]
                }
            }
        }
    },
    "6c9b390252c61e0bc1766aacf9486ca45f943025": {
        "authored_data": "2013 Mar 07 11:17",
        "commit.message": "Avoid a NPE in CryptoFactory on a null Properties object\n\n\nConflicts:\n\tws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "5a858babb088dabb7ab95de490bfb5ed0421e898",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java": {
                "new": {
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties,ClassLoader)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            }
        }
    },
    "5a858babb088dabb7ab95de490bfb5ed0421e898": {
        "authored_data": "2013 Mar 06 16:49",
        "commit.message": "Adding some stuff required for CXF port\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "a2daf3daf80a958b62221121e4d2c7b0b17ca744",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/builders/TransportBindingBuilder.java": {
                "old": {
                    "('org.apache.wss4j.policy.builders#TransportBindingBuilder', 'build(Element,AssertionBuilderFactory)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.builders#TransportBindingBuilder', 'build(Element,AssertionBuilderFactory)')": [
                        46
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/model/AbstractSecurityAssertion.java": {
                "old": {
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'equal(PolicyComponent)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.model#AbstractSecurityAssertion', 'equal(PolicyComponent)')": [
                        73
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/model/SupportingTokens.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.wss4j.policy.model#SupportingTokens', None)": [
                        38,
                        39,
                        40,
                        50,
                        51,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.wss4j.policy.model#SupportingTokens', 'getPolicy')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.model#SupportingTokens', None)": [
                        37,
                        38,
                        48,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.wss4j.policy.model#SupportingTokens', 'isEncryptedToken')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "(None, None)": [
                        200
                    ]
                }
            }
        }
    },
    "e7995a1336ef924c24739da1419bc9c237667f2a": {
        "authored_data": "2013 Feb 28 06:28",
        "commit.message": "Return the default Merlin instance without class loading\n\n\nConflicts:\n\tws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "eed0dbe19a9a3d189f1a0e14bc307f0ef1c17353",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#CryptoFactory', None)": [
                        40,
                        41
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties,ClassLoader)')": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties,ClassLoader)')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ]
                }
            }
        }
    }
}