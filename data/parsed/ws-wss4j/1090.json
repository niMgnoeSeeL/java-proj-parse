{
    "e20d9b649eb297bcba8a80211b4a563b09d01964": {
        "authored_data": "2013 Nov 29 16:47",
        "commit.message": "Only create an EncryptedHeader if the part is not \"Content\"\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "a2ab05557ee42f362b7e2a67d5bbc804ccc2fc7c",
        "changes": {
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/EncryptOutputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', None)": [
                        298
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ],
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', None)": [
                        299,
                        300
                    ]
                }
            }
        }
    },
    "a2ab05557ee42f362b7e2a67d5bbc804ccc2fc7c": {
        "authored_data": "2013 Nov 27 12:01",
        "commit.message": "Avoid NPE if a signed Assertion does not have a KeyInfo Element\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "8cc138d003d6544d617468c531c57c91df5cfdb4",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/saml/SamlAssertionWrapper.java": {
                "new": {
                    "('org.apache.wss4j.common.saml#SamlAssertionWrapper', 'verifySignature(SAMLKeyInfoProcessor,Crypto)')": [
                        545,
                        546,
                        547,
                        548,
                        549,
                        550
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/SAMLTokenProcessor.java": {
                "new": {
                    "('org.apache.wss4j.dom.processor#SAMLTokenProcessor', 'handleSAMLToken(Element,RequestData,Validator,WSDocInfo)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ]
                }
            }
        }
    },
    "8cc138d003d6544d617468c531c57c91df5cfdb4": {
        "authored_data": "2013 Nov 26 16:43",
        "commit.message": "Resetting an EhCache Element before adding to the cache to make sure the last access time is set (see CXF-5420)\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "3d7479309f70fa8804949f77d8221a48d13e8761",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/cache/EHCacheReplayCache.java": {
                "old": {
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', 'add(String,long)')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', 'add(String,long)')": [
                        103,
                        104,
                        105
                    ]
                }
            }
        }
    },
    "3d7479309f70fa8804949f77d8221a48d13e8761": {
        "authored_data": "2013 Nov 25 16:24",
        "commit.message": "[WSS-485] - Patch applied\n - Thanks to Andrei Shakirin for the patch\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "52b1d8e9bfee4ad3006926f555f288f87816aa8d",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoType.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#CryptoType', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#CryptoType', None)": [
                        40,
                        49,
                        155,
                        156,
                        157,
                        158,
                        159,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoType', 'setEndpoint(String)')": [
                        160,
                        161
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoType', 'getEndpoint')": [
                        168,
                        169
                    ],
                    "(None, None)": [
                        170
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/WSConstants.java": {
                "new": {
                    "('org.apache.wss4j.dom#WSConstants', None)": [
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncrypt.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'prepare(Document,Crypto)')": [
                        154,
                        155
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'prepare(Document,Crypto)')": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ]
                }
            }
        }
    },
    "52b1d8e9bfee4ad3006926f555f288f87816aa8d": {
        "authored_data": "2013 Nov 25 15:34",
        "commit.message": "[WSS-430] - SecurityPolicy validation support for encrypted/signed attachments\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "59c5d46b91aafa076a074ae0fa4fd1d230005689",
        "changes": {
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/PolicyEnforcer.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', None)": [
                        131
                    ],
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', 'getAssertableForAssertion(AbstractSecurityAssertion)')": [
                        263,
                        270
                    ],
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', 'verifyPolicyAfterOperationSecurityEvent')": [
                        517
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', None)": [
                        129,
                        132,
                        136
                    ],
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', 'getAssertableForAssertion(AbstractSecurityAssertion)')": [
                        265,
                        272
                    ],
                    "('org.apache.wss4j.policy.stax#PolicyEnforcer', 'verifyPolicyAfterOperationSecurityEvent')": [
                        519
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/PolicyEnforcerFactory.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax#PolicyEnforcerFactory', 'newPolicyEnforcer(String,boolean,String)')": [
                        427,
                        428
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax#PolicyEnforcerFactory', None)": [
                        424
                    ],
                    "('org.apache.wss4j.policy.stax#PolicyEnforcerFactory', 'newPolicyEnforcer(String,boolean,String,int)')": [
                        428,
                        429,
                        430
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/EncryptedPartsAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedPartsAssertionState', None)": [
                        43
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        57,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        118
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedPartsAssertionState', None)": [
                        43,
                        44,
                        45,
                        46,
                        48,
                        49,
                        51,
                        111,
                        112
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedPartsAssertionState', 'isAsserted')": [
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/OnlySignEntireHeadersAndBodyAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#OnlySignEntireHeadersAndBodyAssertionState', 'assertEvent(SecurityEvent)')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#OnlySignEntireHeadersAndBodyAssertionState', 'assertEvent(SecurityEvent)')": [
                        57
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/SignedPartsAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', None)": [
                        43
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        57,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        130
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', None)": [
                        43,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        52,
                        123,
                        124
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', 'isAsserted')": [
                        125,
                        126,
                        127,
                        128,
                        129
                    ]
                }
            },
            "ws-security-policy-stax/src/test/java/org/apache/wss4j/policy/stax/test/AbstractPolicyTestBase.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.test#AbstractPolicyTestBase', 'buildAndStartPolicyEngine(String,boolean,List)')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.test#AbstractPolicyTestBase', 'buildAndStartPolicyEngine(String,boolean,List)')": [
                        102
                    ]
                }
            },
            "ws-security-policy-stax/src/test/java/org/apache/wss4j/policy/stax/test/VulnerabliltyVectorsTest.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.test#VulnerabliltyVectorsTest', 'testSOAPActionSpoofing')": [
                        78
                    ],
                    "('org.apache.wss4j.policy.stax.test#VulnerabliltyVectorsTest', 'testSignedBodyRelocationToHeader')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.test#VulnerabliltyVectorsTest', 'testSOAPActionSpoofing')": [
                        78
                    ],
                    "('org.apache.wss4j.policy.stax.test#VulnerabliltyVectorsTest', 'testSignedBodyRelocationToHeader')": [
                        130
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/DecryptInputProcessor.java": {
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#DecryptInputProcessor', 'doFinal(InputProcessorChain)')": [
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/WSSSignatureReferenceVerifyInputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'verifyExternalReference(InputProcessorChain,InputStream,ReferenceType)')": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'verifyExternalReference(InputProcessorChain,InputStream,ReferenceType)')": [
                        92,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ]
                }
            }
        }
    },
    "59c5d46b91aafa076a074ae0fa4fd1d230005689": {
        "authored_data": "2013 Nov 24 11:36",
        "commit.message": "WSS-484 - Streaming code can't process a Key reference pointing to an EncryptedData element\n\n",
        "commit.author.name": "Marc Giger",
        "pcid": "4b5cafb17ef88efe51d8afbebf8759e927f08cf5",
        "changes": {
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/EncryptedDataInputHandler.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        37,
                        40
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#EncryptedDataInputHandler', 'handle(InputProcessorChain,XMLSecurityProperties,Deque,Integer)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        32,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#EncryptedDataInputHandler', 'handle(InputProcessorChain,XMLSecurityProperties,Deque,Integer)')": [
                        47,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/SecurityHeaderInputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.input#SecurityHeaderInputProcessor', None)": [
                        57
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#SecurityHeaderInputProcessor', 'processNextEvent(InputProcessorChain)')": [
                        88,
                        112,
                        129,
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#SecurityHeaderInputProcessor', 'processNextEvent(InputProcessorChain)')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/SignatureEncryptionTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        40,
                        42,
                        43,
                        44,
                        60,
                        62,
                        63,
                        64,
                        314,
                        315
                    ],
                    "('org.apache.wss4j.stax.test#SignatureEncryptionTest', None)": [
                        266
                    ],
                    "('org.apache.wss4j.stax.test#SignatureEncryptionTest', 'testEncryptedDataTokenSecurityHeaderWithoutReferenceInbound')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313
                    ]
                }
            }
        }
    },
    "23e22bf021bde197d7ff818a17ea0e1581f5fe06": {
        "authored_data": "2013 Nov 22 18:55",
        "commit.message": "call to doFinal() should usually be the first statement in the input-processors doFinal() method so that\nthe processor order will be adhered.\n\n",
        "commit.author.name": "Marc Giger",
        "pcid": "95cce2380b1c7e7b5677ec196d02930de457c9ed",
        "changes": {
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/PolicyInputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax#PolicyInputProcessor', 'doFinal(InputProcessorChain)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax#PolicyInputProcessor', 'doFinal(InputProcessorChain)')": [
                        148,
                        149
                    ]
                }
            }
        }
    },
    "95cce2380b1c7e7b5677ec196d02930de457c9ed": {
        "authored_data": "2013 Nov 22 12:21",
        "commit.message": "[WSS-482] - EncryptedElements + SignedElements validation not working\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "372c78a32d9deecbbc07409ef1eefc87f7ac4bf5",
        "changes": {
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/EncryptedElementsAssertionState.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedElementsAssertionState', 'getSecurityEventType')": [
                        60
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedElementsAssertionState', 'assertEvent(SecurityEvent)')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        35
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedElementsAssertionState', 'getSecurityEventType')": [
                        61,
                        62
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#EncryptedElementsAssertionState', 'assertEvent(SecurityEvent)')": [
                        68,
                        69
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/SignedElementsAssertionState.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedElementsAssertionState', 'getSecurityEventType')": [
                        61
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedElementsAssertionState', 'assertEvent(SecurityEvent)')": [
                        71,
                        76,
                        77,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        32,
                        35
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedElementsAssertionState', 'getSecurityEventType')": [
                        63,
                        64
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedElementsAssertionState', 'assertEvent(SecurityEvent)')": [
                        74,
                        79,
                        80,
                        86
                    ]
                }
            }
        }
    },
    "372c78a32d9deecbbc07409ef1eefc87f7ac4bf5": {
        "authored_data": "2013 Nov 20 11:12",
        "commit.message": "Make Derived Principal Serializable\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "841e1ebf4a2b4a9af449cbc7c93e5f30e1666800",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/principal/WSDerivedKeyTokenPrincipal.java": {
                "old": {
                    "('org.apache.wss4j.common.principal#WSDerivedKeyTokenPrincipal', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.principal#WSDerivedKeyTokenPrincipal', None)": [
                        30,
                        32,
                        33
                    ]
                }
            }
        }
    }
}