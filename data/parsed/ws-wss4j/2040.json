{
    "3cf84c6bbafcdd59daccad7d5f024699e8859223": {
        "authored_data": "2009 Mar 23 18:34",
        "commit.message": "Some thread safety fixes.   Don't use hashCode to store documents.\n\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "6d71d094531925e40772188706d762d4121c735f",
        "changes": {
            "src/org/apache/ws/security/WSDocInfo.java": {
                "old": {
                    "('org.apache.ws.security#WSDocInfo', None)": [
                        42,
                        48,
                        49,
                        137
                    ],
                    "('org.apache.ws.security#WSDocInfo', 'getHash')": [
                        139,
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37
                    ],
                    "('org.apache.ws.security#WSDocInfo', None)": [
                        44,
                        50,
                        51,
                        139
                    ],
                    "('org.apache.ws.security#WSDocInfo', 'getDocument')": [
                        141,
                        142
                    ]
                }
            },
            "src/org/apache/ws/security/WSDocInfoStore.java": {
                "old": {
                    "('org.apache.ws.security#WSDocInfoStore', 'lookup(int)')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'store(WSDocInfo)')": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', None)": [
                        48,
                        49,
                        55
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'delete(int)')": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'delete(WSDocInfo)')": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'lookup(Document)')": [
                        39,
                        40
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'store(WSDocInfo)')": [
                        43,
                        44
                    ],
                    "('org.apache.ws.security#WSDocInfoStore', 'delete(WSDocInfo)')": [
                        48
                    ]
                }
            },
            "src/org/apache/ws/security/WSSecurityEngine.java": {
                "old": {
                    "('org.apache.ws.security#WSSecurityEngine', 'processSecurityHeader(Element,CallbackHandler,Crypto,Crypto)')": [
                        301
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSSecurityEngine', 'processSecurityHeader(Element,CallbackHandler,Crypto,Crypto)')": [
                        301
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecDKSign.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecDKSign', 'prepare(Document,WSSecHeader)')": [
                        115
                    ],
                    "('org.apache.ws.security.message#WSSecDKSign', 'computeSignature')": [
                        414,
                        427
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecDKSign', 'prepare(Document,WSSecHeader)')": [
                        115
                    ],
                    "('org.apache.ws.security.message#WSSecDKSign', 'computeSignature')": [
                        414,
                        427,
                        428
                    ],
                    "('org.apache.ws.security.message#WSSecDKSign', None)": [
                        429
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSecSignature.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        292
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'computeSignature')": [
                        694,
                        719
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSecSignature', 'prepare(Document,Crypto,WSSecHeader)')": [
                        292
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', 'computeSignature')": [
                        694,
                        719,
                        720
                    ],
                    "('org.apache.ws.security.message#WSSecSignature', None)": [
                        721
                    ]
                }
            },
            "src/org/apache/ws/security/message/WSSignEnvelope.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSignEnvelope', 'build(Document,Crypto)')": [
                        243,
                        545,
                        560
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message#WSSignEnvelope', 'build(Document,Crypto)')": [
                        243,
                        545,
                        560,
                        561,
                        562
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        89,
                        100,
                        105
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,List,byte,CallbackHandler)')": [
                        181,
                        230,
                        231,
                        236
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        89,
                        100,
                        101,
                        106,
                        107,
                        108
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,List,byte,CallbackHandler,WSDocInfo)')": [
                        184,
                        185
                    ]
                }
            },
            "src/org/apache/ws/security/saml/WSSecSignatureSAML.java": {
                "old": {
                    "('org.apache.ws.security.saml#WSSecSignatureSAML', 'prepare(Document,Crypto,SAMLAssertion,Crypto,String,String,WSSecHeader)')": [
                        236
                    ],
                    "('org.apache.ws.security.saml#WSSecSignatureSAML', 'computeSignature')": [
                        597,
                        615
                    ]
                },
                "new": {
                    "('org.apache.ws.security.saml#WSSecSignatureSAML', 'prepare(Document,Crypto,SAMLAssertion,Crypto,String,String,WSSecHeader)')": [
                        236
                    ],
                    "('org.apache.ws.security.saml#WSSecSignatureSAML', 'computeSignature')": [
                        597,
                        615,
                        616
                    ],
                    "(None, None)": [
                        617
                    ]
                }
            },
            "src/org/apache/ws/security/saml/WSSignSAMLEnvelope.java": {
                "old": {
                    "('org.apache.ws.security.saml#WSSignSAMLEnvelope', 'build(Document,Crypto,SAMLAssertion,Crypto,String,String)')": [
                        160,
                        421,
                        438
                    ]
                },
                "new": {
                    "('org.apache.ws.security.saml#WSSignSAMLEnvelope', 'build(Document,Crypto,SAMLAssertion,Crypto,String,String)')": [
                        160,
                        421,
                        438,
                        439,
                        440
                    ]
                }
            },
            "src/org/apache/ws/security/transform/STRTransform.java": {
                "old": {
                    "('org.apache.ws.security.transform#STRTransform', None)": [
                        66
                    ],
                    "('org.apache.ws.security.transform#STRTransform', 'enginePerformTransform(XMLSignatureInput)')": [
                        97,
                        109,
                        110,
                        111,
                        112,
                        113,
                        119,
                        134,
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.ws.security.transform#STRTransform', None)": [
                        67
                    ],
                    "('org.apache.ws.security.transform#STRTransform', 'enginePerformTransform(XMLSignatureInput,Transform)')": [
                        98,
                        99,
                        111,
                        112,
                        118,
                        133,
                        137
                    ]
                }
            }
        }
    },
    "6d71d094531925e40772188706d762d4121c735f": {
        "authored_data": "2009 Mar 23 16:03",
        "commit.message": "Fixed a failing test because of an out-of-date cert.\n\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "242d9fe3436542cf47e9166f0592d0c9bab87162",
        "changes": {
            "test/wssec/TestWSSecurityKerberosTokenProfile.java": {
                "old": {
                    "('wssec#TestWSSecurityKerberosTokenProfile', None)": [
                        58
                    ]
                },
                "new": {
                    "('wssec#TestWSSecurityKerberosTokenProfile', None)": [
                        58
                    ]
                }
            },
            "test/wssec/TestWSSecurityWSS86.java": {
                "old": {
                    "(None, None)": [
                        58
                    ],
                    "('wssec#TestWSSecurityWSS86', 'testInterop')": [
                        187,
                        189,
                        190,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        58
                    ],
                    "('wssec#TestWSSecurityWSS86', 'testInterop')": [
                        184,
                        185,
                        189,
                        191,
                        192,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ]
                }
            }
        }
    },
    "892be286841be9628d08bf0f160190f5db9d2759": {
        "authored_data": "2009 Mar 07 03:48",
        "commit.message": "Add DKT to results\n\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "4b30862ef706c15af7dbc4c11282da34d1c44d52",
        "changes": {
            "src/org/apache/ws/security/processor/DerivedKeyTokenProcessor.java": {
                "new": {
                    "(None, None)": [
                        20,
                        24
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.ws.security.processor#DerivedKeyTokenProcessor', None)": [
                        94,
                        95
                    ]
                }
            }
        }
    },
    "4b30862ef706c15af7dbc4c11282da34d1c44d52": {
        "authored_data": "2009 Mar 06 21:45",
        "commit.message": "While decrypting and signature verification, record the qnames of elements so policy validation can be done later\n\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "1dadd4e9088bc217769b294249c93844a5bc15b9",
        "changes": {
            "src/org/apache/ws/security/WSDataRef.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/org/apache/ws/security/WSSecurityEngineResult.java": {
                "old": {
                    "('org.apache.ws.security#WSSecurityEngineResult', None)": [
                        205
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSSecurityEngineResult', None)": [
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244
                    ]
                }
            },
            "src/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        95
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        245
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', None)": [
                        67
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        96,
                        97
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleEncryptedKey(Element,CallbackHandler,Crypto,PrivateKey)')": [
                        227,
                        248
                    ]
                }
            },
            "src/org/apache/ws/security/processor/ReferenceListProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'handleReferenceList(Element,CallbackHandler,Crypto)')": [
                        113
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', None)": [
                        381
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'newNodes(java,java)')": [
                        385,
                        386,
                        405
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'handleReferenceList(Element,CallbackHandler,Crypto)')": [
                        113
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'decryptDataRefEmbedded(Document,String,WSDataRef,CallbackHandler,Crypto)')": [
                        188
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', None)": [
                        382
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'newNodes(java,java)')": [
                        386,
                        387,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        420
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        90,
                        97
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        67
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        92,
                        99,
                        100
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,List,byte,CallbackHandler)')": [
                        179,
                        458,
                        459,
                        460,
                        461
                    ]
                }
            }
        }
    },
    "1dadd4e9088bc217769b294249c93844a5bc15b9": {
        "authored_data": "2009 Mar 06 18:12",
        "commit.message": "If the callback handler doesn't do anything to actually verify it, don't accept it.\n\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "33e252270019f717a5295517bbeb1408af25e775",
        "changes": {
            "src/org/apache/ws/security/PublicKeyCallback.java": {
                "new": {
                    "('org.apache.ws.security#PublicKeyCallback', None)": [
                        33,
                        45,
                        46,
                        49,
                        50
                    ],
                    "('org.apache.ws.security#PublicKeyCallback', 'setVerified(boolean)')": [
                        47,
                        48
                    ],
                    "('org.apache.ws.security#PublicKeyCallback', 'isVerified')": [
                        51,
                        52
                    ],
                    "('org.apache.ws.security#PublicKeyCallback', 'verifyTrust(java)')": [
                        92
                    ]
                }
            },
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        401,
                        402,
                        403,
                        404,
                        405
                    ]
                }
            }
        }
    },
    "33e252270019f717a5295517bbeb1408af25e775": {
        "authored_data": "2009 Mar 06 17:58",
        "commit.message": "[WSS-156] - Better testing + added a \"PublicKeyCallback\" for trust verification of sorts.\n\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "744bf635a983a60b1dbae2bc0032e31f564b997d",
        "changes": {
            "src/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        425
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        93
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,Crypto,X509Certificate,Set,Set,byte,CallbackHandler)')": [
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        442
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', None)": [
                        537
                    ]
                }
            },
            "src/org/apache/ws/security/processor/UsernameTokenProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#UsernameTokenProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#UsernameTokenProcessor', 'handleToken(Element,Crypto,Crypto,CallbackHandler,WSDocInfo,Vector,WSSConfig)')": [
                        55,
                        56,
                        57,
                        58
                    ]
                }
            },
            "test/wssec/SignatureKeyValueTest.java": {
                "old": {
                    "(None, None)": [
                        32,
                        45,
                        46,
                        47
                    ],
                    "('wssec#SignatureKeyValueTest', None)": [
                        150,
                        195
                    ],
                    "('wssec#SignatureKeyValueTest', 'handle(Callback)')": [
                        196,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        42,
                        43,
                        44,
                        45,
                        246
                    ],
                    "('wssec#SignatureKeyValueTest', None)": [
                        72,
                        84,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        231
                    ],
                    "('wssec#SignatureKeyValueTest', 'testBadRSAKeyValue')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ],
                    "('wssec#SignatureKeyValueTest', 'handle(Callback)')": [
                        232,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240
                    ]
                }
            },
            "test/wssec/TestWSSecurityWSS86.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                }
            }
        }
    },
    "744bf635a983a60b1dbae2bc0032e31f564b997d": {
        "authored_data": "2009 Mar 05 16:00",
        "commit.message": "[WSS-168] - A fix for different issuer DN formats breaking decryption/verification\n - This fix introduces a compile-time dependency on BouncyCastle.\n - The idea is to convert the issuer DN to a java X500Principal object first. \n - This is to ensure interop with a DN constructed from .NET, where e.g. it uses \"S\" instead of \"ST\".\n - Then convert it to a BouncyCastle X509Name, which will order the attributes of the DN in a \n   particular way (see WSS-168). \n - If the conversion to an X500Principal object fails (e.g. if the DN contains \"E\" instead of \n  \"EMAILADDRESS\"), then fall back on a direct conversion to a BC X509Name.\n\n\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "52bf404fd36be47c658b42ba384d20fd181ba5dd",
        "changes": {
            "src/org/apache/ws/security/WSSConfig.java": {
                "old": {
                    "('org.apache.ws.security#WSSConfig', 'loadProvider(String,String)')": [
                        501
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSSConfig', 'loadProvider(String,String)')": [
                        501
                    ]
                }
            },
            "src/org/apache/ws/security/components/crypto/BouncyCastle.java": {
                "old": {
                    "('org.apache.ws.security.components.crypto#BouncyCastle', None)": [
                        62
                    ],
                    "('org.apache.ws.security.components.crypto#BouncyCastle', 'getX509Certificates(byte,boolean)')": [
                        79
                    ],
                    "('org.apache.ws.security.components.crypto#BouncyCastle', 'getCertificateData(boolean,X509Certificate)')": [
                        112,
                        113,
                        116
                    ]
                },
                "new": {
                    "('org.apache.ws.security.components.crypto#BouncyCastle', None)": [
                        62,
                        63
                    ],
                    "('org.apache.ws.security.components.crypto#BouncyCastle', 'getX509Certificates(byte,boolean)')": [
                        80
                    ],
                    "('org.apache.ws.security.components.crypto#BouncyCastle', 'getCertificateData(boolean,X509Certificate)')": [
                        113,
                        114,
                        117
                    ]
                }
            },
            "src/org/apache/ws/security/components/crypto/CryptoBase.java": {
                "old": {
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String)')": [
                        227,
                        228
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String,BigInteger)')": [
                        246
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String,BigInteger,boolean)')": [
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', None)": [
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        309,
                        310,
                        311,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(byte)')": [
                        312,
                        314,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(Certificate)')": [
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getCertificates(String)')": [
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509CertThumb(byte)')": [
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getSKIBytesFromCert(X509Certificate)')": [
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        548,
                        549,
                        550,
                        551
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getCertificateData(boolean,X509Certificate)')": [
                        605
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getX509Certificates(byte,boolean)')": [
                        642
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'validateCertPath(java)')": [
                        675
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAlias(X500Principal,KeyStore)')": [
                        751
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', None)": [
                        86,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        436,
                        437,
                        438,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        450,
                        451
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String)')": [
                        230
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String,BigInteger)')": [
                        248
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(String,BigInteger,boolean)')": [
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(byte)')": [
                        328,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509Cert(Certificate)')": [
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getCertificates(String)')": [
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getAliasForX509CertThumb(byte)')": [
                        452,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getSKIBytesFromCert(X509Certificate)')": [
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        559,
                        560,
                        561,
                        562
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getCertificateData(boolean,X509Certificate)')": [
                        616
                    ],
                    "('org.apache.ws.security.components.crypto#CryptoBase', 'getX509Certificates(byte,boolean)')": [
                        653
                    ]
                }
            },
            "src/org/apache/ws/security/components/crypto/CryptoFactory.java": {
                "old": {
                    "('org.apache.ws.security.components.crypto#CryptoFactory', 'getProperties(String,ClassLoader)')": [
                        258,
                        259
                    ]
                },
                "new": {
                    "('org.apache.ws.security.components.crypto#CryptoFactory', 'getProperties(String,ClassLoader)')": [
                        258,
                        259,
                        260
                    ]
                }
            },
            "src/org/apache/ws/security/components/crypto/Merlin.java": {
                "old": {
                    "('org.apache.ws.security.components.crypto#Merlin', None)": [
                        65,
                        66,
                        71
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'getX509Certificates(byte,boolean)')": [
                        88,
                        102,
                        103
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'getCertificateData(boolean,X509Certificate)')": [
                        121,
                        122,
                        125
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'validateCertPath(X509Certificate)')": [
                        144,
                        145,
                        149,
                        150,
                        151,
                        152,
                        153,
                        157,
                        158,
                        159,
                        160,
                        168,
                        169,
                        170,
                        171,
                        181,
                        182,
                        187,
                        188
                    ]
                },
                "new": {
                    "('org.apache.ws.security.components.crypto#Merlin', None)": [
                        65,
                        70
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'getX509Certificates(byte,boolean)')": [
                        87,
                        101
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'getCertificateData(boolean,X509Certificate)')": [
                        119,
                        120,
                        123
                    ],
                    "('org.apache.ws.security.components.crypto#Merlin', 'validateCertPath(X509Certificate)')": [
                        142,
                        146,
                        147,
                        148,
                        152,
                        153,
                        154,
                        155,
                        163,
                        164,
                        165,
                        166,
                        176,
                        177,
                        182
                    ]
                }
            },
            "test/wssec/TestWSSecurityWSS86.java": {
                "new": {
                    "(None, None)": [
                        35,
                        38,
                        47,
                        48
                    ],
                    "('wssec#TestWSSecurityWSS86', None)": [
                        179,
                        180,
                        181,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('wssec#TestWSSecurityWSS86', 'testInterop')": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221
                    ]
                }
            }
        }
    }
}