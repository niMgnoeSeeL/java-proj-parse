{
    "ea8a294d288836e43f73c53a170d9c0bd10ed995": {
        "authored_data": "2020 Mar 03 11:03",
        "commit.message": "Consolidating some code for storing bytes in attachments\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "d7b76d43aa0031c3e09f2c8faf4b5123a5a0d5d2",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/token/BinarySecurity.java": {
                "old": {
                    "(None, None)": [
                        22,
                        24,
                        25,
                        26,
                        33,
                        34,
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.wss4j.common.token#BinarySecurity', 'setToken(byte)')": [
                        218,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        34
                    ],
                    "('org.apache.wss4j.common.token#BinarySecurity', 'setToken(byte)')": [
                        213,
                        214
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/AttachmentUtils.java": {
                "new": {
                    "(None, None)": [
                        21,
                        24,
                        30,
                        31,
                        42,
                        688,
                        689,
                        690
                    ],
                    "('org.apache.wss4j.common.util#AttachmentUtils', None)": [
                        658
                    ],
                    "('org.apache.wss4j.common.util#AttachmentUtils', 'storeBytesInAttachment(Element,Document,String,byte,CallbackHandler)')": [
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/Encryptor.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#Encryptor', 'encryptElementInAttachment(KeyInfo,SecretKey,String,WSEncryptionPart,Element)')": [
                        323
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#Encryptor', 'encryptElementInAttachment(KeyInfo,SecretKey,String,WSEncryptionPart,Element)')": [
                        323
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'addCipherValueElement(byte)')": [
                        224
                    ]
                },
                "new": {
                    "(None, None)": [
                        52
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'addCipherValueElement(byte)')": [
                        225
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecSignature.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecSignature', 'addBST(X509Certificate)')": [
                        479
                    ]
                },
                "new": {
                    "(None, None)": [
                        60
                    ],
                    "('org.apache.wss4j.dom.message#WSSecSignature', 'addBST(X509Certificate)')": [
                        480
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/util/WSSecurityUtil.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        46,
                        47,
                        51,
                        52,
                        61,
                        762,
                        763,
                        764,
                        765,
                        766
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'storeBytesInAttachment(Element,Document,String,byte,CallbackHandler)')": [
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761
                    ]
                }
            }
        }
    },
    "d7b76d43aa0031c3e09f2c8faf4b5123a5a0d5d2": {
        "authored_data": "2020 Mar 02 15:41",
        "commit.message": "Fixing a few issues flagged by LGTM\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "b86406645a518e5e80807f1840899067497916a0",
        "changes": {
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecBase.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecBase', None)": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecBase', None)": [
                        68,
                        69
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/EncryptedDataProcessor.java": {
                "new": {
                    "('org.apache.wss4j.dom.processor#EncryptedDataProcessor', 'handleToken(Element,RequestData)')": [
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/securityToken/UsernameSecurityTokenImpl.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.securityToken#UsernameSecurityTokenImpl', 'generateDerivedKey(WSInboundSecurityContext)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.securityToken#UsernameSecurityTokenImpl', 'generateDerivedKey(WSInboundSecurityContext)')": [
                        127,
                        128
                    ]
                }
            }
        }
    },
    "c89035677973f89f331d764af44e7e46f4259d38": {
        "authored_data": "2020 Feb 19 06:43",
        "commit.message": "Improve thread safety of subclass ThreadLocalSecurityProvider. (#6)\n\n* Synchronize overridden methods in the subclass which are synchronized in the superclass.\r\n\r\n* Add Override annotations to the overridden methods.\r\n",
        "commit.author.name": "Dehami Koswatte",
        "pcid": "9d6a746fc69696d59e521881f6f9afcabdd23058",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/ThreadLocalSecurityProvider.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'install')": [
                        40
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'clear')": [
                        69
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'load(InputStream)')": [
                        76
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'putAll(Map)')": [
                        83
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'entrySet')": [
                        90
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'put(Object,Object)')": [
                        117
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'remove(Object)')": [
                        126
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'getService(String,String)')": [
                        171
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'getServices')": [
                        180
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'install')": [
                        40
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', None)": [
                        69,
                        77,
                        85,
                        93,
                        103,
                        113,
                        123,
                        133,
                        143,
                        153,
                        163,
                        173,
                        183,
                        193
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'clear')": [
                        70
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'load(InputStream)')": [
                        78
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'putAll(Map)')": [
                        86
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'entrySet')": [
                        94
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'put(Object,Object)')": [
                        124
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'remove(Object)')": [
                        134
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'getService(String,String)')": [
                        184
                    ],
                    "('org.apache.wss4j.common.crypto#ThreadLocalSecurityProvider', 'getServices')": [
                        194
                    ]
                }
            }
        }
    },
    "22a27564acf7a5af35644dc63a85f95d3d8f8507": {
        "authored_data": "2020 Feb 14 12:05",
        "commit.message": "Picking up latest Santuario changes\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "50713a16dbe7e570246d8c2691757d6de4d2efe5",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/AttachmentUtils.java": {
                "old": {
                    "('org.apache.wss4j.common.util#AttachmentUtils', 'setupAttachmentDecryptionStream(String,Cipher,Key,InputStream)')": [
                        500
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#AttachmentUtils', 'setupAttachmentDecryptionStream(String,Cipher,Key,InputStream)')": [
                        500
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/Encryptor.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#Encryptor', 'createCipher(String,SecretKey)')": [
                        430
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#Encryptor', 'createCipher(String,SecretKey)')": [
                        430
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/EncryptOutputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', 'setupAttachmentEncryptionStreams(OutputProcessorChain)')": [
                        272
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', 'setupAttachmentEncryptionStreams(OutputProcessorChain)')": [
                        272
                    ]
                }
            }
        }
    },
    "50713a16dbe7e570246d8c2691757d6de4d2efe5": {
        "authored_data": "2020 Feb 14 12:04",
        "commit.message": "Remove code to set IVParameterSpec for old BouncyCastle versions\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "0168ffa699d9497bd8f1d0c61942a0881be2eb71",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/WSProviderConfig.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#WSProviderConfig', 'init(boolean,boolean,boolean)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.wss4j.common.crypto#WSProviderConfig', 'useIvParameterSpec')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.wss4j.common.crypto#WSProviderConfig', None)": [
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#WSProviderConfig', 'init(boolean,boolean,boolean)')": [
                        104
                    ]
                }
            }
        }
    },
    "0168ffa699d9497bd8f1d0c61942a0881be2eb71": {
        "authored_data": "2020 Feb 14 12:04",
        "commit.message": "Disabling some tests to work with the IBM JDK - namely issues with GCM\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "03b5ff5504c08240766aa5d1f281f4c2b7f98a50",
        "changes": {
            "ws-security-common/src/test/java/org/apache/wss4j/common/crypto/NameConstraintsTest.java": {
                "new": {
                    "(None, None)": [
                        48
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', None)": [
                        79,
                        80
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraints')": [
                        127,
                        128
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlin')": [
                        147,
                        148
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithTrustStoreUsingMerlin')": [
                        162,
                        163
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlinAki')": [
                        177,
                        178
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithTrustStoreUsingMerlinAki')": [
                        192,
                        193
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlinBc')": [
                        207,
                        208
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithTrustStoreUsingMerlinBc')": [
                        222,
                        223
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlinAkiBc')": [
                        237,
                        238
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithTrustStoreUsingMerlinAkiBc')": [
                        252,
                        253
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlinBreaking')": [
                        267,
                        268
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsWithKeyStoreUsingMerlinAkiBreaking')": [
                        285,
                        286
                    ],
                    "('org.apache.wss4j.common.crypto#NameConstraintsTest', 'testNameConstraintsUsingCertificateStore')": [
                        303,
                        304
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java": {
                "new": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.wss4j.dom.message#AttachmentTest', None)": [
                        76,
                        77
                    ],
                    "('org.apache.wss4j.dom.message#AttachmentTest', 'testXMLAttachmentContentEncryptionGCM')": [
                        432,
                        433
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionGCMTest.java": {
                "new": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', None)": [
                        73,
                        74
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', 'testAES128GCM')": [
                        96,
                        97
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', 'testAES256GCM')": [
                        123,
                        124
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', 'testAES192GCM_RSAOAEP_SHA256_MGFSHA256')": [
                        150,
                        151
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/AttachmentTest.java": {
                "new": {
                    "(None, None)": [
                        79
                    ],
                    "('org.apache.wss4j.stax.test#AttachmentTest', None)": [
                        82,
                        83
                    ],
                    "('org.apache.wss4j.stax.test#AttachmentTest', 'testXMLAttachmentContentEncryptionGCM')": [
                        496
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/EncDecryptionTest.java": {
                "old": {
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPMGF1AESGCM128Inbound')": [
                        1895
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAESGMC192SHA256Inbound')": [
                        2004
                    ]
                },
                "new": {
                    "(None, None)": [
                        94
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', None)": [
                        97,
                        98
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPMGF1AESGCM128Outbound')": [
                        1838
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPMGF1AESGCM128Inbound')": [
                        1899
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAESGCM192SHA256Outbound')": [
                        1945
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAESGCM192SHA256Inbound')": [
                        2009,
                        2010
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAES192GCMSHA384MGF1sha384Outbound')": [
                        2062
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAES192GCMSHA384MGF1sha1Inbound')": [
                        2134
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAESGCM192SHA384MGF1SHA384PSourceOutbound')": [
                        2190
                    ],
                    "('org.apache.wss4j.stax.test#EncDecryptionTest', 'testKeyWrappingRSAOAEPAESGCM192SHA384MGF1SHA384PSourceInbound')": [
                        2266
                    ]
                }
            }
        }
    },
    "03b5ff5504c08240766aa5d1f281f4c2b7f98a50": {
        "authored_data": "2020 Feb 12 11:29",
        "commit.message": "Extend automatic signature algorithm detection with support for EC keys (WSS-663) (#4)\n\n* Extend automatic signature algorithm detection with support for EC keys\r\n\r\n* WSS-663 Missing ECC key support\r\n* Adapt alogrithmSuiteValidator with support for EC keys\r\n\r\n* #4 Extend automatic signature algorithm detection with support for EC\r\nkeys (WSS-663)\r\n* Apply review feedback regarding validity of the test key\r\n* Adding better default key length validation defaults for EC keys\r\n",
        "commit.author.name": "Thomas Papke",
        "pcid": "671fcee27e5dfc61847a03b8470fd839fdfe02ab",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/WSS4JConstants.java": {
                "new": {
                    "('org.apache.wss4j.common#WSS4JConstants', None)": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/AlgorithmSuite.java": {
                "new": {
                    "('org.apache.wss4j.common.crypto#AlgorithmSuite', None)": [
                        47,
                        48,
                        180,
                        181,
                        184,
                        185,
                        188,
                        189
                    ],
                    "('org.apache.wss4j.common.crypto#AlgorithmSuite', 'getMaximumEllipticCurveKeyLength')": [
                        178,
                        179
                    ],
                    "('org.apache.wss4j.common.crypto#AlgorithmSuite', 'setMaximumEllipticCurveKeyLength(int)')": [
                        182,
                        183
                    ],
                    "('org.apache.wss4j.common.crypto#AlgorithmSuite', 'getMinimumEllipticCurveKeyLength')": [
                        186,
                        187
                    ],
                    "('org.apache.wss4j.common.crypto#AlgorithmSuite', 'setMinimumEllipticCurveKeyLength(int)')": [
                        190,
                        191
                    ],
                    "(None, None)": [
                        192,
                        193
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/AlgorithmSuiteValidator.java": {
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.wss4j.common.crypto#AlgorithmSuiteValidator', 'checkAsymmetricKeyLength(PublicKey)')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecSignature.java": {
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecSignature', 'getSigningCerts')": [
                        908,
                        909
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureKeyValueTest.java": {
                "new": {
                    "('org.apache.wss4j.dom.message#SignatureKeyValueTest', None)": [
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.wss4j.dom.message#SignatureKeyValueTest', 'testECKeyValue')": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "(None, None)": [
                        221
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlAlgorithmSuiteTest.java": {
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.wss4j.dom.saml#SamlAlgorithmSuiteTest', None)": [
                        199,
                        243,
                        244
                    ],
                    "('org.apache.wss4j.dom.saml#SamlAlgorithmSuiteTest', 'signWithEcdsaAlgorithm')": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ]
                }
            }
        }
    }
}