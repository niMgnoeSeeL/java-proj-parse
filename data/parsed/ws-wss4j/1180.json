{
    "04cd1657fca9defc9551a7ba4e1610b2ad39640a": {
        "authored_data": "2013 Aug 14 13:14",
        "commit.message": "Relax some of the BSP rules surrounding digest algorithms to allow SHA > 1\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "62cd87739fb77094df04a8ef6428f7429353a710",
        "changes": {
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ConfigurationConverter.java": {
                "new": {
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseNonBooleanProperties(Map,WSSSecurityProperties)')": [
                        473,
                        484
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/WSSSignatureInputHandler.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureInputHandler', 'checkBSPCompliance(InputProcessorChain,SignatureType)')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureInputHandler', 'checkBSPCompliance(InputProcessorChain,SignatureType)')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/WSSSignatureReferenceVerifyInputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'checkBSPCompliance(WSInboundSecurityContext)')": [
                        120
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'checkBSPCompliance(WSInboundSecurityContext)')": [
                        120,
                        121,
                        122,
                        123
                    ]
                }
            }
        }
    },
    "62cd87739fb77094df04a8ef6428f7429353a710": {
        "authored_data": "2013 Aug 14 10:00",
        "commit.message": "[WSS-474] - Missing the 'EncodingType' attribute in element built by STRTransformUtil#createBSTX509\n - Thanks to Alessio Soldano.\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "5ce39bb257471e7918a61837a41b099d39123cd5",
        "changes": {
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/transform/STRTransformUtil.java": {
                "old": {
                    "('org.apache.wss4j.dom.transform#STRTransformUtil', 'dereferenceSTR(Document,SecurityTokenReference,WSDocInfo)')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.transform#STRTransformUtil', 'dereferenceSTR(Document,SecurityTokenReference,WSDocInfo)')": [
                        84
                    ],
                    "('org.apache.wss4j.dom.transform#STRTransformUtil', 'createBSTX509(Document,X509Certificate,Element)')": [
                        111
                    ],
                    "('org.apache.wss4j.dom.transform#STRTransformUtil', None)": [
                        112,
                        113
                    ],
                    "('org.apache.wss4j.dom.transform#STRTransformUtil', 'createBSTX509(Document,X509Certificate,Element,String)')": [
                        114,
                        115,
                        116,
                        133,
                        134,
                        135
                    ]
                }
            }
        }
    },
    "5ce39bb257471e7918a61837a41b099d39123cd5": {
        "authored_data": "2013 Aug 14 09:21",
        "commit.message": "[WSS-476] - Add the ability to configure the Signature Canonicalization Algorithm via WSHandler\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "e60f8e3209d397867b4f88922e28f75a25fc1850",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/ConfigurationConstants.java": {
                "new": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        583,
                        584,
                        585,
                        586,
                        587,
                        588
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/action/SAMLTokenSignedAction.java": {
                "new": {
                    "('org.apache.wss4j.dom.action#SAMLTokenSignedAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        107,
                        108,
                        109
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/action/SignatureAction.java": {
                "new": {
                    "('org.apache.wss4j.dom.action#SignatureAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        54,
                        55,
                        56
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/RequestData.java": {
                "new": {
                    "('org.apache.wss4j.dom.handler#RequestData', None)": [
                        69,
                        143,
                        144,
                        147,
                        148
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'clear')": [
                        116
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'getSignatureC14nAlgorithm')": [
                        141,
                        142
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'setSignatureC14nAlgorithm(String)')": [
                        145,
                        146
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java": {
                "new": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'decodeSignatureParameter(RequestData)')": [
                        531,
                        532,
                        533
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandlerConstants.java": {
                "new": {
                    "('org.apache.wss4j.dom.handler#WSHandlerConstants', None)": [
                        585,
                        586,
                        587,
                        588,
                        589,
                        590
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/SignatureTest.java": {
                "new": {
                    "('org.apache.wss4j.dom.message#SignatureTest', None)": [
                        871,
                        872,
                        917
                    ],
                    "('org.apache.wss4j.dom.message#SignatureTest', 'testWSHandlerSignatureCanonicalization')": [
                        873,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ConfigurationConverter.java": {
                "new": {
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseNonBooleanProperties(Map,WSSSecurityProperties)')": [
                        465,
                        466,
                        467
                    ]
                }
            }
        }
    },
    "613797cc2d22c5aefbb36e24825d0a7cc590d56d": {
        "authored_data": "2013 Aug 13 09:31",
        "commit.message": "Fixed some JAXB issues in OSGi\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "209584bec1864a58b6f381b9282dccfecbfc270e",
        "changes": {
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSConstants.java": {
                "old": {
                    "('org.apache.wss4j.stax.ext#WSSConstants', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.ext#WSSConstants', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            }
        }
    },
    "209584bec1864a58b6f381b9282dccfecbfc270e": {
        "authored_data": "2013 Aug 06 10:20",
        "commit.message": "Finished PMD upgrade\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "8af9129cc5825e8742341686fe5a9edc6b80d6fb",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/kerberos/KerberosTokenDecoderImpl.java": {
                "old": {
                    "('org.apache.wss4j.common.kerberos#KerberosTokenDecoderImpl', 'parseServiceTicket(byte)')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.kerberos#KerberosTokenDecoderImpl', 'parseServiceTicket(byte)')": [
                        116
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/OperationPolicy.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax#OperationPolicy', 'hashCode')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax#OperationPolicy', 'hashCode')": [
                        79
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/IssuedTokenAssertionState.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        79
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'findClaimInAssertion(org,URI)')": [
                        219
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        78
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'findClaimInAssertion(org,URI)')": [
                        218
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/KerberosTokenAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#KerberosTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        61
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#KerberosTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        61
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/SignedPartsAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#SignedPartsAssertionState', 'assertEvent(SecurityEvent)')": [
                        63
                    ]
                }
            },
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/SpnegoContextTokenAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#SpnegoContextTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#SpnegoContextTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        57
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/WSSec.java": {
                "old": {
                    "('org.apache.wss4j.stax#WSSec', 'validateAndApplyDefaultsToOutboundSecurityProperties(WSSSecurityProperties)')": [
                        284
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax#WSSec', 'validateAndApplyDefaultsToOutboundSecurityProperties(WSSSecurityProperties)')": [
                        284
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSInboundSecurityContext.java": {
                "old": {
                    "(None, None)": [
                        32,
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        34
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSCrypto.java": {
                "old": {
                    "('org.apache.wss4j.stax.ext#WSSCrypto', None)": [
                        38
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'getCrypto')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.ext#WSSCrypto', None)": [
                        38
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'getCrypto')": [
                        47
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSSecurityProperties.java": {
                "old": {
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getSignatureCryptoClass')": [
                        351
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getSignatureVerificationCryptoClass')": [
                        420
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getDecryptionCryptoClass')": [
                        498
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getEncryptionCryptoClass')": [
                        586
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getSignatureCryptoClass')": [
                        351
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getSignatureVerificationCryptoClass')": [
                        420
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getDecryptionCryptoClass')": [
                        498
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getEncryptionCryptoClass')": [
                        586
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSUtils.java": {
                "old": {
                    "('org.apache.wss4j.stax.ext#WSSUtils', 'isInSOAPHeader(List)')": [
                        150,
                        151
                    ],
                    "('org.apache.wss4j.stax.ext#WSSUtils', 'isInSOAPBody(List)')": [
                        164,
                        165
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.ext#WSSUtils', 'isInSOAPHeader(List)')": [
                        150,
                        151
                    ],
                    "('org.apache.wss4j.stax.ext#WSSUtils', 'isInSOAPBody(List)')": [
                        164,
                        165
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/InboundWSSecurityContextImpl.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl#InboundWSSecurityContextImpl', 'registerSecurityEvent(SecurityEvent)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl#InboundWSSecurityContextImpl', 'registerSecurityEvent(SecurityEvent)')": [
                        78
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/input/WSSSignatureReferenceVerifyInputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'checkBSPCompliance(WSInboundSecurityContext)')": [
                        87,
                        88,
                        91
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'processElementPath(List,InputProcessorChain,XMLSecEvent,ReferenceType)')": [
                        143,
                        144
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'detectReplayAttack(InputProcessorChain)')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'checkBSPCompliance(WSInboundSecurityContext)')": [
                        87,
                        88,
                        91
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'processElementPath(List,InputProcessorChain,XMLSecEvent,ReferenceType)')": [
                        143,
                        144
                    ],
                    "('org.apache.wss4j.stax.impl.processor.input#WSSSignatureReferenceVerifyInputProcessor', 'detectReplayAttack(InputProcessorChain)')": [
                        188
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/DerivedKeyTokenOutputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.output#DerivedKeyTokenOutputProcessor', 'processEvent(XMLSecEvent,OutputProcessorChain)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.output#DerivedKeyTokenOutputProcessor', 'processEvent(XMLSecEvent,OutputProcessorChain)')": [
                        87,
                        88
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/UsernameTokenOutputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.output#UsernameTokenOutputProcessor', 'processEvent(XMLSecEvent,OutputProcessorChain)')": [
                        78,
                        86
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.output#UsernameTokenOutputProcessor', 'processEvent(XMLSecEvent,OutputProcessorChain)')": [
                        78,
                        86
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/WSSSignatureEndingOutputProcessor.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.processor.output#WSSSignatureEndingOutputProcessor', 'createKeyInfoStructureForSignature(OutputProcessorChain,OutboundSecurityToken,boolean)')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.processor.output#WSSSignatureEndingOutputProcessor', 'createKeyInfoStructureForSignature(OutputProcessorChain,OutboundSecurityToken,boolean)')": [
                        102
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/securityToken/X509SecurityTokenImpl.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', 'matches(java,Collection)')": [
                        144,
                        145
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', 'matches(X509Certificate,Collection)')": [
                        144
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/securityToken/KerberosServiceSecurityToken.java": {
                "old": {
                    "(None, None)": [
                        23,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/securityToken/SecurityTokenReference.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/securityToken/SubjectAndPrincipalSecurityToken.java": {
                "old": {
                    "(None, None)": [
                        29,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/validate/SamlTokenValidator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/validate/UsernameTokenValidatorImpl.java": {
                "old": {
                    "('org.apache.wss4j.stax.validate#UsernameTokenValidatorImpl', 'validate(UsernameTokenType,TokenContext)')": [
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.validate#UsernameTokenValidatorImpl', 'validate(UsernameTokenType,TokenContext)')": [
                        117,
                        118,
                        119
                    ]
                }
            }
        }
    },
    "8af9129cc5825e8742341686fe5a9edc6b80d6fb": {
        "authored_data": "2013 Aug 02 10:37",
        "commit.message": "Some PMD fixes\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "adaf600ba01fbcaf88e1fd85186b51c72f164a8f",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/cache/MemoryReplayCache.java": {
                "old": {
                    "('org.apache.wss4j.common.cache#MemoryReplayCache', 'add(String,long)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.cache#MemoryReplayCache', 'add(String,long)')": [
                        69
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CertificateStore.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#CertificateStore', 'verifyTrust(X509Certificate,boolean)')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#CertificateStore', 'verifyTrust(X509Certificate,boolean)')": [
                        248
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/DERDecoder.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#DERDecoder', 'test(byte)')": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#DERDecoder', 'test(byte)')": [
                        143
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'load(InputStream,String,String,String)')": [
                        396
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'verifyTrust(X509Certificate,boolean)')": [
                        907,
                        912,
                        918,
                        933
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509Certificates(String,BigInteger)')": [
                        1008
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509Certificates(byte)')": [
                        1092
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509CertificatesSKI(byte)')": [
                        1172
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509CertificatesSubjectDN(String)')": [
                        1259
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'load(InputStream,String,String,String)')": [
                        396
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'verifyTrust(X509Certificate,boolean)')": [
                        907,
                        912,
                        918,
                        933
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509Certificates(String,BigInteger)')": [
                        1008
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509Certificates(byte)')": [
                        1092
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509CertificatesSKI(byte)')": [
                        1172
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getX509CertificatesSubjectDN(String)')": [
                        1259
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/X509NameTokenizer.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', None)": [
                        44
                    ],
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', 'hasMoreTokens')": [
                        56
                    ],
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', 'trim(String)')": [
                        95,
                        98
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', None)": [
                        44
                    ],
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', 'hasMoreTokens')": [
                        56
                    ],
                    "('org.apache.wss4j.common.crypto#X509NameTokenizer', 'trim(String)')": [
                        95,
                        98
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/derivedKey/AlgoFactory.java": {
                "old": {
                    "('org.apache.wss4j.common.derivedKey#AlgoFactory', 'getInstance(String)')": [
                        38,
                        39
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.derivedKey#AlgoFactory', 'getInstance(String)')": [
                        38,
                        39
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/derivedKey/DerivedKeyUtils.java": {
                "old": {
                    "('org.apache.wss4j.common.derivedKey#DerivedKeyUtils', 'deriveKey(String,String,int,byte,byte,int)')": [
                        38,
                        39
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.derivedKey#DerivedKeyUtils', 'deriveKey(String,String,int,byte,byte,int)')": [
                        38,
                        39
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/derivedKey/P_SHA1.java": {
                "old": {
                    "('org.apache.wss4j.common.derivedKey#P_SHA1', 'createKey(byte,byte,int,long)')": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.derivedKey#P_SHA1', 'createKey(byte,byte,int,long)')": [
                        56
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/ext/WSSecurityException.java": {
                "old": {
                    "('org.apache.wss4j.common.ext#WSSecurityException', 'getFaultCode')": [
                        179
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.ext#WSSecurityException', 'getFaultCode')": [
                        179
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/principal/WSUsernameTokenPrincipalImpl.java": {
                "old": {
                    "('org.apache.wss4j.common.principal#WSUsernameTokenPrincipalImpl', 'toString')": [
                        148
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.principal#WSUsernameTokenPrincipalImpl', 'toString')": [
                        148
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/saml/SamlAssertionWrapper.java": {
                "old": {
                    "('org.apache.wss4j.common.saml#SamlAssertionWrapper', 'getSubjectName')": [
                        333,
                        334,
                        335,
                        336,
                        337,
                        339,
                        340,
                        341,
                        344,
                        345
                    ]
                },
                "new": {
                    "(None, None)": [
                        46
                    ],
                    "('org.apache.wss4j.common.saml#SamlAssertionWrapper', 'getSubjectName')": [
                        334,
                        335,
                        336,
                        337,
                        339,
                        340,
                        343,
                        344
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/DateUtil.java": {
                "old": {
                    "('org.apache.wss4j.common.util#DateUtil', 'verifyCreated(Date,int,int)')": [
                        48,
                        59
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#DateUtil', 'verifyCreated(Date,int,int)')": [
                        48,
                        59
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/NSStack.java": {
                "old": {
                    "('org.apache.wss4j.common.util#NSStack', 'getPrefix(String,boolean)')": [
                        201
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#NSStack', 'getPrefix(String,boolean)')": [
                        201
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/RFC2253Parser.java": {
                "old": {
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'normalize(String,boolean)')": [
                        71,
                        86
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'parseRDN(String,boolean)')": [
                        119
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'parseATAV(String,boolean)')": [
                        143
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'normalizeV(String,boolean)')": [
                        197,
                        198
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'changeLess32toRFC(String)')": [
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'removeWSandReplace(String,String,String)')": [
                        416
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'trim(String)')": [
                        462,
                        463
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'normalize(String,boolean)')": [
                        71,
                        86
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'parseRDN(String,boolean)')": [
                        119
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'parseATAV(String,boolean)')": [
                        143
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'normalizeV(String,boolean)')": [
                        197,
                        198
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'changeLess32toRFC(String)')": [
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'removeWSandReplace(String,String,String)')": [
                        416
                    ],
                    "('org.apache.wss4j.common.util#RFC2253Parser', 'trim(String)')": [
                        462,
                        463
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/WSTimeSource.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/XMLUtils.java": {
                "old": {
                    "('org.apache.wss4j.common.util#XMLUtils', 'getNamespace(String,Node)')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#XMLUtils', 'getNamespace(String,Node)')": [
                        71
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/WSDocInfo.java": {
                "old": {
                    "('org.apache.wss4j.dom#WSDocInfo', 'getTokenElement(String)')": [
                        159,
                        160,
                        161
                    ],
                    "('org.apache.wss4j.dom#WSDocInfo', 'getResultByTag(Integer,String)')": [
                        250
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom#WSDocInfo', 'getTokenElement(String)')": [
                        159,
                        160,
                        161
                    ],
                    "('org.apache.wss4j.dom#WSDocInfo', 'getResultByTag(Integer,String)')": [
                        250
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/action/SignatureAction.java": {
                "old": {
                    "('org.apache.wss4j.dom.action#SignatureAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        109
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.action#SignatureAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        109
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java": {
                "old": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doSenderAction(int,Document,RequestData,List,boolean)')": [
                        96,
                        191
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doReceiverAction(int,RequestData)')": [
                        278,
                        307,
                        308,
                        309
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doSenderAction(int,Document,RequestData,List,boolean)')": [
                        96,
                        191
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doReceiverAction(int,RequestData)')": [
                        278,
                        307,
                        308,
                        309
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecBase.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecBase', 'setWsuId(Element)')": [
                        161
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecBase', 'setWsuId(Element)')": [
                        161
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecDKEncrypt.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecDKEncrypt', 'getDerivedKeyLength')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecDKEncrypt', 'getDerivedKeyLength')": [
                        188
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecDKSign.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecDKSign', 'getDerivedKeyLength')": [
                        315
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecDKSign', 'getDerivedKeyLength')": [
                        315
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecDerivedKeyBase.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecDerivedKeyBase', 'prepare(Document)')": [
                        197
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecDerivedKeyBase', 'prepare(Document)')": [
                        197,
                        198
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncrypt.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'doEncryption(Document,WSSConfig,KeyInfo,SecretKey,String,List,CallbackLookup)')": [
                        402
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'doEncryption(Document,WSSConfig,KeyInfo,SecretKey,String,List,CallbackLookup)')": [
                        402
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/BinarySecurity.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#BinarySecurity', 'getFirstNode')": [
                        220
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#BinarySecurity', 'getFirstNode')": [
                        220
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/DerivedKeyToken.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#DerivedKeyToken', 'getFirstNode(Element)')": [
                        423
                    ],
                    "('org.apache.wss4j.dom.message.token#DerivedKeyToken', 'deriveKey(int,byte)')": [
                        528,
                        529,
                        530
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#DerivedKeyToken', 'getFirstNode(Element)')": [
                        423
                    ],
                    "('org.apache.wss4j.dom.message.token#DerivedKeyToken', 'deriveKey(int,byte)')": [
                        528,
                        529,
                        530
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/SecurityContextToken.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#SecurityContextToken', 'getFirstNode(Element)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#SecurityContextToken', 'getFirstNode(Element)')": [
                        200
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/SecurityTokenReference.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'setKeyIdentifierThumb(X509Certificate)')": [
                        404
                    ],
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'setKeyIdentifierEncKeySHA1(String)')": [
                        415
                    ],
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'length(String,String)')": [
                        733,
                        734,
                        735
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'setKeyIdentifierThumb(X509Certificate)')": [
                        404
                    ],
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'setKeyIdentifierEncKeySHA1(String)')": [
                        415
                    ],
                    "('org.apache.wss4j.dom.message.token#SecurityTokenReference', 'length(String,String)')": [
                        733,
                        734,
                        735
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/Timestamp.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#Timestamp', None)": [
                        210
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#Timestamp', None)": [
                        210
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/token/UsernameToken.java": {
                "old": {
                    "('org.apache.wss4j.dom.message.token#UsernameToken', 'getFirstNode(Element)')": [
                        645
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message.token#UsernameToken', 'getFirstNode(Element)')": [
                        645
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        181
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'parseKeyValue(Element)')": [
                        297
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'testMessageReplay(Element,byte,RequestData,WSDocInfo)')": [
                        685
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'checkBSPCompliance(XMLSignature,BSPEnforcer)')": [
                        751,
                        754
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        181
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'parseKeyValue(Element)')": [
                        297
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'testMessageReplay(Element,byte,RequestData,WSDocInfo)')": [
                        685
                    ],
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'checkBSPCompliance(XMLSignature,BSPEnforcer)')": [
                        751,
                        754
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/saml/WSSecSignatureSAML.java": {
                "old": {
                    "('org.apache.wss4j.dom.saml#WSSecSignatureSAML', 'computeSignature(List,WSSecHeader,Element)')": [
                        515
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.saml#WSSecSignatureSAML', 'computeSignature(List,WSSecHeader,Element)')": [
                        515
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/str/STRParserUtil.java": {
                "old": {
                    "('org.apache.wss4j.dom.str#STRParserUtil', 'checkBinarySecurityBSPCompliance(SecurityTokenReference,BinarySecurity,BSPEnforcer)')": [
                        130,
                        131,
                        132,
                        134
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.str#STRParserUtil', 'checkBinarySecurityBSPCompliance(SecurityTokenReference,BinarySecurity,BSPEnforcer)')": [
                        130,
                        131,
                        132,
                        134
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/transform/STRTransform.java": {
                "old": {
                    "('org.apache.wss4j.dom.transform#STRTransform', 'transformIt(Data,XMLCryptoContext,OutputStream)')": [
                        203,
                        204
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.transform#STRTransform', 'transformIt(Data,XMLCryptoContext,OutputStream)')": [
                        203,
                        204
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/util/WSSecurityUtil.java": {
                "old": {
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'isActorEqual(String,String)')": [
                        146,
                        147,
                        151
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'findSAMLAssertionElementById(Node,String)')": [
                        406,
                        407,
                        408
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getPrefixNS(String,Node)')": [
                        536
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getNamespace(String,Node)')": [
                        551
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'prepareSecretKey(String,byte)')": [
                        822
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'newNodes(List,List)')": [
                        1257,
                        1258,
                        1261,
                        1262
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'isLinkedBySignatureRefs(Element,Set)')": [
                        1326
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'isActorEqual(String,String)')": [
                        146,
                        147,
                        151
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'findSAMLAssertionElementById(Node,String)')": [
                        406,
                        407,
                        408
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getPrefixNS(String,Node)')": [
                        536
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getNamespace(String,Node)')": [
                        551
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'prepareSecretKey(String,byte)')": [
                        822
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'newNodes(List,List)')": [
                        1257,
                        1258,
                        1261,
                        1262
                    ],
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'isLinkedBySignatureRefs(Element,Set)')": [
                        1326
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/util/XmlSchemaDateFormat.java": {
                "old": {
                    "('org.apache.wss4j.dom.util#XmlSchemaDateFormat', 'parse(String,ParsePosition)')": [
                        76,
                        93,
                        94,
                        101,
                        105,
                        115,
                        116,
                        118,
                        119,
                        131,
                        132,
                        139,
                        140,
                        141,
                        142,
                        143,
                        154
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.util#XmlSchemaDateFormat', 'parse(String,ParsePosition)')": [
                        76,
                        93,
                        94,
                        101,
                        105,
                        115,
                        116,
                        118,
                        130,
                        131,
                        138,
                        139,
                        140,
                        141,
                        142,
                        153
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/SignatureTrustValidator.java": {
                "old": {
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'matches(java,Collection)')": [
                        152,
                        153
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.validate#SignatureTrustValidator', 'matches(X509Certificate,Collection)')": [
                        152
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/TimestampValidator.java": {
                "old": {
                    "('org.apache.wss4j.dom.validate#TimestampValidator', 'validate(Credential,RequestData)')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.validate#TimestampValidator', 'validate(Credential,RequestData)')": [
                        60
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/validate/UsernameTokenValidator.java": {
                "old": {
                    "('org.apache.wss4j.dom.validate#UsernameTokenValidator', 'validate(Credential,RequestData)')": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.validate#UsernameTokenValidator', 'validate(Credential,RequestData)')": [
                        100
                    ]
                }
            }
        }
    },
    "adaf600ba01fbcaf88e1fd85186b51c72f164a8f": {
        "authored_data": "2013 Aug 01 15:37",
        "commit.message": "Updated some plugin versions\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "e91f066673d630775036695708125d0132128bcd",
        "changes": {
            "policy/src/main/java/org/apache/wss4j/policy/SPUtils.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.wss4j.policy#SPUtils', 'getFirstChildElement(Node,QName)')": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.wss4j.policy#SPUtils', 'serialize(Node,XMLStreamWriter)')": [
                        164
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.wss4j.policy#SPUtils', 'getFirstChildElement(Node,QName)')": [
                        78
                    ],
                    "('org.apache.wss4j.policy#SPUtils', None)": [
                        82,
                        83
                    ],
                    "('org.apache.wss4j.policy#SPUtils', 'isNodeEqualToQName(Node,QName)')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.wss4j.policy#SPUtils', 'serialize(Node,XMLStreamWriter)')": [
                        178
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/builders/AlgorithmSuiteBuilder.java": {
                "old": {
                    "(None, None)": [
                        25,
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        27,
                        28,
                        29,
                        30
                    ]
                }
            },
            "policy/src/main/java/org/apache/wss4j/policy/model/Trust13.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.wss4j.policy.model#Trust13', 'cloneAssertion(org)')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.wss4j.policy.model#Trust13', 'cloneAssertion(Policy)')": [
                        49
                    ]
                }
            }
        }
    },
    "e91f066673d630775036695708125d0132128bcd": {
        "authored_data": "2013 Aug 01 10:49",
        "commit.message": "[WSS-438] - \"Support Signature Cert Constraints as per the DOM code\"\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "685e25bab53b3b0a0691b557f1ab25a3db38a55d",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/ConfigurationConstants.java": {
                "old": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        778,
                        779
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        778
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandlerConstants.java": {
                "old": {
                    "('org.apache.wss4j.dom.handler#WSHandlerConstants', None)": [
                        782,
                        783
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.handler#WSHandlerConstants', None)": [
                        782
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ConfigurationConverter.java": {
                "old": {
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseNonBooleanProperties(Map,WSSSecurityProperties)')": [
                        525
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        26,
                        27
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseNonBooleanProperties(Map,WSSSecurityProperties)')": [
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSSecurityProperties.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        35,
                        862,
                        863
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', None)": [
                        111,
                        163,
                        848,
                        849,
                        850,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setSubjectCertConstraints(Collection)')": [
                        851,
                        852,
                        853
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'getSubjectCertConstraints')": [
                        860,
                        861
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/securityToken/X509SecurityTokenImpl.java": {
                "old": {
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', None)": [
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43
                    ],
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', None)": [
                        48,
                        49,
                        50,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        171,
                        172
                    ],
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', 'verify')": [
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.wss4j.stax.impl.securityToken#X509SecurityTokenImpl', 'matches(java,Collection)')": [
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ]
                }
            }
        }
    },
    "685e25bab53b3b0a0691b557f1ab25a3db38a55d": {
        "authored_data": "2013 Jul 31 15:35",
        "commit.message": "WSS-472 - Incorrect Symmetric Key Derivation Length validation\n\n",
        "commit.author.name": "Marc Giger",
        "pcid": "b76d251028b6402bfb18afe78c306a61cf947ef2",
        "changes": {
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/AlgorithmSuiteAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#AlgorithmSuiteAssertionState', 'assertEvent(SecurityEvent)')": [
                        60,
                        63,
                        64,
                        90,
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#AlgorithmSuiteAssertionState', 'assertEvent(SecurityEvent)')": [
                        60,
                        61,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        96,
                        97,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/securityToken/WSSecurityTokenConstants.java": {
                "old": {
                    "('org.apache.wss4j.stax.securityToken#WSSecurityTokenConstants', None)": [
                        56
                    ]
                }
            }
        }
    }
}