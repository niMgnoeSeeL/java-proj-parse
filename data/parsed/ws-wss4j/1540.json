{
    "af34a4fb697a71b2a5d1cc9d283ab1c1202cf491": {
        "authored_data": "2012 Aug 13 09:57",
        "commit.message": "[WSS-399] - Add support for setting a DigestMethod when using RSA-OAEP\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "9d8f70ed8c03dd93165c486d78168fb78dfee3e0",
        "changes": {
            "src/main/java/org/apache/ws/security/WSConstants.java": {
                "new": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        116,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/action/EncryptionAction.java": {
                "new": {
                    "('org.apache.ws.security.action#EncryptionAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/RequestData.java": {
                "new": {
                    "('org.apache.ws.security.handler#RequestData', None)": [
                        61,
                        225,
                        228,
                        229,
                        232
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'clear')": [
                        99
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'getEncDigestAlgorithm')": [
                        226,
                        227
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'setEncDigestAlgorithm(String)')": [
                        230,
                        231
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandler.java": {
                "new": {
                    "('org.apache.ws.security.handler#WSHandler', 'decodeEncryptionParameter(RequestData)')": [
                        568,
                        569,
                        570
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandlerConstants.java": {
                "new": {
                    "('org.apache.ws.security.handler#WSHandlerConstants', None)": [
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(SecretKey,X509Certificate,Crypto)')": [
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        50
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        682,
                        683,
                        684,
                        685,
                        686,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        697,
                        698,
                        699
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'prepareInternal(SecretKey,X509Certificate,Crypto)')": [
                        244,
                        245,
                        246,
                        247,
                        248,
                        251
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'createEncryptedKey(Document,String)')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'setDigestAlgorithm(String)')": [
                        687,
                        688
                    ],
                    "('org.apache.ws.security.message#WSSecEncryptedKey', 'getDigestAlgorithm')": [
                        695,
                        696
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        119
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', None)": [
                        213,
                        214
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'getDigestAlgorithm(Node)')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227
                    ]
                }
            },
            "src/test/java/org/apache/ws/security/message/EncryptionTest.java": {
                "new": {
                    "('org.apache.ws.security.message#EncryptionTest', None)": [
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        675
                    ],
                    "('org.apache.ws.security.message#EncryptionTest', 'testEncryptionDecryptionOAEPSHA256')": [
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674
                    ]
                }
            }
        }
    },
    "9d8f70ed8c03dd93165c486d78168fb78dfee3e0": {
        "authored_data": "2012 Aug 01 11:46",
        "commit.message": "Fixing some javadoc stuff\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "4bf8dbfddb52a5dfd45c583970bf2afa0e318aac",
        "changes": {
            "src/main/java/org/apache/ws/security/WSSecurityEngine.java": {
                "old": {
                    "('org.apache.ws.security#WSSecurityEngine', None)": [
                        188,
                        217,
                        280
                    ]
                },
                "new": {
                    "('org.apache.ws.security#WSSecurityEngine', None)": [
                        188,
                        217,
                        280
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/message/token/TokenElementCallback.java": {
                "old": {
                    "('org.apache.ws.security.message.token#TokenElementCallback', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.ws.security.message.token#TokenElementCallback', None)": [
                        46
                    ]
                }
            }
        }
    },
    "141afe77790b97d42300d51148d9e71a3f9125bc": {
        "authored_data": "2012 Jul 19 15:08",
        "commit.message": "[WSS-398] - Can't create a UsernameToken without a password\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "af8720cd454456eda4505aeccdaa2fed0dc50273",
        "changes": {
            "src/main/java/org/apache/ws/security/action/UsernameTokenAction.java": {
                "old": {
                    "('org.apache.ws.security.action#UsernameTokenAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        45
                    ]
                },
                "new": {
                    "('org.apache.ws.security.action#UsernameTokenAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/ws/security/message/UsernameTokenTest.java": {
                "new": {
                    "('org.apache.ws.security.message#UsernameTokenTest', None)": [
                        651,
                        652,
                        653,
                        674,
                        675,
                        676,
                        677
                    ],
                    "('org.apache.ws.security.message#UsernameTokenTest', 'testUsernameTokenWSHandlerNoPassword')": [
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673
                    ]
                }
            }
        }
    },
    "af8720cd454456eda4505aeccdaa2fed0dc50273": {
        "authored_data": "2012 Jun 27 08:52",
        "commit.message": "[WSS-396] - ConcurrentModificationException in MemoryReplayCache.processTokenExpiry\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "c0f45c911f31b5c58c35d6ee4a7642181104b054",
        "changes": {
            "src/main/java/org/apache/ws/security/cache/MemoryReplayCache.java": {
                "old": {
                    "('org.apache.ws.security.cache#MemoryReplayCache', 'processTokenExpiry')": [
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.ws.security.cache#MemoryReplayCache', 'processTokenExpiry')": [
                        90,
                        91,
                        92,
                        93
                    ]
                }
            }
        }
    },
    "c0f45c911f31b5c58c35d6ee4a7642181104b054": {
        "authored_data": "2012 Jun 22 17:16",
        "commit.message": "In OSGi, the OpenSaml classloader will not be able to find the WSS4J\nprovided configuration.  Override the method so that we can load the\nconfig files ourselves and pass them into OpenSaml\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "6d1c9098dc66dccaf607b336586da96e940b5159",
        "changes": {
            "src/main/java/org/apache/ws/security/saml/ext/OpenSAMLBootstrap.java": {
                "old": {
                    "('org.apache.ws.security.saml.ext#OpenSAMLBootstrap', 'bootstrap')": [
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        27,
                        100,
                        101
                    ],
                    "('org.apache.ws.security.saml.ext#OpenSAMLBootstrap', None)": [
                        89
                    ],
                    "('org.apache.ws.security.saml.ext#OpenSAMLBootstrap', 'initializeXMLTooling(String)')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ]
                }
            }
        }
    },
    "6d1c9098dc66dccaf607b336586da96e940b5159": {
        "authored_data": "2012 Jun 22 15:13",
        "commit.message": "[WSS-395] - Support Certificate Constraints on the Subject DN of the certificate used for signature validation\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "bb10608a3ad49e4bd7fe4e774c2818c549c5dbc2",
        "changes": {
            "src/main/java/org/apache/ws/security/handler/RequestData.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        503
                    ],
                    "('org.apache.ws.security.handler#RequestData', None)": [
                        48,
                        85,
                        488,
                        489,
                        490,
                        491,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'clear')": [
                        109
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'setSubjectCertConstraints(Collection)')": [
                        492,
                        493,
                        494
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'getSubjectCertConstraints')": [
                        501,
                        502
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandler.java": {
                "new": {
                    "(None, None)": [
                        45,
                        50,
                        51
                    ],
                    "('org.apache.ws.security.handler#WSHandler', 'decodeSignatureParameter2(RequestData)')": [
                        1111,
                        1112,
                        1113,
                        1114,
                        1115,
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124,
                        1125,
                        1126,
                        1127
                    ],
                    "('org.apache.ws.security.handler#WSHandler', None)": [
                        1128,
                        1129
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandlerConstants.java": {
                "new": {
                    "('org.apache.ws.security.handler#WSHandlerConstants', None)": [
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/validate/SignatureTrustValidator.java": {
                "old": {
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'validate(Credential,RequestData)')": [
                        69,
                        71
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', None)": [
                        125,
                        126,
                        127,
                        128,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto)')": [
                        129,
                        130,
                        131
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto,boolean)')": [
                        224
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto)')": [
                        288
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto,boolean)')": [
                        321
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        382,
                        383
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'validate(Credential,RequestData)')": [
                        72,
                        74
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', None)": [
                        114,
                        115,
                        116,
                        120,
                        121,
                        122,
                        140,
                        280,
                        281,
                        282,
                        296,
                        348,
                        349,
                        350,
                        351,
                        352
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto)')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto,boolean)')": [
                        123,
                        124,
                        125
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCert(X509Certificate,Crypto,RequestData,boolean)')": [
                        148,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto)')": [
                        279
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto,boolean)')": [
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'verifyTrustInCerts(X509Certificate,Crypto,RequestData,boolean)')": [
                        304,
                        323,
                        324,
                        325,
                        326
                    ],
                    "('org.apache.ws.security.validate#SignatureTrustValidator', 'matches(java,Collection)')": [
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381
                    ]
                }
            }
        }
    }
}