{
    "c3091465235c6e5e7e6bdb661336615f793ec5b9": {
        "authored_data": "2012 Jan 27 12:28",
        "commit.message": "[WSS-187] - Support UsernameToken nonce caching\n - Timestamp Created caching is also done as part of this commit, as long as a Signature is included in the same Security Header\n - Caching is not enabled by default, but retrieved via RequestData\n - Users must instantiate a \"ReplayCache\" implementation and set it on RequestData for caching to work\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "5639a08e68fd51df8c6fe564b966941398addf23",
        "changes": {
            "src/main/java/org/apache/ws/security/handler/RequestData.java": {
                "new": {
                    "(None, None)": [
                        27,
                        482,
                        483
                    ],
                    "('org.apache.ws.security.handler#RequestData', None)": [
                        80,
                        81,
                        455,
                        456,
                        457,
                        458,
                        461,
                        462,
                        463,
                        464,
                        465,
                        468,
                        469,
                        470,
                        471,
                        472,
                        475,
                        476,
                        477,
                        478,
                        479
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'clear')": [
                        103,
                        104
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'setTimestampReplayCache(ReplayCache)')": [
                        459,
                        460
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'getTimestampReplayCache')": [
                        466,
                        467
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'setNonceReplayCache(ReplayCache)')": [
                        473,
                        474
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'getNonceReplayCache')": [
                        480,
                        481
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        189
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        38,
                        44,
                        73,
                        75,
                        76,
                        648,
                        649,
                        650
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        195
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'verifyXMLSignature(Element,X509Certificate,PublicKey,byte,String,RequestData,WSDocInfo)')": [
                        344,
                        371,
                        372,
                        373,
                        374,
                        400,
                        401
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', None)": [
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592
                    ],
                    "('org.apache.ws.security.processor#SignatureProcessor', 'testMessageReplay(Element,byte,RequestData,WSDocInfo)')": [
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/UsernameTokenProcessor.java": {
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.ws.security.processor#UsernameTokenProcessor', 'handleUsernameToken(Element,Validator,RequestData)')": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            }
        }
    },
    "5639a08e68fd51df8c6fe564b966941398addf23": {
        "authored_data": "2012 Jan 26 11:14",
        "commit.message": "Simplifying Crypto caching logic a bit\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "251d753d78f0ae8e60ed508d644283958cdad93a",
        "changes": {
            "src/main/java/org/apache/ws/security/handler/WSHandler.java": {
                "old": {
                    "('org.apache.ws.security.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        795,
                        796,
                        797,
                        798,
                        802,
                        803,
                        804
                    ]
                },
                "new": {
                    "('org.apache.ws.security.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        795,
                        796,
                        797,
                        798,
                        801,
                        802,
                        803
                    ]
                }
            }
        }
    },
    "251d753d78f0ae8e60ed508d644283958cdad93a": {
        "authored_data": "2012 Jan 24 16:39",
        "commit.message": "[WSS-337] - Validate SAML Assertions against schema/specs\n - Some fixes were made to the SAML creation code for schema compliance...\n  -- A default authentication instant is added if none is specified for authn statements\n  -- It's now possible to specify AuthnContextClassRefs that are not just \"password\"\n  -- A default SAML Action namespace is added if none is specified\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "8b000655bd33990f1f8b467092c36f22111e35e9",
        "changes": {
            "src/main/java/org/apache/ws/security/saml/ext/builder/SAML2ComponentBuilder.java": {
                "old": {
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', 'createAuthnStatement(List)')": [
                        272
                    ],
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', None)": [
                        305
                    ]
                },
                "new": {
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', 'createAuthnStatement(List)')": [
                        272,
                        273,
                        274,
                        275,
                        276
                    ],
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', 'transformAuthenticationMethod(String)')": [
                        318,
                        319
                    ],
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', 'createSamlAction(ActionBean)')": [
                        654,
                        655,
                        656
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/validate/SamlAssertionValidator.java": {
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.ws.security.validate#SamlAssertionValidator', 'validate(Credential,RequestData)')": [
                        80,
                        81,
                        82
                    ],
                    "('org.apache.ws.security.validate#SamlAssertionValidator', None)": [
                        137,
                        138,
                        139
                    ],
                    "('org.apache.ws.security.validate#SamlAssertionValidator', 'validateAssertion(AssertionWrapper)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ]
                }
            },
            "src/test/java/org/apache/ws/security/common/AbstractSAMLCallbackHandler.java": {
                "old": {
                    "('org.apache.ws.security.common#AbstractSAMLCallbackHandler', 'createAndSetStatement(SubjectBean,SAMLCallback)')": [
                        137,
                        138,
                        139
                    ]
                },
                "new": {
                    "('org.apache.ws.security.common#AbstractSAMLCallbackHandler', 'createAndSetStatement(SubjectBean,SAMLCallback)')": [
                        135,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            },
            "src/test/java/org/apache/ws/security/saml/SamlTokenTest.java": {
                "new": {
                    "('org.apache.ws.security.saml#SamlTokenTest', 'testSAML1AuthzAssertion')": [
                        227
                    ],
                    "('org.apache.ws.security.saml#SamlTokenTest', 'testSAML2AuthzAssertion')": [
                        339
                    ]
                }
            }
        }
    },
    "0010a1933d1fe089aa6b7bbe15476443f2c00af6": {
        "authored_data": "2012 Jan 23 12:32",
        "commit.message": "[WSS-336] - Option for checking EncryptedData elements are covered by signature\n - Patch applied, thanks\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "9536a09142a26a83619d3eb85c9481c0ca2477da",
        "changes": {
            "src/main/java/org/apache/ws/security/WSConstants.java": {
                "new": {
                    "('org.apache.ws.security#WSConstants', None)": [
                        150,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/WSDocInfo.java": {
                "old": {
                    "(None, None)": [
                        38,
                        41,
                        42,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        310
                    ],
                    "('org.apache.ws.security#WSDocInfo', None)": [
                        52,
                        296,
                        297,
                        298,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.ws.security#WSDocInfo', 'getSecurityHeader')": [
                        299,
                        300
                    ],
                    "('org.apache.ws.security#WSDocInfo', 'setSecurityHeader(Element)')": [
                        308,
                        309
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/WSSecurityEngine.java": {
                "new": {
                    "('org.apache.ws.security#WSSecurityEngine', 'processSecurityHeader(Element,RequestData)')": [
                        364
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/RequestData.java": {
                "new": {
                    "('org.apache.ws.security.handler#RequestData', None)": [
                        78,
                        404,
                        405,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        420,
                        421,
                        422
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'isRequireSignedEncryptedDataElements')": [
                        406,
                        407
                    ],
                    "('org.apache.ws.security.handler#RequestData', 'setRequireSignedEncryptedDataElements(boolean)')": [
                        418,
                        419
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandler.java": {
                "new": {
                    "('org.apache.ws.security.handler#WSHandler', 'doReceiverAction(int,RequestData)')": [
                        283
                    ],
                    "('org.apache.ws.security.handler#WSHandler', 'decodeRequireSignedEncryptedDataElements(RequestData)')": [
                        698,
                        699,
                        700,
                        701
                    ],
                    "('org.apache.ws.security.handler#WSHandler', None)": [
                        702,
                        703,
                        704
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandlerConstants.java": {
                "new": {
                    "('org.apache.ws.security.handler#WSHandlerConstants', None)": [
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        673
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/EncryptedDataProcessor.java": {
                "new": {
                    "('org.apache.ws.security.processor#EncryptedDataProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        122,
                        123
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'decryptDataRefs(List,Document,WSDocInfo,byte)')": [
                        296,
                        297,
                        308
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'decryptDataRef(Document,String,WSDocInfo,byte)')": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        122,
                        123
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'decryptDataRefs(List,Document,WSDocInfo,byte,RequestData)')": [
                        296,
                        297,
                        308
                    ],
                    "('org.apache.ws.security.processor#EncryptedKeyProcessor', 'decryptDataRef(Document,String,WSDocInfo,byte,RequestData)')": [
                        321,
                        322,
                        332,
                        333,
                        334
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/processor/ReferenceListProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'handleReferenceList(Element,RequestData,WSDocInfo)')": [
                        95
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'decryptDataRefEmbedded(Document,String,RequestData,WSDocInfo)')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'handleReferenceList(Element,RequestData,WSDocInfo)')": [
                        82,
                        83,
                        84,
                        85,
                        99
                    ],
                    "('org.apache.ws.security.processor#ReferenceListProcessor', 'decryptDataRefEmbedded(Document,String,RequestData,WSDocInfo,boolean)')": [
                        115,
                        116,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/util/WSSecurityUtil.java": {
                "new": {
                    "(None, None)": [
                        53,
                        56,
                        1348,
                        1349
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', 'verifySignedElement(Element,Document,Element)')": [
                        1298,
                        1299,
                        1300,
                        1301,
                        1302,
                        1303,
                        1304,
                        1305,
                        1306,
                        1307,
                        1308,
                        1309,
                        1310,
                        1311,
                        1312,
                        1313,
                        1314,
                        1315,
                        1316,
                        1317,
                        1318
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', None)": [
                        1319,
                        1320,
                        1329,
                        1330
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', 'isLinkedBySignatureRefs(Element,Set)')": [
                        1321,
                        1322,
                        1323,
                        1324,
                        1325,
                        1326,
                        1327,
                        1328
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', 'getSignatureReferenceIDs(Element)')": [
                        1331,
                        1332,
                        1333,
                        1334,
                        1335,
                        1336,
                        1337,
                        1338,
                        1339,
                        1340,
                        1341,
                        1342,
                        1343,
                        1344,
                        1345,
                        1346,
                        1347
                    ]
                }
            }
        }
    },
    "9536a09142a26a83619d3eb85c9481c0ca2477da": {
        "authored_data": "2012 Jan 20 11:22",
        "commit.message": "[WSS-335] - SAML NotOnOrAfter Conditions not set correctly in certain circumstances\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "47ebe1f6fb875ba44e7c9c50abc6bd75194a7c82",
        "changes": {
            "src/main/java/org/apache/ws/security/saml/ext/builder/SAML1ComponentBuilder.java": {
                "new": {
                    "('org.apache.ws.security.saml.ext.builder#SAML1ComponentBuilder', 'createSamlv1Conditions(ConditionsBean)')": [
                        272,
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/saml/ext/builder/SAML2ComponentBuilder.java": {
                "new": {
                    "('org.apache.ws.security.saml.ext.builder#SAML2ComponentBuilder', 'createConditions(ConditionsBean)')": [
                        201,
                        202,
                        203
                    ]
                }
            }
        }
    },
    "47ebe1f6fb875ba44e7c9c50abc6bd75194a7c82": {
        "authored_data": "2012 Jan 17 14:24",
        "commit.message": "[WSS-333] - MerlinDevice tries to load truststore of type \"trustStorePassword\"\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "41b320e7e59e278132986dcd16534e341bce5075",
        "changes": {
            "src/main/java/org/apache/ws/security/components/crypto/MerlinDevice.java": {
                "old": {
                    "('org.apache.ws.security.components.crypto#MerlinDevice', 'loadProperties(Properties,ClassLoader)')": [
                        160
                    ]
                },
                "new": {
                    "('org.apache.ws.security.components.crypto#MerlinDevice', 'loadProperties(Properties,ClassLoader)')": [
                        160
                    ]
                }
            }
        }
    },
    "41b320e7e59e278132986dcd16534e341bce5075": {
        "authored_data": "2012 Jan 17 11:02",
        "commit.message": "Change ENC/SIG/DEC Prop Ref Id so that it can also refer to a Crypto instance\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "c9c9f234eeafd269585db554e28daae12f19365e",
        "changes": {
            "src/main/java/org/apache/ws/security/handler/WSHandler.java": {
                "old": {
                    "('org.apache.ws.security.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        787,
                        788,
                        791
                    ]
                },
                "new": {
                    "('org.apache.ws.security.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        787,
                        788,
                        791,
                        794,
                        795,
                        796
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/handler/WSHandlerConstants.java": {
                "old": {
                    "('org.apache.ws.security.handler#WSHandlerConstants', None)": [
                        266,
                        267,
                        268,
                        269,
                        288,
                        289,
                        290,
                        291,
                        310,
                        311,
                        312,
                        313
                    ]
                },
                "new": {
                    "('org.apache.ws.security.handler#WSHandlerConstants', None)": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        289,
                        290,
                        291,
                        292,
                        293,
                        312,
                        313,
                        314,
                        315,
                        316
                    ]
                }
            }
        }
    },
    "c9c9f234eeafd269585db554e28daae12f19365e": {
        "authored_data": "2012 Jan 16 15:35",
        "commit.message": "Store the UsernameToken derived key in the UTProcessor\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "85387301e3d43d0a903833fdaf61dcf430dfb82f",
        "changes": {
            "src/main/java/org/apache/ws/security/processor/UsernameTokenProcessor.java": {
                "new": {
                    "('org.apache.ws.security.processor#UsernameTokenProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        69,
                        72,
                        73,
                        74,
                        75,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/str/DerivedKeyTokenSTRParser.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.ws.security.str#DerivedKeyTokenSTRParser', 'processPreviousResult(WSSecurityEngineResult,SecurityTokenReference,RequestData,WSDocInfo,boolean)')": [
                        253,
                        254,
                        255,
                        256
                    ]
                },
                "new": {
                    "('org.apache.ws.security.str#DerivedKeyTokenSTRParser', 'processPreviousResult(WSSecurityEngineResult,SecurityTokenReference,RequestData,WSDocInfo,boolean)')": [
                        252
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/str/SignatureSTRParser.java": {
                "old": {
                    "('org.apache.ws.security.str#SignatureSTRParser', 'processPreviousResult(WSSecurityEngineResult,SecurityTokenReference,RequestData,Map,boolean)')": [
                        400
                    ]
                },
                "new": {
                    "('org.apache.ws.security.str#SignatureSTRParser', 'processPreviousResult(WSSecurityEngineResult,SecurityTokenReference,RequestData,Map,boolean)')": [
                        400
                    ]
                }
            }
        }
    },
    "85387301e3d43d0a903833fdaf61dcf430dfb82f": {
        "authored_data": "2012 Jan 16 12:12",
        "commit.message": "Only set the found Id on the context\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "388211fbdc8c33e6f119d89102658082ddf55387",
        "changes": {
            "src/main/java/org/apache/ws/security/processor/SignatureProcessor.java": {
                "old": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'setElementsOnContext(XMLSignature,DOMValidateContext,WSDocInfo,Document)')": [
                        425
                    ]
                },
                "new": {
                    "('org.apache.ws.security.processor#SignatureProcessor', 'setElementsOnContext(XMLSignature,DOMValidateContext,WSDocInfo,Document)')": [
                        425
                    ]
                }
            },
            "src/main/java/org/apache/ws/security/util/WSSecurityUtil.java": {
                "old": {
                    "('org.apache.ws.security.util#WSSecurityUtil', 'storeElementInContext(DOMCryptoContext,Element)')": [
                        1246,
                        1251
                    ]
                },
                "new": {
                    "('org.apache.ws.security.util#WSSecurityUtil', None)": [
                        1244,
                        1245,
                        1271,
                        1272,
                        1273,
                        1274,
                        1275
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', 'storeElementInContext(DOMCryptoContext,String,Element)')": [
                        1246,
                        1247,
                        1248,
                        1249,
                        1250,
                        1251,
                        1252,
                        1253,
                        1254,
                        1255,
                        1256,
                        1257,
                        1258,
                        1259,
                        1260,
                        1261,
                        1262,
                        1263,
                        1264,
                        1265,
                        1266,
                        1267,
                        1268,
                        1269,
                        1270
                    ],
                    "('org.apache.ws.security.util#WSSecurityUtil', 'storeElementInContext(DOMCryptoContext,Element)')": [
                        1278,
                        1279,
                        1280,
                        1281,
                        1286
                    ]
                }
            }
        }
    }
}