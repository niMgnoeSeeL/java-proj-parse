{
    "a25fe1685f1474131cf7177b24a8182618b52f65": {
        "authored_data": "2013 Sep 18 11:17",
        "commit.message": "[WSS-375] - \"Support IssuedToken policy validationSupport IssuedToken policy validation\n - Some minor additions\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "c7a70cba7b4bf080e061ecb4af9e8e0fdfdf6104",
        "changes": {
            "ws-security-policy-stax/src/main/java/org/apache/wss4j/policy/stax/assertionStates/IssuedTokenAssertionState.java": {
                "old": {
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'validateClaims(Element,SamlTokenSecurityEvent)')": [
                        187,
                        188,
                        189,
                        190
                    ]
                },
                "new": {
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', None)": [
                        52,
                        53,
                        54
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'assertToken(TokenSecurityEvent,AbstractToken)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.wss4j.policy.stax.assertionStates#IssuedTokenAssertionState', 'validateClaims(Element,SamlTokenSecurityEvent)')": [
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                }
            }
        }
    },
    "c7a70cba7b4bf080e061ecb4af9e8e0fdfdf6104": {
        "authored_data": "2013 Sep 17 15:52",
        "commit.message": "[WSS-477] - Support the ability to create SAML2 Assertions with OneTimeUse + ProxyRestriction Conditions\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "0545e606c94a65a890ab3d64511359dbc2a42a3b",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/saml/bean/ConditionsBean.java": {
                "new": {
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', None)": [
                        34,
                        35,
                        141,
                        142,
                        143,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        154,
                        155,
                        158,
                        159,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'isOneTimeUse')": [
                        144,
                        145
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'setOneTimeUse(boolean)')": [
                        152,
                        153
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'getProxyRestriction')": [
                        156,
                        157
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'setProxyRestriction(ProxyRestrictionBean)')": [
                        160,
                        161
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'equals(Object)')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202
                    ],
                    "('org.apache.wss4j.common.saml.bean#ConditionsBean', 'hashCode')": [
                        224,
                        225,
                        226,
                        227
                    ],
                    "(None, None)": [
                        230
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/saml/builder/SAML2ComponentBuilder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        39,
                        61,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        56,
                        57
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', None)": [
                        85,
                        86,
                        87,
                        88,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createConditions(ConditionsBean)')": [
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createOneTimeUse')": [
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.wss4j.common.saml.builder#SAML2ComponentBuilder', 'createProxyRestriction(ProxyRestrictionBean)')": [
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlConditionsTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        25,
                        26,
                        27,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.wss4j.dom.saml#SamlConditionsTest', None)": [
                        238,
                        239,
                        240,
                        241,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        317,
                        318,
                        319
                    ],
                    "('org.apache.wss4j.dom.saml#SamlConditionsTest', 'testSAML2OneTimeUse')": [
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272
                    ],
                    "('org.apache.wss4j.dom.saml#SamlConditionsTest', 'testSAML2ProxyRestriction')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316
                    ]
                }
            }
        }
    },
    "0545e606c94a65a890ab3d64511359dbc2a42a3b": {
        "authored_data": "2013 Sep 17 13:39",
        "commit.message": "[WSS-428] - It should be possible to use the useReqSigCert even when the certificate is not sent in the request\n - Already supported, but tests added\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "8fa94d5b05e6005439447c79869ddcef280eb9dd",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/ConfigurationConstants.java": {
                "old": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        190
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        190
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java": {
                "old": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'decodeEncryptionParameter(RequestData)')": [
                        658,
                        659,
                        660,
                        661,
                        662
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'decodeEncryptionParameter(RequestData)')": [
                        658
                    ]
                }
            }
        }
    },
    "8fa94d5b05e6005439447c79869ddcef280eb9dd": {
        "authored_data": "2013 Sep 02 14:26",
        "commit.message": "Renaming default PasswordEncryptor based on Jasypt to allow for different algorithms to be used\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "2e922124c8e68ca0815f2f4c44a6d236e549eff9",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/ConfigurationConstants.java": {
                "old": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        831
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        831
                    ]
                }
            },
            "ws-security-common/src/test/java/org/apache/wss4j/common/crypto/PasswordEncryptorTest.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#PasswordEncryptorTest', 'testStrongJasyptPasswordEncryptor')": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#PasswordEncryptorTest', 'testStrongJasyptPasswordEncryptor')": [
                        32
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java": {
                "old": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'getPasswordEncryptor(RequestData)')": [
                        1098
                    ]
                },
                "new": {
                    "(None, None)": [
                        46
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'getPasswordEncryptor(RequestData)')": [
                        1098
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/PasswordEncryptorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.wss4j.dom.message#PasswordEncryptorTest', None)": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.wss4j.dom.message#PasswordEncryptorTest', None)": [
                        57
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ConfigurationConverter.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseCrypto(Map,WSSSecurityProperties)')": [
                        170
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseCrypto(Map,WSSSecurityProperties)')": [
                        170
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/PasswordEncryptorTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.wss4j.stax.test#PasswordEncryptorTest', 'testSignatureCryptoPropertiesOutbound')": [
                        66
                    ],
                    "('org.apache.wss4j.stax.test#PasswordEncryptorTest', 'testEncDecryptionCryptoPropertiesOutbound')": [
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.wss4j.stax.test#PasswordEncryptorTest', 'testSignatureCryptoPropertiesOutbound')": [
                        66
                    ],
                    "('org.apache.wss4j.stax.test#PasswordEncryptorTest', 'testEncDecryptionCryptoPropertiesOutbound')": [
                        113
                    ]
                }
            }
        }
    },
    "2e922124c8e68ca0815f2f4c44a6d236e549eff9": {
        "authored_data": "2013 Aug 21 17:03",
        "commit.message": "Fix eclipse warnings\n",
        "commit.author.name": "Daniel Kulp",
        "pcid": "1686a717df9f163c01030b0302d8857ffa60b551",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/kerberos/KerberosTokenDecoderException.java": {
                "new": {
                    "('org.apache.wss4j.common.kerberos#KerberosTokenDecoderException', None)": [
                        23,
                        24
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/DerivedKeyTokenTest.java": {
                "old": {
                    "(None, None)": [
                        46
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/SecurityContextTokenTest.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                }
            }
        }
    },
    "b2dab614dd0a254a11ba75a5a69c2ade8803381f": {
        "authored_data": "2013 Aug 20 10:38",
        "commit.message": "[WSS-383] - Allow encrypted password storage in signaturePropFile\n - Details forthcoming...\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "415f9f2d7b1ba6da4fc2753c1ef538773a76324d",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/ConfigurationConstants.java": {
                "new": {
                    "('org.apache.wss4j.common#ConfigurationConstants', None)": [
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838
                    ],
                    "(None, None)": [
                        839
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoFactory.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties)')": [
                        80
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties,ClassLoader)')": [
                        101,
                        121
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(String,ClassLoader)')": [
                        193
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties)')": [
                        80
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', None)": [
                        96
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(Properties,ClassLoader,PasswordEncryptor)')": [
                        102,
                        103,
                        123
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoFactory', 'getInstance(String,ClassLoader)')": [
                        195
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', None)": [
                        150,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        163,
                        164
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'loadProperties(Properties)')": [
                        160,
                        161,
                        162
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'loadProperties(Properties,ClassLoader)')": [
                        165,
                        166
                    ],
                    "(None, None)": [
                        1483
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#Merlin', None)": [
                        71,
                        72,
                        73,
                        120,
                        154,
                        156,
                        157,
                        158,
                        1500,
                        1501
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'loadProperties(Properties,ClassLoader,PasswordEncryptor)')": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        168,
                        214,
                        254,
                        288
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getPrivateKey(X509Certificate,CallbackHandler)')": [
                        693
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'decryptPassword(String,PasswordEncryptor)')": [
                        1485,
                        1486,
                        1487,
                        1488,
                        1489,
                        1490,
                        1491,
                        1492,
                        1493,
                        1494,
                        1495,
                        1496,
                        1497,
                        1498,
                        1499
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'setPasswordEncryptor(PasswordEncryptor)')": [
                        1502,
                        1503
                    ],
                    "(None, None)": [
                        1504
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/MerlinDevice.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#MerlinDevice', 'loadProperties(Properties,ClassLoader)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#MerlinDevice', 'loadProperties(Properties,ClassLoader,PasswordEncryptor)')": [
                        48,
                        80,
                        113,
                        152
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/ext/WSPasswordCallback.java": {
                "old": {
                    "(None, None)": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        48,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.wss4j.common.ext#WSPasswordCallback', None)": [
                        70
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/action/SignatureAction.java": {
                "old": {
                    "('org.apache.wss4j.dom.action#SignatureAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        40,
                        41
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.action#SignatureAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/action/UsernameTokenSignedAction.java": {
                "old": {
                    "('org.apache.wss4j.dom.action#UsernameTokenSignedAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.action#UsernameTokenSignedAction', 'execute(WSHandler,int,Document,RequestData)')": [
                        49,
                        50,
                        51,
                        52
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/RequestData.java": {
                "new": {
                    "(None, None)": [
                        44,
                        675
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', None)": [
                        108,
                        668,
                        671,
                        672
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'clear')": [
                        145
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'getPasswordEncryptor')": [
                        669,
                        670
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'setPasswordEncryptor(PasswordEncryptor)')": [
                        673,
                        674
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/WSHandler.java": {
                "old": {
                    "('org.apache.wss4j.dom.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        934
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'loadCryptoFromPropertiesFile(String,RequestData)')": [
                        984
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        47
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doSenderAction(int,Document,RequestData,List,boolean)')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'doReceiverAction(int,RequestData)')": [
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'loadCrypto(String,String,RequestData)')": [
                        951,
                        952,
                        953
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'loadCryptoFromPropertiesFile(String,RequestData)')": [
                        1001,
                        1002,
                        1005
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', None)": [
                        1089,
                        1090
                    ],
                    "('org.apache.wss4j.dom.handler#WSHandler', 'getPasswordEncryptor(RequestData)')": [
                        1091,
                        1092,
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/common/KeystoreCallbackHandler.java": {
                "old": {
                    "('org.apache.wss4j.dom.common#KeystoreCallbackHandler', 'handle(Callback)')": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.common#KeystoreCallbackHandler', 'handle(Callback)')": [
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/components/crypto/CryptoTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.components.crypto#CryptoTest', None)": [
                        146
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.components.crypto#CryptoTest', None)": [
                        146
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ConfigurationConverter.java": {
                "old": {
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'convert(Map)')": [
                        70
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseCrypto(Map,WSSSecurityProperties)')": [
                        168,
                        181,
                        200,
                        210,
                        226,
                        236,
                        252,
                        262
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'convert(Map)')": [
                        71
                    ],
                    "('org.apache.wss4j.stax#ConfigurationConverter', 'parseCrypto(Map,WSSSecurityProperties)')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        183,
                        196,
                        215,
                        225,
                        241,
                        251,
                        267,
                        277
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSCrypto.java": {
                "old": {
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'getCrypto')": [
                        54,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29,
                        30,
                        131
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', None)": [
                        47,
                        124,
                        127,
                        128
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'getCrypto')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        74
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'getPasswordEncryptor')": [
                        125,
                        126
                    ],
                    "('org.apache.wss4j.stax.ext#WSSCrypto', 'setPasswordEncryptor(PasswordEncryptor)')": [
                        129,
                        130
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/ext/WSSSecurityProperties.java": {
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setSignatureCryptoProperties(Properties)')": [
                        342
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', None)": [
                        343,
                        344,
                        418,
                        419,
                        497,
                        498,
                        591,
                        592
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setSignatureCryptoProperties(Properties,PasswordEncryptor)')": [
                        345,
                        346,
                        351
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setSignatureVerificationCryptoProperties(Properties)')": [
                        417
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setSignatureVerificationCryptoProperties(Properties,PasswordEncryptor)')": [
                        420,
                        421,
                        426
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setDecryptionCryptoProperties(Properties)')": [
                        496
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setDecryptionCryptoProperties(Properties,PasswordEncryptor)')": [
                        499,
                        500,
                        505
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setEncryptionCryptoProperties(Properties)')": [
                        590
                    ],
                    "('org.apache.wss4j.stax.ext#WSSSecurityProperties', 'setEncryptionCryptoProperties(Properties,PasswordEncryptor)')": [
                        593,
                        594,
                        599
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/CallbackHandlerImpl.java": {
                "new": {
                    "('org.apache.wss4j.stax.test#CallbackHandlerImpl', 'handle(Callback)')": [
                        73,
                        74
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/SignatureCertConstaintsTest.java": {
                "old": {
                    "('org.apache.wss4j.stax.test#SignatureCertConstaintsTest', 'doOutboundSecurityWithWSS4J_1(InputStream,String,Properties)')": [
                        196
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/SignatureTest.java": {
                "old": {
                    "(None, None)": [
                        71
                    ]
                }
            }
        }
    },
    "415f9f2d7b1ba6da4fc2753c1ef538773a76324d": {
        "authored_data": "2013 Aug 16 15:46",
        "commit.message": "[WSS-475] - Don't process an EncryptedKey again if it has already been processed\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "551e1ca99098ba3068f4fff6393d2475120cd697",
        "changes": {
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/EncryptedKeyProcessor.java": {
                "new": {
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'handleToken(Element,RequestData,WSDocInfo,AlgorithmSuite)')": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    },
    "551e1ca99098ba3068f4fff6393d2475120cd697": {
        "authored_data": "2013 Aug 16 10:31",
        "commit.message": "Fixed some caching issues with CXF\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "04cd1657fca9defc9551a7ba4e1610b2ad39640a",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/cache/EHCacheManagerHolder.java": {
                "old": {
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', 'getCacheManager(URL)')": [
                        93,
                        97,
                        103
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', 'findDefaultCacheManager')": [
                        118,
                        122,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        144
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', 'getCacheManager(String,URL)')": [
                        93,
                        97,
                        103
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', 'findDefaultCacheManager(String)')": [
                        118,
                        131
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', None)": [
                        132,
                        133
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheManagerHolder', 'findDefaultCacheManager(String,URL)')": [
                        134,
                        137,
                        140
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/cache/EHCacheReplayCache.java": {
                "old": {
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', None)": [
                        39,
                        40,
                        41,
                        44
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', 'add(String,long)')": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', None)": [
                        39,
                        40,
                        41,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.wss4j.common.cache#EHCacheReplayCache', 'add(String,long)')": [
                        103
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/cache/ReplayCacheFactory.java": {
                "old": {
                    "('org.apache.wss4j.common.cache#ReplayCacheFactory', 'isEhCacheInstalled')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.cache#ReplayCacheFactory', 'isEhCacheInstalled')": [
                        49
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/handler/RequestData.java": {
                "old": {
                    "('org.apache.wss4j.dom.handler#RequestData', 'getTimestampReplayCache')": [
                        502
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'getNonceReplayCache')": [
                        527
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.handler#RequestData', None)": [
                        105,
                        106,
                        147,
                        148,
                        151,
                        152,
                        155,
                        156,
                        159,
                        160
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'clear')": [
                        141,
                        142
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'isEnableTimestampReplayCache')": [
                        149,
                        150
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'setEnableTimestampReplayCache(boolean)')": [
                        153,
                        154
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'isEnableNonceReplayCache')": [
                        157,
                        158
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'setEnableNonceReplayCache(boolean)')": [
                        161,
                        162
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'getTimestampReplayCache')": [
                        522
                    ],
                    "('org.apache.wss4j.dom.handler#RequestData', 'getNonceReplayCache')": [
                        547
                    ]
                }
            }
        }
    }
}