{
    "93798162200d1e833936c684ba9839db57ded433": {
        "authored_data": "2016 Mar 02 10:30",
        "commit.message": "Provides the possibility to set a trustpovider\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "53131301cb32b92baebb864fff6952f084539121",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Crypto.java": {
                "old": {
                    "(None, None)": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/CryptoBase.java": {
                "new": {
                    "('org.apache.wss4j.common.crypto#CryptoBase', None)": [
                        66,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoBase', 'setTrustProvider(String)')": [
                        105,
                        106
                    ],
                    "('org.apache.wss4j.common.crypto#CryptoBase', 'getTrustProvider')": [
                        113,
                        114
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'loadProperties(Properties,ClassLoader,PasswordEncryptor)')": [
                        180,
                        181,
                        182,
                        213,
                        248,
                        292,
                        303
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#Merlin', None)": [
                        109
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'loadProperties(Properties,ClassLoader,PasswordEncryptor)')": [
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        218,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        268,
                        301,
                        313,
                        324
                    ]
                }
            }
        }
    },
    "53131301cb32b92baebb864fff6952f084539121": {
        "authored_data": "2016 Mar 01 11:05",
        "commit.message": "Respects provider when creating Cipher instances\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "ab1961e25742cb85d10d21840ebcb82222ebcefc",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/KeyUtils.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('org.apache.wss4j.common.util#KeyUtils', None)": [
                        53,
                        121
                    ],
                    "('org.apache.wss4j.common.util#KeyUtils', 'getCipherInstance(String)')": [
                        128,
                        129,
                        130,
                        131,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        145,
                        146,
                        147,
                        148,
                        149,
                        152,
                        153,
                        154,
                        159
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        32,
                        33,
                        34
                    ],
                    "('org.apache.wss4j.common.util#KeyUtils', None)": [
                        40,
                        54,
                        125,
                        126,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.wss4j.common.util#KeyUtils', 'getCipherInstance(String)')": [
                        130
                    ],
                    "('org.apache.wss4j.common.util#KeyUtils', 'getCipherInstance(String,String)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        158,
                        159,
                        160,
                        161,
                        163,
                        164,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        201
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'getAsymmetricDecryptedBytes(RequestData,WSDocInfo,String,byte,Element,Element,PrivateKey)')": [
                        294
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'getAsymmetricDecryptedBytes(RequestData,WSDocInfo,String,byte,Element,Element,PrivateKey)')": [
                        294,
                        295,
                        332
                    ]
                }
            }
        }
    },
    "bdabd0d14e7c6e6b1070ae61ae5aa8c06e3fa075": {
        "authored_data": "2016 Feb 29 11:26",
        "commit.message": "Fixes a typo in the constant name for \"RSAOAEP\".\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "8835949119980d35f4e63bc28527b789ecc53b21",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/WSS4JConstants.java": {
                "old": {
                    "('org.apache.wss4j.common#WSS4JConstants', None)": [
                        107,
                        109
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common#WSS4JConstants', None)": [
                        107,
                        109
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncryptedKey.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', None)": [
                        96
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'encryptSymmetricKey(PublicKey,SecretKey)')": [
                        250,
                        251,
                        258
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'createEncryptedKey(Document,String)')": [
                        712
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', None)": [
                        96
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'encryptSymmetricKey(PublicKey,SecretKey)')": [
                        250,
                        251,
                        258
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncryptedKey', 'createEncryptedKey(Document,String)')": [
                        712
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/EncryptedKeyProcessor.java": {
                "old": {
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'getAsymmetricDecryptedBytes(RequestData,WSDocInfo,String,byte,Element,Element,PrivateKey)')": [
                        297,
                        298,
                        307
                    ],
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'checkBSPCompliance(Element,String,BSPEnforcer)')": [
                        621,
                        622
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'getAsymmetricDecryptedBytes(RequestData,WSDocInfo,String,byte,Element,Element,PrivateKey)')": [
                        297,
                        298,
                        307
                    ],
                    "('org.apache.wss4j.dom.processor#EncryptedKeyProcessor', 'checkBSPCompliance(Element,String,BSPEnforcer)')": [
                        621,
                        622
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionAlgorithmSuiteTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#EncryptionAlgorithmSuiteTest', 'createAlgorithmSuite')": [
                        281
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#EncryptionAlgorithmSuiteTest', 'createAlgorithmSuite')": [
                        281
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionGCMTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', 'testAES192GCM_RSAOAEP_SHA256_MGFSHA256')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#EncryptionGCMTest', 'testAES192GCM_RSAOAEP_SHA256_MGFSHA256')": [
                        130
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionPartsTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPHeader')": [
                        129
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPEncryptedHeader')": [
                        292
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPEncryptedHeaderWithAttributes')": [
                        340
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPHeader')": [
                        129
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPEncryptedHeader')": [
                        292
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionPartsTest', 'testSOAPEncryptedHeaderWithAttributes')": [
                        340
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/EncryptionTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionOAEP')": [
                        195
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionPublicKey')": [
                        228
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionOAEPSHA256')": [
                        673
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionWithRegexpCert')": [
                        705
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionOAEP')": [
                        195
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionPublicKey')": [
                        228
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionDecryptionOAEPSHA256')": [
                        673
                    ],
                    "('org.apache.wss4j.dom.message#EncryptionTest', 'testEncryptionWithRegexpCert')": [
                        705
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/PasswordEncryptorTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#PasswordEncryptorTest', 'testDecryption')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#PasswordEncryptorTest', 'testDecryption')": [
                        139
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/saml/SamlTokenTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertion')": [
                        753
                    ],
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertionViaSeparateEncryptedKey')": [
                        842
                    ],
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertionNoSTR')": [
                        930
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertion')": [
                        753
                    ],
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertionViaSeparateEncryptedKey')": [
                        842
                    ],
                    "('org.apache.wss4j.dom.saml#SamlTokenTest', 'testSAML2EncryptedAssertionNoSTR')": [
                        930
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/saml/SAMLTokenTest.java": {
                "old": {
                    "('org.apache.wss4j.stax.test.saml#SAMLTokenTest', 'testSAML2EncryptedAssertion')": [
                        916
                    ]
                },
                "new": {
                    "('org.apache.wss4j.stax.test.saml#SAMLTokenTest', 'testSAML2EncryptedAssertion')": [
                        916
                    ]
                }
            }
        }
    },
    "8835949119980d35f4e63bc28527b789ecc53b21": {
        "authored_data": "2016 Feb 29 11:26",
        "commit.message": "Fixing error message\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "c362ae92b5bbf3a37147a77508578383446d4685",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'getCertificateFactory')": [
                        471
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'getCertificateFactory')": [
                        471
                    ]
                }
            }
        }
    },
    "c362ae92b5bbf3a37147a77508578383446d4685": {
        "authored_data": "2016 Feb 29 11:26",
        "commit.message": "Improves the error message\n\nThis adds some quotes around some data which would make it easy to spot\nwhitespace errors. Also, the error message that the given JCE provider\ndoes not handle X.509 is now more vocal and tells the developer that\nthe following exception is not the end of the world and he did nothing\nwrong at that point.\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "f78266251c3137de60cfe6e900a4db0b03e7e339",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/crypto/Merlin.java": {
                "old": {
                    "('org.apache.wss4j.common.crypto#Merlin', None)": [
                        320
                    ],
                    "('org.apache.wss4j.common.crypto#Merlin', 'getCertificateFactory')": [
                        471
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.crypto#Merlin', 'getCertificateFactory')": [
                        470,
                        471
                    ]
                }
            },
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/KeyUtils.java": {
                "old": {
                    "('org.apache.wss4j.common.util#KeyUtils', 'getCipherInstance(String)')": [
                        139,
                        149,
                        154,
                        159
                    ]
                },
                "new": {
                    "('org.apache.wss4j.common.util#KeyUtils', 'getCipherInstance(String)')": [
                        139,
                        149,
                        154,
                        159
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/CertErrorTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.message#CertErrorTest', 'testX509Signature')": [
                        60
                    ],
                    "('org.apache.wss4j.dom.message#CertErrorTest', 'testEncryption')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.message#CertErrorTest', 'testX509Signature')": [
                        60
                    ],
                    "('org.apache.wss4j.dom.message#CertErrorTest', 'testEncryption')": [
                        79
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/misc/FaultCodeTest.java": {
                "old": {
                    "('org.apache.wss4j.dom.misc#FaultCodeTest', 'testUnsupportedAlgorithm')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.misc#FaultCodeTest', 'testUnsupportedAlgorithm')": [
                        104
                    ]
                }
            }
        }
    },
    "f78266251c3137de60cfe6e900a4db0b03e7e339": {
        "authored_data": "2016 Feb 18 08:58",
        "commit.message": "[WSS-567] - processSecurityHeadaers does not work for 1.1 namespace\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "7eb16058c5504798bcc03a300973a442078e2681",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/WSS4JConstants.java": {
                "new": {
                    "('org.apache.wss4j.common#WSS4JConstants', None)": [
                        36,
                        37
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/util/WSSecurityUtil.java": {
                "old": {
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getSecurityHeader(Element,String,boolean)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.wss4j.dom.util#WSSecurityUtil', 'getSecurityHeader(Element,String,boolean)')": [
                        123,
                        124
                    ]
                }
            }
        }
    },
    "7eb16058c5504798bcc03a300973a442078e2681": {
        "authored_data": "2016 Feb 15 15:55",
        "commit.message": "Adding some logging\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "0c6f0f6e8c345670aaaf9f65afa7fa4115ea6b4a",
        "changes": {
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/processor/SignatureProcessor.java": {
                "new": {
                    "('org.apache.wss4j.dom.processor#SignatureProcessor', 'handleToken(Element,RequestData,WSDocInfo)')": [
                        196
                    ]
                }
            }
        }
    },
    "0c6f0f6e8c345670aaaf9f65afa7fa4115ea6b4a": {
        "authored_data": "2016 Feb 02 10:47",
        "commit.message": "[WSS-566] - AES_128_GCM does not work for attachments\n",
        "commit.author.name": "Colm O hEigeartaigh",
        "pcid": "542c3c8c7c28620d0f9ec3b8a7070dec8d300a68",
        "changes": {
            "ws-security-common/src/main/java/org/apache/wss4j/common/util/AttachmentUtils.java": {
                "old": {
                    "(None, None)": [
                        23,
                        28
                    ],
                    "('org.apache.wss4j.common.util#AttachmentUtils', 'setupAttachmentDecryptionStream(String,Cipher,Key,InputStream)')": [
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        495,
                        498
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        37
                    ],
                    "('org.apache.wss4j.common.util#AttachmentUtils', 'setupAttachmentDecryptionStream(String,Cipher,Key,InputStream)')": [
                        483,
                        485,
                        490,
                        491,
                        492,
                        495
                    ]
                }
            },
            "ws-security-dom/src/main/java/org/apache/wss4j/dom/message/WSSecEncrypt.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'createCipher(String,SecretKey)')": [
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        62,
                        65
                    ],
                    "('org.apache.wss4j.dom.message#WSSecEncrypt', 'createCipher(String,SecretKey)')": [
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642
                    ]
                }
            },
            "ws-security-dom/src/test/java/org/apache/wss4j/dom/message/AttachmentTest.java": {
                "new": {
                    "('org.apache.wss4j.dom.message#AttachmentTest', 'testXMLAttachmentContentEncryptionGCM')": [
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470
                    ],
                    "('org.apache.wss4j.dom.message#AttachmentTest', None)": [
                        471,
                        472,
                        473
                    ]
                }
            },
            "ws-security-stax/src/main/java/org/apache/wss4j/stax/impl/processor/output/EncryptOutputProcessor.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', 'setupAttachmentEncryptionStreams(OutputProcessorChain)')": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        48,
                        49
                    ],
                    "('org.apache.wss4j.stax.impl.processor.output#EncryptOutputProcessor', 'setupAttachmentEncryptionStreams(OutputProcessorChain)')": [
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                }
            },
            "ws-security-stax/src/test/java/org/apache/wss4j/stax/test/AttachmentTest.java": {
                "new": {
                    "('org.apache.wss4j.stax.test#AttachmentTest', None)": [
                        482,
                        483,
                        553
                    ],
                    "('org.apache.wss4j.stax.test#AttachmentTest', 'testXMLAttachmentContentEncryptionGCM')": [
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552
                    ],
                    "(None, None)": [
                        1325
                    ]
                }
            }
        }
    }
}