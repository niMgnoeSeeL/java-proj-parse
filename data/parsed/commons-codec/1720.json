{
    "95de62c7b90ad22b4051f3d4f61d99cec59ec487": {
        "authored_data": "2009 Jul 28 06:35",
        "commit.message": "Use existing ESCAPE_CHAR instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798416 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "31a3522f4eaf9a94e11fba52fab15e34b70906cf",
        "changes": {
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', 'encodeUrl(BitSet,byte)')": [
                        144
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decodeUrl(byte)')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', 'encodeUrl(BitSet,byte)')": [
                        144
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decodeUrl(byte)')": [
                        172
                    ]
                }
            }
        }
    },
    "31a3522f4eaf9a94e11fba52fab15e34b70906cf": {
        "authored_data": "2009 Jul 28 00:06",
        "commit.message": "We could make the constructor private but there does not seem to be a point to jumping through extra code hoops to restrict instantiation right now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798339 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "20a88d9b49beda71ddee69af92872716fd00f13a",
        "changes": {
            "src/java/org/apache/commons/codec/binary/StringUtils.java": {
                "old": {
                    "('org.apache.commons.codec.binary#StringUtils', None)": [
                        273
                    ],
                    "(None, None)": [
                        274,
                        275
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/StringUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#StringUtilsTest', None)": [
                        35,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.codec.binary#StringUtilsTest', 'testConstructor')": [
                        48,
                        49
                    ]
                }
            }
        }
    },
    "20a88d9b49beda71ddee69af92872716fd00f13a": {
        "authored_data": "2009 Jul 27 23:41",
        "commit.message": "- Applied patch for [CODEC-81] production pretty much unchanged. \n- Applied patch for [CODEC-81] tests and split one new unit test method into two tests. One for URL-safe and another for normal processing.\n- Renamed StringBytesUtils to StringUtils\n- Added missing @return tags to StringUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798333 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "84235691b5d1ae6d4705dba63c19dc1f6450021b",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        257,
                        279,
                        305,
                        317,
                        327
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(Object)')": [
                        672,
                        675
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(byte)')": [
                        686
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encodeBase64(byte,boolean,boolean,int)')": [
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decodeBase64(byte)')": [
                        787,
                        788,
                        789,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte)')": [
                        876
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        257,
                        279,
                        305,
                        317,
                        327,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(Object)')": [
                        672,
                        673,
                        674
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(byte)')": [
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encodeBase64(byte,boolean,boolean,int)')": [
                        760,
                        761,
                        768,
                        769,
                        770
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decodeBase64(byte)')": [
                        782
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte)')": [
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'getEncodeLength(byte,int,byte)')": [
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Base64InputStream.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        30,
                        31,
                        32,
                        33,
                        36,
                        38
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStream', None)": [
                        52,
                        53,
                        54,
                        55,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        100,
                        101,
                        115,
                        116,
                        117,
                        119,
                        120,
                        121,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStream', 'read(byte,int,int)')": [
                        141,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        29,
                        30,
                        31,
                        32,
                        35,
                        36,
                        38,
                        40
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStream', None)": [
                        49,
                        51,
                        55,
                        56,
                        57,
                        58,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        104,
                        105,
                        106,
                        120,
                        121,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        168
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Base64OutputStream.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        30,
                        31,
                        32,
                        33,
                        36,
                        39
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStream', None)": [
                        51,
                        52,
                        53,
                        54,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        113,
                        114,
                        115,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        158,
                        159,
                        160,
                        161,
                        168,
                        169
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStream', 'flush')": [
                        164
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        29,
                        30,
                        31,
                        32,
                        35,
                        36,
                        39,
                        40
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStream', None)": [
                        48,
                        50,
                        54,
                        55,
                        56,
                        57,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        102,
                        103,
                        104,
                        105,
                        106,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        172,
                        173,
                        174,
                        175,
                        182,
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStream', 'flush')": [
                        178
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(String,String)')": [
                        280
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(String,String)')": [
                        385
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(String,String)')": [
                        280
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(String,String)')": [
                        385
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/RFC1522Codec.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#RFC1522Codec', 'encodeText(String,String)')": [
                        79
                    ],
                    "('org.apache.commons.codec.net#RFC1522Codec', 'decodeText(String)')": [
                        128
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#RFC1522Codec', 'encodeText(String,String)')": [
                        79
                    ],
                    "('org.apache.commons.codec.net#RFC1522Codec', 'decodeText(String)')": [
                        128
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'encode(String,String)')": [
                        227
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decode(String,String)')": [
                        268
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'encode(String,String)')": [
                        227
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decode(String,String)')": [
                        268
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByChunk')": [
                        70,
                        71,
                        75,
                        80,
                        86
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByteByByte')": [
                        107,
                        108,
                        112,
                        117,
                        123
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testMarkSupported')": [
                        253
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testRead0')": [
                        266
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testReadNull')": [
                        282
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testReadOutOfBounds')": [
                        299
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByChunk')": [
                        70,
                        71,
                        75,
                        80,
                        86
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByteByByte')": [
                        107,
                        108,
                        112,
                        117,
                        123
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testMarkSupported')": [
                        253
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testRead0')": [
                        266
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testReadNull')": [
                        282
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testReadOutOfBounds')": [
                        299
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByChunk')": [
                        70,
                        71,
                        75,
                        80,
                        86
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByteByByte')": [
                        107,
                        108,
                        112,
                        117,
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByChunk')": [
                        70,
                        71,
                        75,
                        80,
                        86
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByteByByte')": [
                        107,
                        108,
                        112,
                        117,
                        123
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', None)": [
                        69,
                        70,
                        71,
                        852,
                        853
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testChunkedEncodeMultipleOf76')": [
                        72,
                        77
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testObjectDecodeWithValidParameter')": [
                        417,
                        418
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testObjectEncodeWithValidParameter')": [
                        441,
                        442
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testUUID')": [
                        874,
                        875,
                        876,
                        877,
                        881,
                        882,
                        883,
                        884,
                        888,
                        889,
                        890,
                        891,
                        895,
                        896,
                        897,
                        898,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', None)": [
                        69,
                        176,
                        177,
                        185,
                        186
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testChunkedEncodeMultipleOf76')": [
                        70,
                        75
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testConstructor_Int_ByteArray_Boolean')": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testConstructor_Int_ByteArray_Boolean_UrlSafe')": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testObjectDecodeWithValidParameter')": [
                        437
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testObjectEncodeWithValidParameter')": [
                        460
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testUUID')": [
                        890,
                        891,
                        892,
                        893,
                        897,
                        898,
                        899,
                        900,
                        904,
                        905,
                        906,
                        907,
                        911,
                        912,
                        913,
                        914,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944,
                        945,
                        946,
                        947
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64TestData.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            }
        }
    },
    "dd61a2d5258f831bb16a4ef1b94e74048d69058f": {
        "authored_data": "2009 Jul 26 14:19",
        "commit.message": "Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797938 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "a952f092987217322ceb6ab1d559d0612d02a778",
        "changes": {
            "src/java/org/apache/commons/codec/binary/BinaryCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        160
                    ]
                }
            }
        }
    },
    "a952f092987217322ceb6ab1d559d0612d02a778": {
        "authored_data": "2009 Jul 25 23:43",
        "commit.message": "Renamed RequiredCharsetNames to CharEncoding to match [lang]. Constant name and values are the same.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797857 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "a5973f330ff30773c2101343c3d6144cede156ed",
        "changes": {
            "src/java/org/apache/commons/codec/binary/StringBytesUtils.java": {
                "old": {
                    "(None, None)": [
                        22,
                        28
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesIso8859_1(String)')": [
                        49
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUsAscii(String)')": [
                        65
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16(String)')": [
                        81
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16Be(String)')": [
                        97
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16Le(String)')": [
                        113
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf8(String)')": [
                        129
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', None)": [
                        148,
                        177
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringIso8859_1(byte)')": [
                        198
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUsAscii(byte)')": [
                        211
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16(byte)')": [
                        224
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16Be(byte)')": [
                        237
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16Le(byte)')": [
                        250
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf8(byte)')": [
                        263
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        28
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesIso8859_1(String)')": [
                        49
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUsAscii(String)')": [
                        65
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16(String)')": [
                        81
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16Be(String)')": [
                        97
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf16Le(String)')": [
                        113
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'getBytesUtf8(String)')": [
                        129
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', None)": [
                        148,
                        177
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringIso8859_1(byte)')": [
                        198
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUsAscii(byte)')": [
                        211
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16(byte)')": [
                        224
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16Be(byte)')": [
                        237
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf16Le(byte)')": [
                        250
                    ],
                    "('org.apache.commons.codec.binary#StringBytesUtils', 'newStringUtf8(byte)')": [
                        263
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#BCodec', None)": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#BCodec', None)": [
                        58
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.codec.net#QCodec', None)": [
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.codec.net#QCodec', None)": [
                        113
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        96
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        102
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        102
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/BCodecTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#BCodecTest', 'testUTF8RoundTrip')": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#BCodecTest', 'testUTF8RoundTrip')": [
                        65
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QCodecTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.codec.net#QCodecTest', 'testUTF8RoundTrip')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.codec.net#QCodecTest', 'testUTF8RoundTrip')": [
                        69
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodecTest', 'testUTF8RoundTrip')": [
                        66,
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodecTest', 'testUTF8RoundTrip')": [
                        66,
                        68,
                        69,
                        70,
                        71
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.net#RFC1522CodecTest', 'testNullInput')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.net#RFC1522CodecTest', 'testNullInput')": [
                        56
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/URLCodecTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testUTF8RoundTrip')": [
                        73,
                        75,
                        76,
                        77,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testUTF8RoundTrip')": [
                        73,
                        75,
                        76,
                        77,
                        78
                    ]
                }
            }
        }
    },
    "a5973f330ff30773c2101343c3d6144cede156ed": {
        "authored_data": "2009 Jul 25 18:06",
        "commit.message": "ASF header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797810 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "2eef8dee31bbaa10ffb1264fbbe9aba1bc92c45b",
        "changes": {
            "src/test/org/apache/commons/codec/DecoderExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        4,
                        5
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/test/org/apache/commons/codec/EncoderExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        4,
                        5
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    },
    "2eef8dee31bbaa10ffb1264fbbe9aba1bc92c45b": {
        "authored_data": "2009 Jul 25 17:27",
        "commit.message": "Javadocs. Make our exceptions fit the Java 1.4 pattern. 100%/100% line/branch code coverage for the main package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797804 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "3210069a57d060b1aaec24af66042798c8942ef4",
        "changes": {
            "src/java/org/apache/commons/codec/DecoderException.java": {
                "old": {
                    "('org.apache.commons.codec#DecoderException', None)": [
                        36,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#DecoderException', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        57,
                        59,
                        60,
                        61,
                        62,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "(None, None)": [
                        87
                    ]
                }
            },
            "src/java/org/apache/commons/codec/EncoderException.java": {
                "old": {
                    "('org.apache.commons.codec#EncoderException', None)": [
                        38,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#EncoderException', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        59,
                        61,
                        62,
                        63,
                        64,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88
                    ],
                    "(None, None)": [
                        89
                    ]
                }
            },
            "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java": {
                "new": {
                    "('org.apache.commons.codec#RequiredCharsetNamesTest', None)": [
                        31,
                        32,
                        33,
                        36,
                        37
                    ],
                    "('org.apache.commons.codec#RequiredCharsetNamesTest', 'testConstructor')": [
                        34,
                        35
                    ]
                }
            }
        }
    },
    "3210069a57d060b1aaec24af66042798c8942ef4": {
        "authored_data": "2009 Jul 24 23:28",
        "commit.message": "The prefix 'java.lang.' is not required to refer to this special package. This is the only package this rule applies to.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797690 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "f7e1454b66dfba0a376ad00162eb741db9bfe7a8",
        "changes": {
            "src/java/org/apache/commons/codec/Decoder.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/BinaryCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        92,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        92,
                        109
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Caverphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#Caverphone', 'encode(Object)')": [
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone', 'encode(Object)')": [
                        155
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Metaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#Metaphone', 'encode(Object)')": [
                        367
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Metaphone', 'encode(Object)')": [
                        367
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/RefinedSoundex.java": {
                "old": {
                    "('org.apache.commons.codec.language#RefinedSoundex', 'encode(Object)')": [
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#RefinedSoundex', 'encode(Object)')": [
                        132
                    ]
                }
            }
        }
    },
    "f7e1454b66dfba0a376ad00162eb741db9bfe7a8": {
        "authored_data": "2009 Jul 24 23:18",
        "commit.message": "Now that we are on Java 1.4, we can save the original exception when we re-throw another exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797688 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "91a01c9c6c0078bbc055a1e05b705edcbefb247f",
        "changes": {
            "src/java/org/apache/commons/codec/EncoderException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        46
                    ],
                    "('org.apache.commons.codec#EncoderException', None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        71,
                        72
                    ],
                    "('org.apache.commons.codec#EncoderException', None)": [
                        40,
                        41,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Hex', 'encode(Object)')": [
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Hex', 'encode(Object)')": [
                        224
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(String,String)')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(String,String)')": [
                        111
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(String,String)')": [
                        193
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(String,String)')": [
                        193
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(String)')": [
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(String)')": [
                        258
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', 'encode(String)')": [
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', 'encode(String)')": [
                        247
                    ]
                }
            }
        }
    }
}