{
    "65216aecdc6a6a69f3afdd424f60d6617b7089ec": {
        "authored_data": "2008 Mar 08 09:43",
        "commit.message": "Stop the javadoc warning from @todo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634918 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
        "changes": {
            "src/java/org/apache/commons/codec/binary/BinaryCodec.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            }
        }
    },
    "7882213ce2fde3ef9b990c494f47aeae7b6f6946": {
        "authored_data": "2008 Mar 08 09:40",
        "commit.message": "Oops; use replaceAll, not replace - stop trying to optimize for ^\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634917 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "de10106801ea43d169a5b58285a9235ff382981c",
        "changes": {
            "src/java/org/apache/commons/codec/language/Caverphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#Caverphone', 'caverphone(String)')": [
                        65,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        94,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone', 'caverphone(String)')": [
                        65,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        94,
                        116
                    ]
                }
            }
        }
    },
    "de10106801ea43d169a5b58285a9235ff382981c": {
        "authored_data": "2008 Mar 08 09:32",
        "commit.message": "Checkstyle fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634916 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "751061272644721cd1f27fc6ca2ec3acef36bd47",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64', 'toIntegerBytes(BigInteger)')": [
                        578,
                        579
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64', 'toIntegerBytes(BigInteger)')": [
                        578,
                        579
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionC0(String,int)')": [
                        820,
                        821
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionM0(String,int)')": [
                        876,
                        877
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionC0(String,int)')": [
                        820,
                        821
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionM0(String,int)')": [
                        876,
                        877
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(Object)')": [
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.codec.net#BCodec', 'decode(Object)')": [
                        196,
                        197,
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(Object)')": [
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.codec.net#BCodec', 'decode(Object)')": [
                        196,
                        197,
                        198
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(Object)')": [
                        253,
                        254,
                        255
                    ],
                    "('org.apache.commons.codec.net#QCodec', 'decode(Object)')": [
                        278,
                        279,
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(Object)')": [
                        253,
                        254,
                        255
                    ],
                    "('org.apache.commons.codec.net#QCodec', 'decode(Object)')": [
                        278,
                        279,
                        280
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(Object)')": [
                        325,
                        326,
                        327
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(Object)')": [
                        350,
                        351,
                        352
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(Object)')": [
                        325,
                        326,
                        327
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(Object)')": [
                        350,
                        351,
                        352
                    ]
                }
            }
        }
    },
    "751061272644721cd1f27fc6ca2ec3acef36bd47": {
        "authored_data": "2008 Mar 08 09:30",
        "commit.message": "Fixing license header to not have a trailing space on the last line [checkstyle was warning about it as a few didn't have said trailing space\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634915 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "b29b7bdc7cc0cc2832a0cdfde01e46e201afa741",
        "changes": {
            "src/java/org/apache/commons/codec/BinaryDecoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/BinaryEncoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/Decoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/DecoderException.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/Encoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/EncoderException.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringDecoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringEncoder.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringEncoderComparator.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/BinaryCodec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Caverphone.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Metaphone.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/RefinedSoundex.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Soundex.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/SoundexUtils.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/RFC1522Codec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/AllTests.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/CaverphoneTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java": {
                "old": [
                    "LexerError",
                    "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    [
                        16
                    ]
                ],
                "new": [
                    "LexerError",
                    "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    [
                        16
                    ]
                ]
            },
            "src/test/org/apache/commons/codec/language/MetaphoneTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QCodecTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/URLCodecTest.java": {
                "old": {
                    "(None, None)": [
                        16
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            }
        }
    },
    "10dc7484de512026681252138023e017eeba87f9": {
        "authored_data": "2008 Mar 08 09:01",
        "commit.message": "Examples for 2.0 are from the spec, not wikipedia\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634912 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
        "changes": {
            "src/test/org/apache/commons/codec/language/CaverphoneTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#CaverphoneTest', 'testWikipediaExamples')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#CaverphoneTest', 'testSpecificationExamples')": [
                        44
                    ]
                }
            }
        }
    },
    "f6336648d893f0ad455d53ab85f82128937fa41c": {
        "authored_data": "2008 Mar 08 07:51",
        "commit.message": "Adding Chris Black's patch from CODEC-40 adding BigInteger support to Base64. Still needs edge case testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634904 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "0752e9ac06e72b67554450877251e2eca87c504f",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        599
                    ],
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decodeInteger(byte)')": [
                        545,
                        546
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encodeInteger(BigInteger)')": [
                        557,
                        558,
                        559,
                        560,
                        561,
                        562
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'toIntegerBytes(BigInteger)')": [
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testCodeInteger1')": [
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', None)": [
                        648,
                        649,
                        657,
                        658,
                        668,
                        669,
                        684,
                        685,
                        687,
                        688,
                        689
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testCodeInteger2')": [
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testCodeInteger3')": [
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testCodeInteger4')": [
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testCodeIntegerEdgeCases')": [
                        686
                    ]
                }
            }
        }
    },
    "0752e9ac06e72b67554450877251e2eca87c504f": {
        "authored_data": "2008 Mar 08 07:49",
        "commit.message": "Applying CODEC-52; Niklas Gustavsson's enhancement to have InputStream variants for DigestUtil's digest methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634903 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "4ac544469163d6327156b2b844b1e62358910faa",
        "changes": {
            "src/java/org/apache/commons/codec/digest/DigestUtils.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        535
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        34,
                        35,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        140,
                        141,
                        142,
                        159,
                        160,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        208,
                        209,
                        210,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        242,
                        243,
                        244,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        285,
                        286,
                        287,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        372,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        415,
                        416,
                        417,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        458,
                        459,
                        460,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        501,
                        502,
                        503,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'digest(MessageDigest,InputStream)')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'md5(InputStream)')": [
                        161,
                        162
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'md5Hex(InputStream)')": [
                        206,
                        207
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha(InputStream)')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha256(InputStream)')": [
                        283,
                        284
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha256Hex(String)')": [
                        312
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha256Hex(InputStream)')": [
                        326
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha384(InputStream)')": [
                        370,
                        371
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha384Hex(InputStream)')": [
                        413,
                        414
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha512(InputStream)')": [
                        456,
                        457
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'sha512Hex(InputStream)')": [
                        499,
                        500
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'shaHex(InputStream)')": [
                        533,
                        534
                    ]
                }
            },
            "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testMd5Hex')": [
                        39
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', None)": [
                        59,
                        122
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha256')": [
                        86
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha384')": [
                        96
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha512')": [
                        110
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testShaHex')": [
                        124
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        158
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        41,
                        42,
                        75,
                        145
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'setUp')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testMd5Hex')": [
                        52,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha256')": [
                        102,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha384')": [
                        115,
                        127,
                        128
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSha512')": [
                        131,
                        143,
                        144
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testShaHex')": [
                        147,
                        156,
                        157
                    ]
                }
            }
        }
    }
}