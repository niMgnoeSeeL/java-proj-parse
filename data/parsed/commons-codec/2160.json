{
    "124b73fed7492b3118c4ea43c28dc0b1bceda032": {
        "authored_data": "2003 Oct 12 19:56",
        "commit.message": "Removed all checkstyle violations from Base64, and the\nlanguage encoders.  Most of the checkstyle violations fixed\nwere violations dealing with the placement of operators\non a newline instead of on the end of the previous line.\n\nIn addition to the checkstyle fixes, DoubleMetaphone now\nhandles two cases C with a Cedilla and N with a tilde (ene).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130214 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "1078329ade725b36e3617dd7c6dd7a714810795c",
        "changes": {
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "(None, None)": [
                        75
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'doubleMetaphone(String,boolean)')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        158,
                        167,
                        168,
                        169,
                        182,
                        183,
                        184,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        205,
                        211,
                        212,
                        213,
                        226,
                        227,
                        228
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'encode(Object)')": [
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleG(String,DoubleMetaphoneResult,int,boolean)')": [
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        494,
                        495,
                        505,
                        506,
                        507
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleGH(String,DoubleMetaphoneResult,int)')": [
                        542,
                        543,
                        544,
                        545
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleJ(String,DoubleMetaphoneResult,int,boolean)')": [
                        585,
                        586,
                        598,
                        599,
                        600,
                        601,
                        605,
                        606
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleP(String,DoubleMetaphoneResult,int)')": [
                        648,
                        649,
                        650
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleS(String,DoubleMetaphoneResult,int,boolean)')": [
                        695,
                        696,
                        704,
                        705,
                        706,
                        723,
                        724,
                        725
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleSC(String,DoubleMetaphoneResult,int)')": [
                        748,
                        749
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleT(String,DoubleMetaphoneResult,int)')": [
                        788,
                        789,
                        790
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleW(String,DoubleMetaphoneResult,int)')": [
                        816,
                        817
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleX(String,DoubleMetaphoneResult,int)')": [
                        851,
                        852,
                        853
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleZ(String,DoubleMetaphoneResult,int,boolean)')": [
                        868,
                        869,
                        870
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionCH1(String,int)')": [
                        929,
                        930,
                        931,
                        932
                    ]
                },
                "new": {
                    "(None, None)": [
                        75
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'doubleMetaphone(String,boolean)')": [
                        149,
                        150,
                        151,
                        152,
                        155,
                        164,
                        177,
                        188,
                        189,
                        190,
                        191,
                        194,
                        200,
                        213
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'encode(Object)')": [
                        243
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleG(String,DoubleMetaphoneResult,int,boolean)')": [
                        468,
                        472,
                        473,
                        483
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleGH(String,DoubleMetaphoneResult,int)')": [
                        518,
                        519
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleJ(String,DoubleMetaphoneResult,int,boolean)')": [
                        559,
                        571,
                        572,
                        576
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleP(String,DoubleMetaphoneResult,int)')": [
                        618
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleS(String,DoubleMetaphoneResult,int,boolean)')": [
                        663,
                        671,
                        688
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleSC(String,DoubleMetaphoneResult,int)')": [
                        711
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleT(String,DoubleMetaphoneResult,int)')": [
                        750
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleW(String,DoubleMetaphoneResult,int)')": [
                        776
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleX(String,DoubleMetaphoneResult,int)')": [
                        810
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleZ(String,DoubleMetaphoneResult,int,boolean)')": [
                        825
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionCH1(String,int)')": [
                        884,
                        885
                    ]
                }
            }
        }
    },
    "1078329ade725b36e3617dd7c6dd7a714810795c": {
        "authored_data": "2003 Oct 12 19:48",
        "commit.message": "Removed all checkstyle violations from Base64, and the\nlanguage encoders.  Most of the checkstyle violations fixed\nwere violations dealing with the placement of operators\non a newline instead of on the end of the previous line.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130213 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "3652eb64e9c29bdd83d60376b61ae5fb99feeb26",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "(None, None)": [
                        78
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(Object)')": [
                        248,
                        249,
                        250,
                        251
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encodeBase64(byte,boolean)')": [
                        305,
                        306,
                        307,
                        334,
                        335,
                        336,
                        338,
                        339,
                        340,
                        342,
                        343,
                        344,
                        370,
                        371,
                        386,
                        387,
                        388,
                        401,
                        402,
                        403,
                        405,
                        406,
                        407
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(Object)')": [
                        576,
                        577,
                        578
                    ]
                },
                "new": {
                    "(None, None)": [
                        78
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(Object)')": [
                        248
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encodeBase64(byte,boolean)')": [
                        302,
                        329,
                        331,
                        333,
                        359,
                        360,
                        375,
                        388,
                        390
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(Object)')": [
                        559
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Metaphone.java": {
                "old": {
                    "(None, None)": [
                        74
                    ],
                    "('org.apache.commons.codec.language#Metaphone', 'metaphone(String)')": [
                        118,
                        119,
                        173,
                        174,
                        177,
                        178,
                        189,
                        190,
                        191,
                        200,
                        201,
                        202,
                        203,
                        210,
                        211,
                        216,
                        217,
                        223,
                        224,
                        225,
                        237,
                        238,
                        239,
                        247,
                        248,
                        251,
                        252,
                        253,
                        257,
                        258,
                        259,
                        262,
                        263,
                        268,
                        269,
                        270,
                        281,
                        282,
                        310,
                        311,
                        325,
                        326,
                        327,
                        336,
                        337,
                        356,
                        357
                    ],
                    "('org.apache.commons.codec.language#Metaphone', 'encode(Object)')": [
                        391,
                        392,
                        393
                    ]
                },
                "new": {
                    "(None, None)": [
                        74
                    ],
                    "('org.apache.commons.codec.language#Metaphone', 'metaphone(String)')": [
                        118,
                        172,
                        175,
                        186,
                        195,
                        202,
                        207,
                        213,
                        225,
                        233,
                        236,
                        240,
                        243,
                        248,
                        259,
                        287,
                        301,
                        310,
                        329
                    ],
                    "('org.apache.commons.codec.language#Metaphone', 'encode(Object)')": [
                        363
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/RefinedSoundex.java": {
                "old": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundex', 'encode(Object)')": [
                        179,
                        180,
                        181,
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundex', 'encode(Object)')": [
                        179
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Soundex.java": {
                "old": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.codec.language#Soundex', 'soundex(String)')": [
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.codec.language#Soundex', 'encode(Object)')": [
                        165,
                        166,
                        167,
                        168
                    ]
                },
                "new": {
                    "(None, None)": [
                        71
                    ],
                    "('org.apache.commons.codec.language#Soundex', 'soundex(String)')": [
                        137
                    ],
                    "('org.apache.commons.codec.language#Soundex', 'encode(Object)')": [
                        163
                    ]
                }
            }
        }
    },
    "d718e52b671b8395084905f8063a09be17caf2b3": {
        "authored_data": "2003 Oct 12 02:54",
        "commit.message": "Added the ability to customize the Provider which is used\nto get an instance of MD5 and SHA.  By default, this\nUtils class will search the list of available Provider objects\nfor implementations, but if you want to supply your own\nProvider object you may do so by calling the static method\nsetProvider on DigestUtils. + Also, brought test coverage\nof DigestUtils up to 100%\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130210 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "10a1327b88bdb842bfb58605887175c2bc7b4a75",
        "changes": {
            "src/java/org/apache/commons/codec/digest/DigestUtils.java": {
                "old": {
                    "('org.apache.commons.codec.digest#DigestUtils', 'getMd5Digest')": [
                        81,
                        82,
                        84
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'getShaDigest')": [
                        95,
                        96,
                        98
                    ],
                    "(None, None)": [
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        62,
                        63,
                        211
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'getMd5Digest')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        96
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'getShaDigest')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        113
                    ],
                    "('org.apache.commons.codec.digest#DigestUtils', 'setProvider(Provider)')": [
                        209,
                        210
                    ]
                }
            },
            "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testShaHex')": [
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', None)": [
                        148,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testMd5NoAvailable')": [
                        149,
                        150,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.codec.digest#DigestUtilsTest', 'testSHANoAvailable')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166
                    ]
                }
            }
        }
    },
    "10a1327b88bdb842bfb58605887175c2bc7b4a75": {
        "authored_data": "2003 Oct 12 02:17",
        "commit.message": "More tests for URLCodec to increase coverage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130209 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "31114f306900c2ec516a2395fa669156300eb71c",
        "changes": {
            "src/test/org/apache/commons/codec/net/URLCodecTest.java": {
                "new": {
                    "(None, None)": [
                        61,
                        275,
                        276,
                        277
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', None)": [
                        176,
                        183,
                        184,
                        193,
                        194,
                        195,
                        200,
                        201,
                        207,
                        208,
                        214,
                        215,
                        236,
                        237,
                        238,
                        239,
                        251,
                        252,
                        253,
                        254
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testEncodeNull')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testEncodeUrlWithNullBitSet')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testDecodeWithNullArray')": [
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testEncodeStringWithNull')": [
                        202,
                        203,
                        204,
                        205,
                        206
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testDecodeStringWithNull')": [
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testEncodeObjects')": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testInvalidEncoding')": [
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.codec.net#URLCodecTest', 'testDecodeObjects')": [
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                }
            }
        }
    },
    "31114f306900c2ec516a2395fa669156300eb71c": {
        "authored_data": "2003 Oct 12 02:17",
        "commit.message": "ENCODING was a static final variable, but it was only\naccessed from non-static methods.  This field was alter\nto be non-static and non-final.  A constructor was added to\nallow the end-user to set a custom Encoding.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130208 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "83b6dedef42ab67db1faef06f8595c651f03160d",
        "changes": {
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "(None, None)": [
                        89
                    ],
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        89
                    ],
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        100,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            }
        }
    },
    "83b6dedef42ab67db1faef06f8595c651f03160d": {
        "authored_data": "2003 Oct 12 01:35",
        "commit.message": "Added more tests to the StringEncoderComparator class\nand increased coverage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130207 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "ec225adf2f6ce3ad2681d06ab0aeb83ec1a00f9b",
        "changes": {
            "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java": {
                "old": {
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        60,
                        61,
                        62,
                        63,
                        66,
                        70,
                        71,
                        72,
                        119,
                        120
                    ],
                    "('org.apache.commons.codec#StringEncoderComparatorTest', None)": [
                        92,
                        93,
                        109
                    ],
                    "('org.apache.commons.codec#StringEncoderComparatorTest', 'testComparatorWithDoubleMetaphone')": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.codec#StringEncoderComparatorTest', 'testComparatorWithDoubleMetaphoneAndInvalidInput')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ]
                }
            }
        }
    },
    "ec225adf2f6ce3ad2681d06ab0aeb83ec1a00f9b": {
        "authored_data": "2003 Oct 12 01:34",
        "commit.message": "The StringEncoderComparator used to call o1.toString(), and\no2.toString() on the parameters supplied to the compare\nmethod.  There is no need to require that only Strings\nare passed to the StringEncoderComparator - (actually\nthere is no reason why we couldn't have a generic Encoder\ncomparator.  This patch is the first step towards a more\ngeneric object, and it allows us to test the exception condition\nin this compare() method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130206 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "c76ca5ec26d4b1fd434bc47271ef54fc58fb35d2",
        "changes": {
            "src/java/org/apache/commons/codec/StringEncoderComparator.java": {
                "old": {
                    "(None, None)": [
                        73
                    ],
                    "('org.apache.commons.codec#StringEncoderComparator', 'compare(Object,Object)')": [
                        106,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        73
                    ],
                    "('org.apache.commons.codec#StringEncoderComparator', 'compare(Object,Object)')": [
                        106,
                        107
                    ]
                }
            }
        }
    },
    "c76ca5ec26d4b1fd434bc47271ef54fc58fb35d2": {
        "authored_data": "2003 Oct 05 21:45",
        "commit.message": "Another license fix, in section five changed plural \"names\"\nto singular \"name\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130205 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Timothy O'Brien",
        "pcid": "21804202745423b5fcd0a34a2c8c94064416ab3a",
        "changes": {
            "src/java/org/apache/commons/codec/BinaryDecoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/codec/BinaryEncoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/codec/Decoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/codec/DecoderException.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/codec/Encoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        68
                    ]
                }
            },
            "src/java/org/apache/commons/codec/EncoderException.java": {
                "old": {
                    "(None, None)": [
                        34,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        68
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringDecoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringEncoder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/codec/StringEncoderComparator.java": {
                "old": {
                    "(None, None)": [
                        34,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        73
                    ]
                }
            },
            "src/java/org/apache/commons/codec/base64/Base64.java": {
                "old": {
                    "(None, None)": [
                        34,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        80
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "(None, None)": [
                        34,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        78
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "(None, None)": [
                        34,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/codec/digest/DigestUtils.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "(None, None)": [
                        34,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        75
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Metaphone.java": {
                "old": {
                    "(None, None)": [
                        34,
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        74
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/RefinedSoundex.java": {
                "old": {
                    "(None, None)": [
                        34,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/Soundex.java": {
                "old": {
                    "(None, None)": [
                        34,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "(None, None)": [
                        34,
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        89
                    ]
                }
            },
            "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        63
                    ]
                }
            },
            "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        63
                    ]
                }
            },
            "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        65
                    ]
                }
            },
            "src/test/org/apache/commons/codec/base64/Base64Test.java": {
                "old": {
                    "(None, None)": [
                        34,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        69
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "(None, None)": [
                        34,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        67
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/MetaphoneTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        67
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        67
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/SoundexTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        67
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/URLCodecTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            }
        }
    }
}