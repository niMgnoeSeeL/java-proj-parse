{
    "1a03d4297a6f5bda9622233af6d0ee69efe4a4a0": {
        "authored_data": "2013 Dec 10 15:54",
        "commit.message": "Fix Javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1549875 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "bacf66673718f3af8d9500e6fc22cc2a85201839",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            }
        }
    },
    "bacf66673718f3af8d9500e6fc22cc2a85201839": {
        "authored_data": "2013 Nov 22 19:35",
        "commit.message": "[CODEC-174] Revert change of set to list in PhonemeBuilder.apply.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544659 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "a8b19f4bac481609e2f210e73c0c8018463ef119",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        107
                    ]
                }
            }
        }
    },
    "a8b19f4bac481609e2f210e73c0c8018463ef119": {
        "authored_data": "2013 Nov 22 13:38",
        "commit.message": "Avoid modifiers which are implied by the context.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544532 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "b17d10dd5d4457ff751f0c37dedd6ae2adfa221f",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        172
                    ]
                }
            }
        }
    },
    "b17d10dd5d4457ff751f0c37dedd6ae2adfa221f": {
        "authored_data": "2013 Nov 22 02:05",
        "commit.message": "Remove useless comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544390 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "83881d7331950147503d9ad952a14ed06f3c91ae",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        134
                    ]
                }
            }
        }
    },
    "83881d7331950147503d9ad952a14ed06f3c91ae": {
        "authored_data": "2013 Nov 21 22:37",
        "commit.message": "[CODEC-176] Spelling fixes in Javadoc and comments.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544349 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "a85362e950874ce8fdc1c741a0b775495f2af842",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', None)": [
                        184,
                        234
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        189,
                        193,
                        212
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        239,
                        243,
                        277
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', None)": [
                        184,
                        234
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        189,
                        193,
                        212
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        239,
                        243,
                        277
                    ]
                }
            }
        }
    },
    "a85362e950874ce8fdc1c741a0b775495f2af842": {
        "authored_data": "2013 Nov 21 22:30",
        "commit.message": "\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1544347 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "2e92a8705e420ca32c32ecb77edc9f3f76bce7a2",
        "changes": {
            "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', None)": [
                        102,
                        105
                    ],
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', 'flush(boolean)')": [
                        110,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', None)": [
                        102,
                        105
                    ],
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', 'flush(boolean)')": [
                        110,
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleS(String,DoubleMetaphoneResult,int,boolean)')": [
                        625
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        853
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleS(String,DoubleMetaphoneResult,int,boolean)')": [
                        625
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        853
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', None)": [
                        281,
                        333
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        286,
                        291,
                        309
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        338,
                        342,
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', None)": [
                        281,
                        333
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        286,
                        291,
                        309
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        338,
                        342,
                        370
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', None)": [
                        173,
                        223
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        178,
                        182,
                        201
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        228,
                        232,
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', None)": [
                        173,
                        223
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        178,
                        182,
                        201
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        228,
                        232,
                        266
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', None)": [
                        294,
                        347
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        299,
                        303,
                        323
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        352,
                        356,
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', None)": [
                        294,
                        347
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        299,
                        303,
                        323
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        352,
                        356,
                        383
                    ]
                }
            }
        }
    },
    "2e92a8705e420ca32c32ecb77edc9f3f76bce7a2": {
        "authored_data": "2013 Nov 17 21:37",
        "commit.message": "Add since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542832 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "c170f6b67d6927aa7e1efff3f0618542483f8708",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        313,
                        331
                    ]
                }
            }
        }
    },
    "c170f6b67d6927aa7e1efff3f0618542483f8708": {
        "authored_data": "2013 Nov 17 21:34",
        "commit.message": "[CODEC-174] Improve PhonemeBuilder.apply by updating the internal state instead of creating a new PhonemeBuilder each time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542831 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "f98699421fe6e66c911559559979f23a50ad0c9d",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        98,
                        105,
                        106,
                        108,
                        109,
                        113,
                        118,
                        119,
                        125,
                        215
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        98,
                        106,
                        107,
                        111,
                        116,
                        117,
                        118,
                        124,
                        125,
                        215
                    ]
                }
            }
        }
    },
    "f98699421fe6e66c911559559979f23a50ad0c9d": {
        "authored_data": "2013 Nov 17 21:14",
        "commit.message": "[CODEC-174] Fix Clirr error by renaming new Methods \"Map Rule.getInstance(...)\" to \"Map Rule.getInstanceMap(...)\" and re-introducing the original methods with the original signature \"List Rule.getInstance(...)\" and returning a joined result of getInstanceMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542823 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "78c75127ae121958de3ec2ee4da69a10528fe52c",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'encode(String,Languages)')": [
                        386,
                        388,
                        390
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'encode(String,Languages)')": [
                        386,
                        388,
                        390
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstance(NameType,RuleType,Languages)')": [
                        276,
                        278,
                        279
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        291,
                        292
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstance(NameType,RuleType,String)')": [
                        293
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstance(NameType,RuleType,Languages)')": [
                        278,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        297,
                        298,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstance(NameType,RuleType,String)')": [
                        299,
                        300
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstanceMap(NameType,RuleType,Languages)')": [
                        314,
                        315,
                        316,
                        317
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'getInstanceMap(NameType,RuleType,String)')": [
                        331,
                        332
                    ]
                }
            }
        }
    },
    "78c75127ae121958de3ec2ee4da69a10528fe52c": {
        "authored_data": "2013 Nov 17 20:57",
        "commit.message": "[CODEC-174] Add removed method again and make it deprecated.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1542815 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "4898d123b1d3c11a025e7cc707b85809e3627ef3",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        122,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ]
                }
            }
        }
    }
}