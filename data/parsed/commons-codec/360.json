{
    "dddc6f10f7bc658d94a03ed3ff0aba0b276084b5": {
        "authored_data": "2019 Dec 18 20:28",
        "commit.message": "Remove trailing white spaces on all lines.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "1b7ca880bef55ce8050e0b8dd5ead26f9a41950f",
        "changes": {
            "src/main/java/org/apache/commons/codec/digest/DigestUtils.java": {
                "old": {
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        1227,
                        1270
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        1227,
                        1270
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        51,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        51,
                        65
                    ]
                }
            }
        }
    },
    "1b7ca880bef55ce8050e0b8dd5ead26f9a41950f": {
        "authored_data": "2019 Dec 10 03:27",
        "commit.message": "Javadoc: Replace <code></code> HTML tags with Javadoc {@code} notation.",
        "commit.author.name": "Gary Gregory",
        "pcid": "9637dd44fa0e2d5a6ddb45791e3cd78298842d95",
        "changes": {
            "src/main/java/org/apache/commons/codec/CharEncoding.java": {
                "old": {
                    "(None, None)": [
                        32,
                        34,
                        36,
                        38,
                        40,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        34,
                        36,
                        38,
                        40,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/Charsets.java": {
                "old": {
                    "(None, None)": [
                        33,
                        35,
                        37,
                        39,
                        41,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        35,
                        37,
                        39,
                        41,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/DecoderException.java": {
                "old": {
                    "('org.apache.commons.codec#DecoderException', None)": [
                        35,
                        58,
                        64,
                        74,
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#DecoderException', None)": [
                        35,
                        58,
                        64,
                        74,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/Encoder.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/EncoderException.java": {
                "old": {
                    "('org.apache.commons.codec#EncoderException', None)": [
                        36,
                        60,
                        67,
                        77,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#EncoderException', None)": [
                        36,
                        60,
                        67,
                        77,
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/StringEncoderComparator.java": {
                "old": {
                    "('org.apache.commons.codec#StringEncoderComparator', None)": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#StringEncoderComparator', None)": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/Base32.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32', None)": [
                        143,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32', None)": [
                        143,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        157,
                        163,
                        192,
                        193,
                        498,
                        499,
                        508,
                        512,
                        525,
                        526,
                        539,
                        540,
                        621,
                        636,
                        638,
                        655,
                        657,
                        748,
                        751,
                        779,
                        783
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        157,
                        163,
                        192,
                        193,
                        498,
                        499,
                        508,
                        512,
                        525,
                        526,
                        539,
                        540,
                        621,
                        636,
                        638,
                        655,
                        657,
                        748,
                        751,
                        779,
                        783
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodec', None)": [
                        194,
                        195,
                        198,
                        207,
                        208,
                        211,
                        324,
                        535,
                        540,
                        549,
                        550,
                        551,
                        552,
                        569,
                        570,
                        584
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodec', None)": [
                        194,
                        195,
                        198,
                        207,
                        208,
                        211,
                        324,
                        535,
                        540,
                        549,
                        550,
                        551,
                        552,
                        569,
                        570,
                        584
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecInputStream', None)": [
                        52,
                        53,
                        82,
                        90,
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecInputStream', None)": [
                        52,
                        53,
                        82,
                        90,
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', None)": [
                        57,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', None)": [
                        57,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        218,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BinaryCodec', None)": [
                        218,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/CharSequenceUtils.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.codec.binary#CharSequenceUtils', None)": [
                        36,
                        40,
                        42,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.codec.binary#CharSequenceUtils', None)": [
                        36,
                        40,
                        42,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        145,
                        162,
                        227,
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        145,
                        162,
                        227,
                        258
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/StringUtils.java": {
                "old": {
                    "('org.apache.commons.codec.binary#StringUtils', None)": [
                        42,
                        46,
                        64,
                        66,
                        67,
                        89,
                        105,
                        120,
                        121,
                        138,
                        139,
                        161,
                        164,
                        187,
                        188,
                        205,
                        206,
                        223,
                        224,
                        241,
                        242,
                        259,
                        260,
                        278,
                        283,
                        284,
                        285,
                        294,
                        301,
                        304,
                        305,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#StringUtils', None)": [
                        42,
                        46,
                        64,
                        66,
                        67,
                        89,
                        105,
                        120,
                        121,
                        138,
                        139,
                        161,
                        164,
                        187,
                        188,
                        205,
                        206,
                        223,
                        224,
                        241,
                        242,
                        259,
                        260,
                        278,
                        283,
                        284,
                        285,
                        294,
                        301,
                        304,
                        305,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/digest/DigestUtils.java": {
                "old": {
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        134,
                        155,
                        339,
                        351,
                        365,
                        415,
                        426,
                        440,
                        487,
                        500,
                        516,
                        529,
                        541,
                        555,
                        604,
                        616,
                        630,
                        680,
                        692,
                        706,
                        756,
                        768,
                        782,
                        832,
                        844,
                        858,
                        908,
                        920,
                        934,
                        984,
                        996,
                        1010,
                        1060,
                        1072,
                        1086
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#DigestUtils', None)": [
                        134,
                        155,
                        339,
                        351,
                        365,
                        415,
                        426,
                        440,
                        487,
                        500,
                        516,
                        529,
                        541,
                        555,
                        604,
                        616,
                        630,
                        680,
                        692,
                        706,
                        756,
                        768,
                        782,
                        832,
                        844,
                        858,
                        908,
                        920,
                        934,
                        984,
                        996,
                        1010,
                        1060,
                        1072,
                        1086
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/digest/HmacUtils.java": {
                "old": {
                    "('org.apache.commons.codec.digest#HmacUtils', None)": [
                        93,
                        113,
                        133,
                        153,
                        173,
                        193,
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#HmacUtils', None)": [
                        93,
                        113,
                        133,
                        153,
                        173,
                        193,
                        213
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java": {
                "old": {
                    "('org.apache.commons.codec.digest#Sha2Crypt', None)": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#Sha2Crypt', None)": [
                        163
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#AbstractCaverphone', None)": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#AbstractCaverphone', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/Caverphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#Caverphone', None)": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone', None)": [
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "(None, None)": [
                        154,
                        163,
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        154,
                        163,
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        194,
                        220,
                        225,
                        226,
                        234,
                        239,
                        240,
                        241,
                        870,
                        899,
                        900,
                        911,
                        912
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        194,
                        220,
                        225,
                        226,
                        234,
                        239,
                        240,
                        241,
                        870,
                        899,
                        900,
                        911,
                        912
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java": {
                "old": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', None)": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', None)": [
                        209
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/Metaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#Metaphone', None)": [
                        410,
                        411
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Metaphone', None)": [
                        410,
                        411
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/Nysiis.java": {
                "old": {
                    "('org.apache.commons.codec.language#Nysiis', None)": [
                        97,
                        183,
                        184,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Nysiis', None)": [
                        97,
                        183,
                        184,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/Soundex.java": {
                "old": {
                    "('org.apache.commons.codec.language#Soundex', None)": [
                        46,
                        60,
                        272
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Soundex', None)": [
                        46,
                        60,
                        272
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java": {
                "old": {
                    "(None, None)": [
                        36,
                        48,
                        55,
                        57,
                        58,
                        59,
                        62,
                        63,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        48,
                        55,
                        57,
                        58,
                        59,
                        62,
                        63,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/Lang.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Lang', None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Lang', None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/NameType.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        86,
                        159,
                        160,
                        161,
                        162,
                        201,
                        203,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        86,
                        159,
                        160,
                        161,
                        162,
                        201,
                        203,
                        254
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        675,
                        676
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', None)": [
                        675,
                        676
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#BCodec', None)": [
                        112,
                        131,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#BCodec', None)": [
                        112,
                        131,
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodec', None)": [
                        304,
                        342,
                        352
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodec', None)": [
                        304,
                        342,
                        352
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        179,
                        191,
                        198,
                        233,
                        522
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        179,
                        191,
                        198,
                        233,
                        522
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java": {
                "old": {
                    "('org.apache.commons.codec.net#RFC1522Codec', None)": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#RFC1522Codec', None)": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        335,
                        362
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        335,
                        362
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/Utils.java": {
                "old": {
                    "('org.apache.commons.codec.net#Utils', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#Utils', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            }
        }
    },
    "d7a4a0290ecaf06be09c1a0c9c35c0a38994c63d": {
        "authored_data": "2019 Dec 05 22:46",
        "commit.message": "[CODEC-261]: Test Hex encode of a read-only ByteBuffer.\n\nThe test passes and this is no longer an issue.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "6cf348211a23835128465a22c9148138fb99c060",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "new": {
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        623,
                        624,
                        625,
                        626,
                        627,
                        631,
                        632
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexReadOnlyByteBuffer')": [
                        628,
                        629,
                        630
                    ]
                }
            }
        }
    },
    "6cf348211a23835128465a22c9148138fb99c060": {
        "authored_data": "2019 Dec 05 21:21",
        "commit.message": "[CODEC-259] Test StringUtils.getByteBufferUtf8.\n\nThis method was only used in Hex. Its usage has been removed so this\nsimple test ensures the method does what it is documented to do.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "965ac73d8167974524a7ebf24381f28a1567ba43",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        248
                    ],
                    "('org.apache.commons.codec.binary#StringUtilsTest', None)": [
                        241,
                        242
                    ],
                    "('org.apache.commons.codec.binary#StringUtilsTest', 'testByteBufferUtf8')": [
                        243,
                        244,
                        245,
                        246,
                        247
                    ]
                }
            }
        }
    },
    "a9e682daaa528ff66465de557cb70c107a196302": {
        "authored_data": "2019 Dec 02 21:12",
        "commit.message": "[CODEC-259] getByteBufferUtf8() method to use allocate(int).\n\nThis allows the AllocateDirectHexTest class to test the methods that\nrequire a ByteBuffer allocated with a UTF-8 string with a direct byte\nbuffer.",
        "commit.author.name": "Alex Herbert",
        "pcid": "2311c5e58e6922825d7ecb53ef596b7a8c156bf1",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimit')": [
                        334
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldLowerCaseHex')": [
                        463
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldUpperCaseHex')": [
                        484
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'getByteBufferUtf8(String)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimit')": [
                        361
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldLowerCaseHex')": [
                        490
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldUpperCaseHex')": [
                        511
                    ]
                }
            }
        }
    },
    "2311c5e58e6922825d7ecb53ef596b7a8c156bf1": {
        "authored_data": "2019 Nov 28 12:41",
        "commit.message": "[CODEC-259] Hex: consume all ByteBuffer.remaining() bytes.\n",
        "commit.author.name": "aherbert",
        "pcid": "a84f53d38f93504036fed5cf3fd42f57a8637b16",
        "changes": {
            "src/main/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Hex', 'toByteArray(ByteBuffer)')": [
                        257
                    ],
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        396,
                        397,
                        398,
                        399
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        128,
                        129,
                        130,
                        157,
                        158,
                        159,
                        197,
                        198,
                        199,
                        239,
                        240,
                        241,
                        253,
                        254,
                        255,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        356,
                        357,
                        358,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.codec.binary#Hex', 'toByteArray(ByteBuffer)')": [
                        279
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferOddCharacters')": [
                        261
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimitOddCharacters')": [
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldLowerCaseHex')": [
                        465
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldUpperCaseHex')": [
                        474,
                        476,
                        478
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHex_ByteBufferWithLimit')": [
                        489
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferBoolean_ToLowerCase')": [
                        533
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferBoolean_ToUpperCase')": [
                        538
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferAllocatedButEmpty')": [
                        252
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferOddCharacters')": [
                        262,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimitOddCharacters')": [
                        270,
                        271,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimit')": [
                        341
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeByteBufferAllocatedButEmpty')": [
                        366
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldLowerCaseHex')": [
                        466,
                        469,
                        470,
                        471,
                        474,
                        475,
                        476,
                        478,
                        479
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteBufferHelloWorldUpperCaseHex')": [
                        487,
                        489,
                        490,
                        491,
                        492,
                        494,
                        495,
                        496,
                        497,
                        499,
                        500
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHex_ByteBufferWithLimit')": [
                        511,
                        512,
                        513,
                        514,
                        515,
                        522
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferOfZeroesWithLimit')": [
                        537,
                        541
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferBoolean_ToLowerCase')": [
                        562,
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferBoolean_ToUpperCase')": [
                        570,
                        571,
                        572,
                        573
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase')": [
                        583
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase')": [
                        593
                    ]
                }
            }
        }
    },
    "a84f53d38f93504036fed5cf3fd42f57a8637b16": {
        "authored_data": "2019 Nov 26 17:03",
        "commit.message": "[CODEC-259] Hex: Only use ByteBuffer.array() if length equals remaining\n",
        "commit.author.name": "aherbert",
        "pcid": "a3a4eddd3e6180385ca38efd9ff4965c07995e64",
        "changes": {
            "src/main/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Hex', 'toByteArray(ByteBuffer)')": [
                        253,
                        254,
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Hex', 'toByteArray(ByteBuffer)')": [
                        252,
                        253,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/HexTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferOddCharacters')": [
                        244,
                        245,
                        246,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        250,
                        251,
                        252
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#HexTest', 'checkDecodeHexByteBufferOddCharacters(ByteBuffer)')": [
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.codec.binary#HexTest', None)": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        252,
                        253,
                        254,
                        262,
                        263,
                        264,
                        337,
                        338,
                        339,
                        340,
                        353,
                        354,
                        355,
                        496,
                        497,
                        498,
                        499,
                        513,
                        514,
                        515,
                        539,
                        540,
                        541,
                        548,
                        549,
                        550
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferAllocatedButEmpty')": [
                        247,
                        248,
                        249,
                        250,
                        251
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferOddCharacters')": [
                        261
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimitOddCharacters')": [
                        265,
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testDecodeByteBufferWithLimit')": [
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeByteBufferAllocatedButEmpty')": [
                        356,
                        357,
                        358,
                        359,
                        360
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHex_ByteBufferWithLimit')": [
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferOfZeroesWithLimit')": [
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferWithLimitBoolean_ToLowerCase')": [
                        542,
                        543,
                        544,
                        545,
                        546,
                        547
                    ],
                    "('org.apache.commons.codec.binary#HexTest', 'testEncodeHexByteString_ByteBufferWithLimitBoolean_ToUpperCase')": [
                        551,
                        552,
                        553,
                        554,
                        555,
                        556
                    ]
                }
            }
        }
    },
    "a3a4eddd3e6180385ca38efd9ff4965c07995e64": {
        "authored_data": "2019 Dec 04 23:38",
        "commit.message": "[CODEC-272] Add RandomAccessFile digest methods #31.\n\n- This is a slightly different version from\nhttps://github.com/apache/commons-codec/pull/31/\n- Refactor updateDigest(MessageDigest,RandomAccessFile) into an new\nprivate updateDigest(MessageDigest,FileChannel) as possible public\ncandidate.\n- Do NOT seek to 0 on a RandomAccessFile before calling updateDigest():\nWe do not do this for ByteBuffer input, so do not do it here and be\nconsistent to assume that when the caller says 'digest this' then do it\nfrom where the input stands (like a stream).\n- Add methods in the file to keep methods in alphabetical order.\n- Closes #31.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "625cedf140f383f3f5c4f992906a4bb6b809dfd7",
        "changes": {
            "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testNonBlockingDigestRandomAccessFile')": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testNonBlockingDigestRandomAccessFile')": [
                        170
                    ]
                }
            }
        }
    }
}