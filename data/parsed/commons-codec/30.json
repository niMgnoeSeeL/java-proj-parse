{
    "767ecc184246c2a1f11517c8e37d15efb0a2f782": {
        "authored_data": "2022 May 22 11:35",
        "commit.message": "Use try-with-resources; use final.",
        "commit.author.name": "Gary Gregory",
        "pcid": "f5ed85f6e278b01a173504dc7b06d3378b11f7e5",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/Base16OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base16OutputStreamTest', 'testBase16OutputStreamByChunk')": [
                        55
                    ],
                    "('org.apache.commons.codec.binary#Base16OutputStreamTest', 'testByChunk(byte,byte,boolean)')": [
                        149,
                        150,
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base16OutputStreamTest', 'testBase16OutputStreamByChunk')": [
                        55
                    ],
                    "('org.apache.commons.codec.binary#Base16OutputStreamTest', 'testByChunk(byte,byte,boolean)')": [
                        149,
                        150,
                        151
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testStrictDecoding')": [
                        540,
                        546
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testStrictDecoding')": [
                        540,
                        546
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        206
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testStrictDecoding')": [
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        206
                    ],
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testStrictDecoding')": [
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330
                    ],
                    "(None, None)": [
                        331,
                        332
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testStrictDecoding')": [
                        578,
                        584
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testStrictDecoding')": [
                        578,
                        584
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testStrictDecoding')": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testStrictDecoding')": [
                        337
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64Test', 'testNonBase64Test')": [
                        523
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64Test', 'testNonBase64Test')": [
                        523
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/Blake3TestVectorsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'hashArbitraryOutputLength(int,String,String,String)')": [
                        282
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'hashTruncatedOutput(int,String,String,String)')": [
                        291
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyedHashArbitraryOutputLength(int,String,String,String)')": [
                        299
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyedHashTruncatedOutput(int,String,String,String)')": [
                        308
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyDerivation(int,String,String,String)')": [
                        316
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'hashArbitraryOutputLength(int,String,String,String)')": [
                        282
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'hashTruncatedOutput(int,String,String,String)')": [
                        291
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyedHashArbitraryOutputLength(int,String,String,String)')": [
                        299
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyedHashTruncatedOutput(int,String,String,String)')": [
                        308
                    ],
                    "('org.apache.commons.codec.digest#Blake3TestVectorsTest', 'keyDerivation(int,String,String,String)')": [
                        316
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/HmacAlgorithmsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testAlgorithm(HmacAlgorithms,byte,String)')": [
                        127
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testGetHmacEmptyKey(HmacAlgorithms,byte,String)')": [
                        138
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testGetHmacNullKey(HmacAlgorithms,byte,String)')": [
                        145
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailByteArray(HmacAlgorithms,byte,String)')": [
                        152
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailInputStream(HmacAlgorithms,byte,String)')": [
                        159
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailString(HmacAlgorithms,byte,String)')": [
                        166
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailByteArray(HmacAlgorithms,byte,String)')": [
                        173
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailInputStream(HmacAlgorithms,byte,String)')": [
                        180
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailString(HmacAlgorithms,byte,String)')": [
                        187
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testInitializedMac(HmacAlgorithms,byte,String)')": [
                        194
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacByteArary(HmacAlgorithms,byte,String)')": [
                        204
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexByteArray(HmacAlgorithms,byte,String)')": [
                        211
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexInputStream(HmacAlgorithms,byte,String)')": [
                        218
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexString(HmacAlgorithms,byte,String)')": [
                        226
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacInputStream(HmacAlgorithms,byte,String)')": [
                        233
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacString(HmacAlgorithms,byte,String)')": [
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testAlgorithm(HmacAlgorithms,byte,String)')": [
                        127
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testGetHmacEmptyKey(HmacAlgorithms,byte,String)')": [
                        138
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testGetHmacNullKey(HmacAlgorithms,byte,String)')": [
                        145
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailByteArray(HmacAlgorithms,byte,String)')": [
                        152
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailInputStream(HmacAlgorithms,byte,String)')": [
                        159
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacFailString(HmacAlgorithms,byte,String)')": [
                        166
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailByteArray(HmacAlgorithms,byte,String)')": [
                        173
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailInputStream(HmacAlgorithms,byte,String)')": [
                        180
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testHmacHexFailString(HmacAlgorithms,byte,String)')": [
                        187
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testInitializedMac(HmacAlgorithms,byte,String)')": [
                        194
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacByteArary(HmacAlgorithms,byte,String)')": [
                        204
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexByteArray(HmacAlgorithms,byte,String)')": [
                        211
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexInputStream(HmacAlgorithms,byte,String)')": [
                        218
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacHexString(HmacAlgorithms,byte,String)')": [
                        226
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacInputStream(HmacAlgorithms,byte,String)')": [
                        233
                    ],
                    "('org.apache.commons.codec.digest#HmacAlgorithmsTest', 'testMacString(HmacAlgorithms,byte,String)')": [
                        241
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/MessageDigestAlgorithmsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'digestTestData(String)')": [
                        92
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testAlgorithm(String)')": [
                        126
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestByteArray(String)')": [
                        136
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestByteBuffer(String)')": [
                        145
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestFile(String)')": [
                        154
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestInputStream(String)')": [
                        164
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPath(String,OpenOption)')": [
                        173
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPathOpenOptionsEmpty(String)')": [
                        183
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPathStandardOpenOptionRead(String)')": [
                        189
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testGetMessageDigest(String)')": [
                        195
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testNonBlockingDigestRandomAccessFile(String)')": [
                        203
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'digestTestData(String)')": [
                        92
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testAlgorithm(String)')": [
                        126
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestByteArray(String)')": [
                        136
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestByteBuffer(String)')": [
                        145
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestFile(String)')": [
                        154
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestInputStream(String)')": [
                        164
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPath(String,OpenOption)')": [
                        173
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPathOpenOptionsEmpty(String)')": [
                        183
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testDigestPathStandardOpenOptionRead(String)')": [
                        189
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testGetMessageDigest(String)')": [
                        195
                    ],
                    "('org.apache.commons.codec.digest#MessageDigestAlgorithmsTest', 'testNonBlockingDigestRandomAccessFile(String)')": [
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java": {
                "old": {
                    "('org.apache.commons.codec.digest#XXHash32Test', 'verifyChecksum(String,String)')": [
                        68
                    ],
                    "('org.apache.commons.codec.digest#XXHash32Test', 'verifyIncrementalChecksum(String,String)')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#XXHash32Test', 'verifyChecksum(String,String)')": [
                        68
                    ],
                    "('org.apache.commons.codec.digest#XXHash32Test', 'verifyIncrementalChecksum(String,String)')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#LanguageGuessingTest', 'testLanguageGuessing(String,String)')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#LanguageGuessingTest', 'testLanguageGuessing(String,String)')": [
                        62
                    ]
                }
            }
        }
    }
}