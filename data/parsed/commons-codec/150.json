{
    "482df6cabfb288acb6ab3e4a732fdb93aecfa7c2": {
        "authored_data": "2021 Mar 05 18:31",
        "commit.message": "No need to nest in else.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "85cb447f13280ee29c9311a0c78a26f6d10d44dd",
        "changes": {
            "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodec', 'decode(Object)')": [
                        459,
                        461,
                        462
                    ],
                    "('org.apache.commons.codec.binary#BaseNCodec', None)": [
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodec', 'decode(Object)')": [
                        459,
                        460,
                        462,
                        463
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecInputStream', 'read(byte,int,int)')": [
                        148,
                        150,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        180,
                        182
                    ],
                    "('org.apache.commons.codec.binary#BaseNCodecInputStream', None)": [
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecInputStream', 'read(byte,int,int)')": [
                        148,
                        149,
                        151,
                        152,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        182,
                        183,
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', 'write(byte,int,int)')": [
                        169,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecOutputStream', 'write(byte,int,int)')": [
                        169,
                        170,
                        172,
                        173
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Hex', 'decode(Object)')": [
                        454,
                        456,
                        458,
                        459,
                        460,
                        461,
                        462
                    ],
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Hex', 'decode(Object)')": [
                        454,
                        455,
                        457,
                        458,
                        460,
                        461,
                        462,
                        463,
                        464
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/digest/Crypt.java": {
                "old": {
                    "('org.apache.commons.codec.digest#Crypt', 'crypt(byte,String)')": [
                        77,
                        79,
                        81,
                        83,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#Crypt', 'crypt(byte,String)')": [
                        77,
                        78,
                        80,
                        81,
                        83,
                        84,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/DaitchMokotoffSoundex.java": {
                "old": {
                    "('org.apache.commons.codec.language#DaitchMokotoffSoundex', 'soundex(String,boolean)')": [
                        523,
                        524,
                        525
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DaitchMokotoffSoundex', 'soundex(String,boolean)')": [
                        523,
                        526
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleCH(String,DoubleMetaphoneResult,int)')": [
                        357,
                        361,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        376,
                        792,
                        808,
                        835
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionC0(String,int)')": [
                        782,
                        784,
                        786,
                        788,
                        789,
                        790,
                        791
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionCH0(String,int)')": [
                        801,
                        804,
                        806,
                        807
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionL0(String,int)')": [
                        829,
                        833,
                        834
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'handleCH(String,DoubleMetaphoneResult,int)')": [
                        357,
                        358,
                        362,
                        363,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionC0(String,int)')": [
                        783,
                        784,
                        786,
                        787,
                        789,
                        790,
                        792,
                        793,
                        794,
                        795
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionCH0(String,int)')": [
                        804,
                        805,
                        808,
                        809,
                        811,
                        812
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'conditionL0(String,int)')": [
                        833,
                        834,
                        838,
                        839
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java": {
                "old": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', 'isEncodeEquals(String,String)')": [
                        215,
                        217,
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', 'isEncodeEquals(String,String)')": [
                        215,
                        216,
                        218,
                        219,
                        221,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java": {
                "old": {
                    "('org.apache.commons.codec.language#RefinedSoundex', 'soundex(String)')": [
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#RefinedSoundex', 'soundex(String)')": [
                        207,
                        208
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/Languages.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Languages', None)": [
                        123,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        133,
                        134,
                        141,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Languages', None)": [
                        123,
                        124,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        133,
                        134,
                        141,
                        142,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', 'pattern(String)')": [
                        518,
                        521,
                        529,
                        561,
                        569
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'patternAndContextMatches(CharSequence,int)')": [
                        709
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', 'pattern(String)')": [
                        518,
                        519,
                        522,
                        523,
                        531,
                        532,
                        564,
                        565,
                        573,
                        574
                    ],
                    "('org.apache.commons.codec.language.bm#Rule', 'patternAndContextMatches(CharSequence,int)')": [
                        714,
                        715
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/BCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(Object)')": [
                        244,
                        246,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.codec.net#BCodec', None)": [
                        250,
                        274
                    ],
                    "('org.apache.commons.codec.net#BCodec', 'decode(Object)')": [
                        268,
                        270,
                        271,
                        272,
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#BCodec', 'encode(Object)')": [
                        244,
                        245,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.codec.net#BCodec', 'decode(Object)')": [
                        268,
                        269,
                        271,
                        272,
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/PercentCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#PercentCodec', 'encode(Object)')": [
                        239,
                        241,
                        242
                    ],
                    "('org.apache.commons.codec.net#PercentCodec', None)": [
                        243
                    ],
                    "('org.apache.commons.codec.net#PercentCodec', 'decode(Object)')": [
                        257,
                        259,
                        260
                    ],
                    "(None, None)": [
                        261
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#PercentCodec', 'encode(Object)')": [
                        239,
                        240,
                        242,
                        243
                    ],
                    "('org.apache.commons.codec.net#PercentCodec', 'decode(Object)')": [
                        257,
                        258,
                        260,
                        261
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(Object)')": [
                        288,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.codec.net#QCodec', None)": [
                        294,
                        318
                    ],
                    "('org.apache.commons.codec.net#QCodec', 'decode(Object)')": [
                        312,
                        314,
                        315,
                        316,
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodec', 'encode(Object)')": [
                        288,
                        289,
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.codec.net#QCodec', 'decode(Object)')": [
                        312,
                        313,
                        315,
                        316,
                        317,
                        318
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(Object)')": [
                        510,
                        512,
                        514,
                        515,
                        516,
                        517
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        518,
                        544
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(Object)')": [
                        536,
                        538,
                        540,
                        541,
                        542,
                        543
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encode(Object)')": [
                        510,
                        511,
                        513,
                        514,
                        516,
                        517,
                        518,
                        519
                    ],
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'decode(Object)')": [
                        537,
                        538,
                        540,
                        541,
                        543,
                        544,
                        545,
                        546
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', 'encode(Object)')": [
                        318,
                        320,
                        322,
                        323
                    ],
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        324,
                        325,
                        349,
                        350
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decode(Object)')": [
                        343,
                        345,
                        347,
                        348
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', 'encode(Object)')": [
                        318,
                        319,
                        321,
                        322,
                        324,
                        325
                    ],
                    "('org.apache.commons.codec.net#URLCodec', 'decode(Object)')": [
                        343,
                        344,
                        346,
                        347,
                        349,
                        350
                    ]
                }
            }
        }
    },
    "f2a6b4b7ab0567c2c49f0d6a053c671989db3c4d": {
        "authored_data": "2021 Feb 28 23:35",
        "commit.message": "Use String.replace() instead of replaceAll() when we don't need a Regex.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "3638abaf6cdb3ba83787e2b6f630e81f014c77d5",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/Caverphone1.java": {
                "old": {
                    "('org.apache.commons.codec.language#Caverphone1', 'encode(String)')": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        88,
                        89,
                        90,
                        98,
                        99,
                        100,
                        101,
                        102,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone1', 'encode(String)')": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        88,
                        89,
                        90,
                        98,
                        99,
                        100,
                        101,
                        102,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/Caverphone2.java": {
                "old": {
                    "('org.apache.commons.codec.language#Caverphone2', 'encode(String)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        91,
                        94,
                        95,
                        96,
                        97,
                        105,
                        106,
                        108,
                        110,
                        111,
                        113,
                        114,
                        116,
                        119,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone2', 'encode(String)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        91,
                        94,
                        95,
                        96,
                        97,
                        105,
                        106,
                        108,
                        110,
                        111,
                        113,
                        114,
                        116,
                        119,
                        121
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java": {
                "old": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', 'removeVowels(String)')": [
                        408,
                        409,
                        410,
                        411,
                        412
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoder', 'removeVowels(String)')": [
                        408,
                        409,
                        410,
                        411,
                        412
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByChunk')": [
                        225
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByteByByte')": [
                        264
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByChunk')": [
                        225
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testBase64InputStreamByteByByte')": [
                        264
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByChunk')": [
                        118
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByteByByte')": [
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByChunk')": [
                        118
                    ],
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testBase64OutputStreamByteByByte')": [
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64Test', 'testChunkedEncodeMultipleOf76')": [
                        193
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testConstructor_Int_ByteArray_Boolean_UrlSafe')": [
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64Test', 'testChunkedEncodeMultipleOf76')": [
                        193
                    ],
                    "('org.apache.commons.codec.binary#Base64Test', 'testConstructor_Int_ByteArray_Boolean_UrlSafe')": [
                        327
                    ]
                }
            }
        }
    },
    "3638abaf6cdb3ba83787e2b6f630e81f014c77d5": {
        "authored_data": "2021 Feb 08 19:02",
        "commit.message": "Normalize to US English spelling.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "46969d4fca4db97eaa3d9b49ff918a50a6b5c6b7",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodecTest', 'testEnsureBufferSize')": [
                        234,
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodecTest', 'testEnsureBufferSize')": [
                        234,
                        235
                    ]
                }
            }
        }
    },
    "46969d4fca4db97eaa3d9b49ff918a50a6b5c6b7": {
        "authored_data": "2021 Feb 02 17:12",
        "commit.message": "Use the scale in the var name.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "7ea3a6a035e879587f88938c166322ecc151b049",
        "changes": {
            "src/test/java/org/apache/commons/codec/language/bm/CacheSubSequencePerformanceTest.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#CacheSubSequencePerformanceTest', 'test(CharSequence,int)')": [
                        38,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#CacheSubSequencePerformanceTest', 'test(CharSequence,int)')": [
                        38,
                        42
                    ]
                }
            }
        }
    },
    "7ea3a6a035e879587f88938c166322ecc151b049": {
        "authored_data": "2021 Feb 02 16:58",
        "commit.message": "Specify scale fully in internal name.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8bfca5c4228bb05e94d8027aadefaba92ff124c7",
        "changes": {
            "src/test/java/org/apache/commons/codec/digest/PureJavaCrc32Test.java": {
                "old": {
                    "('org.apache.commons.codec.digest#PureJavaCrc32Test', None)": [
                        337,
                        338
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#PureJavaCrc32Test', None)": [
                        337,
                        338
                    ]
                }
            }
        }
    },
    "8bfca5c4228bb05e94d8027aadefaba92ff124c7": {
        "authored_data": "2021 Jan 17 21:35",
        "commit.message": "- Make private elements final where possible.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "4483cb09ec3b30ecb96e502c99292dd44082e8e0",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/bm/Rule.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#Rule', 'pattern(String)')": [
                        584
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#Rule', 'pattern(String)')": [
                        584
                    ]
                }
            }
        }
    }
}