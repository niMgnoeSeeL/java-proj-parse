{
    "c6ad7fb90702a9103a3f565be0faac8ad5303b9f": {
        "authored_data": "2013 Jan 07 15:42",
        "commit.message": "Apply patch https://issues.apache.org/jira/secure/attachment/12561897/CODEC-161.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429849 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "bc9cfb6f0f630b705c8e9aa3ec79dd9c1c51f93b",
        "changes": {
            "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        37,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        79,
                        80,
                        83,
                        202,
                        203,
                        204,
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_NullValue_ReturnNullSuccessfully')": [
                        81,
                        82
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompareNameNullSpace_ReturnsFalseSuccessfully')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompareNameSameNames_ReturnsFalseSuccessfully')": [
                        210,
                        211
                    ]
                }
            }
        }
    },
    "bc9cfb6f0f630b705c8e9aa3ec79dd9c1c51f93b": {
        "authored_data": "2013 Jan 07 14:42",
        "commit.message": "Remove trailing whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429821 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "ae4ea77b9f08e6d2282f1c373379b156cd184271",
        "changes": {
            "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        290
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        366
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        290
                    ],
                    "('org.apache.commons.codec.binary#Base32InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        366
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        311
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        379
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByChunk(byte,byte,int,byte)')": [
                        311
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        379
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        32
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        32
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        37
                    ]
                }
            }
        }
    },
    "ae4ea77b9f08e6d2282f1c373379b156cd184271": {
        "authored_data": "2013 Jan 07 14:42",
        "commit.message": "Remove cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429819 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "eeee7f99e7de28cbe224979c4a86e8ab27791c22",
        "changes": {
            "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'testIsEncodeEquals')": [
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'testIsEncodeEquals')": [
                        145
                    ]
                }
            }
        }
    },
    "4c9b2228297650d9c7aeacbe31912ba241adfb38": {
        "authored_data": "2012 Nov 28 21:13",
        "commit.message": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414924 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "c1e0ec2ef4af22f490391871fed4339530717f7d",
        "changes": {
            "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "c1e0ec2ef4af22f490391871fed4339530717f7d": {
        "authored_data": "2012 Nov 28 21:13",
        "commit.message": "Refactor tests to use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414922 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "e2701a5a1872adc57a2735d39ac9a0dca37f75e3",
        "changes": {
            "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java": {
                "old": {
                    "('org.apache.commons.codec#StringEncoderAbstractTest', None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'createStringEncoder')": [
                        49
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'getStringEncoder')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#StringEncoderAbstractTest', None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'createStringEncoder')": [
                        49
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'getStringEncoder')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.language#Caverphone1Test', None)": [
                        33
                    ],
                    "('org.apache.commons.codec.language#Caverphone1Test', 'createStringEncoder')": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone1Test', None)": [
                        32
                    ],
                    "('org.apache.commons.codec.language#Caverphone1Test', 'createStringEncoder')": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.language#Caverphone2Test', None)": [
                        33
                    ],
                    "('org.apache.commons.codec.language#Caverphone2Test', 'createStringEncoder')": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#Caverphone2Test', None)": [
                        32
                    ],
                    "('org.apache.commons.codec.language#Caverphone2Test', 'createStringEncoder')": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.codec.language#ColognePhoneticTest', None)": [
                        31
                    ],
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'createStringEncoder')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#ColognePhoneticTest', None)": [
                        30
                    ],
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'createStringEncoder')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', None)": [
                        35,
                        1275,
                        1276,
                        1277,
                        1278,
                        1279
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', 'checkDoubleMetaphone(int,boolean)')": [
                        1268
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', 'createStringEncoder')": [
                        1273
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', 'getDoubleMetaphone')": [
                        1280,
                        1281
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', None)": [
                        34
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', 'checkDoubleMetaphone(int,boolean)')": [
                        1267
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone2Test', 'createStringEncoder')": [
                        1272
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', None)": [
                        38,
                        1056,
                        1057
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'assertDoubleMetaphone(String,String)')": [
                        1012,
                        1014,
                        1018,
                        1019
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'assertDoubleMetaphoneAlt(String,String)')": [
                        1026
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneEqualTest(String,boolean)')": [
                        1035,
                        1036,
                        1038,
                        1039
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneNotEqualTest(boolean)')": [
                        1045,
                        1046,
                        1049,
                        1050
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'getDoubleMetaphone')": [
                        1054,
                        1055
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'createStringEncoder')": [
                        1059
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testEmpty')": [
                        1106,
                        1107,
                        1108,
                        1109
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testIsDoubleMetaphoneEqualExtended3')": [
                        1183,
                        1184
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testIsDoubleMetaphoneEqualWithMATCHES')": [
                        1210,
                        1211
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testCCedilla')": [
                        1226
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testNTilde')": [
                        1231
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', None)": [
                        37
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'assertDoubleMetaphone(String,String)')": [
                        1011,
                        1013,
                        1017,
                        1018
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'assertDoubleMetaphoneAlt(String,String)')": [
                        1025
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneEqualTest(String,boolean)')": [
                        1034,
                        1035,
                        1037,
                        1038
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneNotEqualTest(boolean)')": [
                        1044,
                        1045,
                        1048,
                        1049
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'createStringEncoder')": [
                        1054
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testEmpty')": [
                        1101,
                        1102,
                        1103,
                        1104
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testIsDoubleMetaphoneEqualExtended3')": [
                        1178,
                        1179
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testIsDoubleMetaphoneEqualWithMATCHES')": [
                        1205,
                        1206
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testCCedilla')": [
                        1221
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'testNTilde')": [
                        1226
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        36,
                        37,
                        40
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'getMatchRatingApproachEncoder')": [
                        38,
                        39
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_AllLower_SuccessfullyRemoved')": [
                        46
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant')": [
                        51
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant')": [
                        56
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant')": [
                        61
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved')": [
                        66
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved')": [
                        72
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemovalNormalString_NoChange')": [
                        77
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_NINO_NoChange')": [
                        82
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully')": [
                        87
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully')": [
                        92
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveDoubleDoubleVowel_BEETLE_NotRemoved')": [
                        97
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testIsVowel_CapitalA_ReturnsTrue')": [
                        102
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testIsVowel_SmallD_ReturnsFalse')": [
                        107
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel_ALESSANDRA_Returns_ALSSNDR')": [
                        112
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel__AIDAN_Returns_ADN')": [
                        117
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel__DECLAN_Returns_DCLN')": [
                        122
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetFirstLast3__ALEXANDER_Returns_Aleder')": [
                        127
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetFirstLast3_PETE_Returns_PETE')": [
                        132
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4')": [
                        137
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0')": [
                        142
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_7_Return4_Successfully')": [
                        147
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_2_Returns5_Successfully')": [
                        152
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_2_Return1_Successfully')": [
                        157
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testcleanName_SuccessfullyClean')": [
                        162
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_HARPER_HRPR')": [
                        171
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_SMITH_to_SMTH')": [
                        176
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_SMYTH_to_SMYTH')": [
                        181
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_Space_to_Nothing')": [
                        186
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_NoSpace_to_Nothing')": [
                        191
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_Null_to_Nothing')": [
                        196
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_One_Letter_to_Nothing')": [
                        201
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SMITH_SMYTH_SuccessfullyMatched')": [
                        210
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_BURNS_BOURNE_SuccessfullyMatched')": [
                        215
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_ShortNames_AL_ED_WorksButNoMatch')": [
                        220
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_CATHERINE_KATHRYN_SuccessfullyMatched')": [
                        225
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_BRIAN_BRYAN_SuccessfullyMatched')": [
                        230
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SEAN_SHAUN_SuccessfullyMatched')": [
                        235
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched')": [
                        240
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEPHEN_STEVEN_SuccessfullyMatched')": [
                        245
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEVEN_STEFAN_SuccessfullyMatched')": [
                        250
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEPHEN_STEFAN_SuccessfullyMatched')": [
                        255
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SAM_SAMUEL_SuccessfullyMatched')": [
                        260
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_MICKY_MICHAEL_SuccessfullyMatched')": [
                        265
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_OONA_OONAGH_SuccessfullyMatched')": [
                        270
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SOPHIE_SOFIA_SuccessfullyMatched')": [
                        275
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched')": [
                        280
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_TOMASZ_TOM_SuccessfullyMatched')": [
                        285
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SmallInput_CARK_Kl_SuccessfullyMatched')": [
                        290
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompareNameToSingleLetter_KARL_C_DoesNotMatch')": [
                        295
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_ZACH_ZAKARIA_SuccessfullyMatched')": [
                        300
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_KARL_ALESSANDRO_DoesNotMatch')": [
                        305
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot')": [
                        310
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch')": [
                        317
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch')": [
                        322
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch')": [
                        327
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched')": [
                        332
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched')": [
                        337
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched')": [
                        344
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched')": [
                        349
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched')": [
                        354
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched')": [
                        359
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched')": [
                        364
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched')": [
                        369
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched')": [
                        374
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_PETERSON_PETERS_SuccessfullyMatched')": [
                        381
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched')": [
                        386
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch')": [
                        391
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch')": [
                        396
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnameCornerCase_Nulls_NoMatch')": [
                        401
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected')": [
                        406
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_SEAN_JOHN_MatchExpected')": [
                        411
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_SEAN_PETE_NoMatchExpected')": [
                        416
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'createStringEncoder')": [
                        420
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', None)": [
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_AllLower_SuccessfullyRemoved')": [
                        43
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant')": [
                        48
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant')": [
                        53
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant')": [
                        58
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved')": [
                        63
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved')": [
                        69
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemovalNormalString_NoChange')": [
                        74
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testAccentRemoval_NINO_NoChange')": [
                        79
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully')": [
                        84
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully')": [
                        89
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveDoubleDoubleVowel_BEETLE_NotRemoved')": [
                        94
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testIsVowel_CapitalA_ReturnsTrue')": [
                        99
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testIsVowel_SmallD_ReturnsFalse')": [
                        104
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel_ALESSANDRA_Returns_ALSSNDR')": [
                        109
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel__AIDAN_Returns_ADN')": [
                        114
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testRemoveVowel__DECLAN_Returns_DCLN')": [
                        119
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetFirstLast3__ALEXANDER_Returns_Aleder')": [
                        124
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetFirstLast3_PETE_Returns_PETE')": [
                        129
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4')": [
                        134
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0')": [
                        139
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_7_Return4_Successfully')": [
                        144
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_2_Returns5_Successfully')": [
                        149
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetMinRating_2_Return1_Successfully')": [
                        154
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testcleanName_SuccessfullyClean')": [
                        159
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_HARPER_HRPR')": [
                        168
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_SMITH_to_SMTH')": [
                        173
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_SMYTH_to_SMYTH')": [
                        178
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_Space_to_Nothing')": [
                        183
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_NoSpace_to_Nothing')": [
                        188
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_Null_to_Nothing')": [
                        193
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testGetEncoding_One_Letter_to_Nothing')": [
                        198
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SMITH_SMYTH_SuccessfullyMatched')": [
                        207
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_BURNS_BOURNE_SuccessfullyMatched')": [
                        212
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_ShortNames_AL_ED_WorksButNoMatch')": [
                        217
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_CATHERINE_KATHRYN_SuccessfullyMatched')": [
                        222
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_BRIAN_BRYAN_SuccessfullyMatched')": [
                        227
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SEAN_SHAUN_SuccessfullyMatched')": [
                        232
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched')": [
                        237
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEPHEN_STEVEN_SuccessfullyMatched')": [
                        242
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEVEN_STEFAN_SuccessfullyMatched')": [
                        247
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_STEPHEN_STEFAN_SuccessfullyMatched')": [
                        252
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SAM_SAMUEL_SuccessfullyMatched')": [
                        257
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_MICKY_MICHAEL_SuccessfullyMatched')": [
                        262
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_OONA_OONAGH_SuccessfullyMatched')": [
                        267
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SOPHIE_SOFIA_SuccessfullyMatched')": [
                        272
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched')": [
                        277
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_TOMASZ_TOM_SuccessfullyMatched')": [
                        282
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SmallInput_CARK_Kl_SuccessfullyMatched')": [
                        287
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompareNameToSingleLetter_KARL_C_DoesNotMatch')": [
                        292
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_ZACH_ZAKARIA_SuccessfullyMatched')": [
                        297
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_KARL_ALESSANDRO_DoesNotMatch')": [
                        302
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot')": [
                        307
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch')": [
                        314
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch')": [
                        319
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch')": [
                        324
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched')": [
                        329
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched')": [
                        334
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched')": [
                        341
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched')": [
                        346
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched')": [
                        351
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched')": [
                        356
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched')": [
                        361
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched')": [
                        366
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched')": [
                        371
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_PETERSON_PETERS_SuccessfullyMatched')": [
                        378
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched')": [
                        383
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch')": [
                        388
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch')": [
                        393
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_SurnameCornerCase_Nulls_NoMatch')": [
                        398
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected')": [
                        403
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_SEAN_JOHN_MatchExpected')": [
                        408
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'testCompare_Forenames_SEAN_PETE_NoMatchExpected')": [
                        413
                    ],
                    "('org.apache.commons.codec.language#MatchRatingApproachEncoderTest', 'createStringEncoder')": [
                        417
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', None)": [
                        31,
                        58,
                        59,
                        60,
                        63,
                        64
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertIsMetaphoneEqual(String,String)')": [
                        37,
                        42
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertMetaphoneEqual(String)')": [
                        53,
                        54
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'getMetaphone')": [
                        61,
                        62
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'createStringEncoder')": [
                        66
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testMetaphone')": [
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWordEndingInMB')": [
                        386,
                        387,
                        388
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSCEOrSCIOrSCY')": [
                        393,
                        394,
                        395
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWhy')": [
                        404
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWordsWithCIA')": [
                        409
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTranslateOfSCHAndCH')": [
                        414,
                        415,
                        416,
                        417,
                        418
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTranslateToJOfDGEOrDGIOrDGY')": [
                        423,
                        424,
                        425
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSilentHAfterG')": [
                        430,
                        431
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSilentGN')": [
                        437,
                        440
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testPHTOF')": [
                        445
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testSHAndSIOAndSIAToX')": [
                        450,
                        451,
                        452
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTIOAndTIAToX')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTCH')": [
                        463,
                        464
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testExceedLength')": [
                        470
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testSetMaxLengthWithTruncation')": [
                        476,
                        477
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MetaphoneTest', None)": [
                        30
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertIsMetaphoneEqual(String,String)')": [
                        36,
                        41
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertMetaphoneEqual(String)')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'createStringEncoder')": [
                        58
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testMetaphone')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWordEndingInMB')": [
                        378,
                        379,
                        380
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSCEOrSCIOrSCY')": [
                        385,
                        386,
                        387
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWhy')": [
                        396
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testWordsWithCIA')": [
                        401
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTranslateOfSCHAndCH')": [
                        406,
                        407,
                        408,
                        409,
                        410
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTranslateToJOfDGEOrDGIOrDGY')": [
                        415,
                        416,
                        417
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSilentHAfterG')": [
                        422,
                        423
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testDiscardOfSilentGN')": [
                        429,
                        432
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testPHTOF')": [
                        437
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testSHAndSIOAndSIAToX')": [
                        442,
                        443,
                        444
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTIOAndTIAToX')": [
                        449,
                        450
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testTCH')": [
                        455,
                        456
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testExceedLength')": [
                        462
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'testSetMaxLengthWithTruncation')": [
                        468,
                        469
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/NysiisTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.codec.language#NysiisTest', None)": [
                        32
                    ],
                    "('org.apache.commons.codec.language#NysiisTest', 'createStringEncoder')": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#NysiisTest', None)": [
                        31
                    ],
                    "('org.apache.commons.codec.language#NysiisTest', 'createStringEncoder')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', None)": [
                        32,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'createStringEncoder')": [
                        35
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'getRefinedSoundex')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testDifference')": [
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        56,
                        59,
                        60,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testEncode')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testGetMappingCodeNonLetter')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#RefinedSoundexTest', None)": [
                        31
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'createStringEncoder')": [
                        34
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testDifference')": [
                        41,
                        42,
                        43,
                        45,
                        46,
                        47,
                        48,
                        51,
                        52,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testEncode')": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.codec.language#RefinedSoundexTest', 'testGetMappingCodeNonLetter')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/language/SoundexTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', None)": [
                        36,
                        41,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'createStringEncoder')": [
                        39
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'getSoundexEncoder')": [
                        46,
                        47
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testBadCharacters')": [
                        97
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testDifference')": [
                        104,
                        105,
                        106,
                        108,
                        109,
                        110,
                        111,
                        113,
                        114,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBasic')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch2')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch3')": [
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        171
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch4')": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeIgnoreTrimmable')": [
                        226
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx1')": [
                        238
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx2')": [
                        248,
                        249
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx3')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testMsSqlServer1')": [
                        287,
                        288
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testMsSqlServer3')": [
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testUsMappingEWithAcute')": [
                        365,
                        369,
                        375
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testUsMappingOWithDiaeresis')": [
                        386,
                        390,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#SoundexTest', None)": [
                        35
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'createStringEncoder')": [
                        38
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testBadCharacters')": [
                        89
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testDifference')": [
                        96,
                        97,
                        98,
                        100,
                        101,
                        102,
                        103,
                        105,
                        106,
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBasic')": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch2')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch3')": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        163
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeBatch4')": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testEncodeIgnoreTrimmable')": [
                        218
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx1')": [
                        230
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx2')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testHWRuleEx3')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testMsSqlServer1')": [
                        279,
                        280
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testMsSqlServer3')": [
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testUsMappingEWithAcute')": [
                        357,
                        361,
                        367
                    ],
                    "('org.apache.commons.codec.language#SoundexTest', 'testUsMappingOWithDiaeresis')": [
                        378,
                        382,
                        388
                    ]
                }
            }
        }
    },
    "11dc48317f0a145a8f84c26f2780f6a8b823a829": {
        "authored_data": "2012 Nov 28 20:34",
        "commit.message": "Refactor to use a var arg method instead of private methods which are now no longer needed and removed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414901 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "6cac3185109abceed625add96c1c7e60ff562ea1",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        906,
                        907,
                        910,
                        911,
                        912,
                        913,
                        914,
                        918,
                        919,
                        920,
                        921,
                        922,
                        926,
                        927,
                        928,
                        929,
                        930,
                        936,
                        937,
                        938,
                        939,
                        940,
                        948,
                        949,
                        950,
                        951,
                        952,
                        960,
                        961,
                        962
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String)')": [
                        908,
                        909,
                        967
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String,String)')": [
                        915,
                        916,
                        917
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String,String,String)')": [
                        923,
                        924,
                        925
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String,String,String,String)')": [
                        931,
                        932,
                        933,
                        934,
                        935
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String,String,String,String,String)')": [
                        941,
                        942,
                        943,
                        944,
                        945,
                        946,
                        947
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String,String,String,String,String,String)')": [
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String)')": [
                        910
                    ]
                }
            }
        }
    },
    "9e2f9e8f0062bce5a31988c8b01d638061b39dc1": {
        "authored_data": "2012 Nov 22 15:39",
        "commit.message": "<action dev=\"ggregory\" type=\"fix\" issue=\"CODEC-163\" due-to=\"leo141\">ColognePhonetic encoder unneccessarily creates many char arrays on every loop run.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1412589 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "53e90baa4554af27f9e00efdee86ef5efdd8f424",
        "changes": {
            "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "('org.apache.commons.codec.language#ColognePhonetic', 'colognePhonetic(String)')": [
                        334,
                        343,
                        345,
                        347,
                        349,
                        357,
                        363,
                        364,
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#ColognePhonetic', None)": [
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.codec.language#ColognePhonetic', 'colognePhonetic(String)')": [
                        345,
                        354,
                        356,
                        358,
                        360,
                        368,
                        374,
                        380
                    ]
                }
            }
        }
    }
}