{
    "4c5b1b745dad5176b27ab3f305553a19db535fa0": {
        "authored_data": "2019 Dec 30 22:17",
        "commit.message": "Add reference file for XXHash32 using a small number of bytes.\n\nThis hits the edge cases for completing the hash with leftover bytes and\nno processing in the main update method.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "08bfd445e88464a0d1b3de1f01f0f5903be2118f",
        "changes": {
            "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java": {
                "new": {
                    "('org.apache.commons.codec.digest#XXHash32Test', 'factory')": [
                        64,
                        67
                    ]
                }
            }
        }
    },
    "88e729ecddb4869b61c19f06623d19d347c4e42b": {
        "authored_data": "2019 Dec 30 21:51",
        "commit.message": "Test for incremental XXHash32.",
        "commit.author.name": "Alex Herbert",
        "pcid": "bc82d82d2a70200f5c7a084908f3587fbe8cc204",
        "changes": {
            "src/test/java/org/apache/commons/codec/digest/XXHash32Test.java": {
                "new": {
                    "('org.apache.commons.codec.digest#XXHash32Test', None)": [
                        79,
                        95,
                        96
                    ],
                    "('org.apache.commons.codec.digest#XXHash32Test', 'verifyIncrementalChecksum')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "bc82d82d2a70200f5c7a084908f3587fbe8cc204": {
        "authored_data": "2019 Dec 30 21:43",
        "commit.message": "Update the method to get the little-endian int.\n\nThe previous version used a generic method for variable length bytes\nalways with a fixed length of 4.",
        "commit.author.name": "Alex Herbert",
        "pcid": "33491ff84299cc1a48031fba066e6e69f21e1861",
        "changes": {
            "src/main/java/org/apache/commons/codec/digest/XXHash32.java": {
                "old": {
                    "('org.apache.commons.codec.digest#XXHash32', 'getInt(byte,int)')": [
                        166
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', None)": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'fromLittleEndian(byte,int,int)')": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ],
                    "(None, None)": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#XXHash32', None)": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'getInt(byte,int)')": [
                        173,
                        174,
                        175,
                        176
                    ]
                }
            }
        }
    },
    "33491ff84299cc1a48031fba066e6e69f21e1861": {
        "authored_data": "2019 Dec 30 21:40",
        "commit.message": "Overflow safe position counter in XXHash32.",
        "commit.author.name": "Alex Herbert",
        "pcid": "a387ac85030cf161b41472212dafc41e85fc393f",
        "changes": {
            "src/main/java/org/apache/commons/codec/digest/XXHash32.java": {
                "old": {
                    "('org.apache.commons.codec.digest#XXHash32', 'update(byte,int,int)')": [
                        97
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'getValue')": [
                        125
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'process(byte,int)')": [
                        181
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#XXHash32', None)": [
                        58,
                        59
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'reset')": [
                        82
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'update(byte,int,int)')": [
                        100,
                        101,
                        102,
                        103,
                        109,
                        123,
                        127,
                        128
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'getValue')": [
                        135,
                        136,
                        143
                    ],
                    "('org.apache.commons.codec.digest#XXHash32', 'process(byte,int)')": [
                        193
                    ]
                }
            }
        }
    },
    "a387ac85030cf161b41472212dafc41e85fc393f": {
        "authored_data": "2019 Dec 30 20:52",
        "commit.message": "Test incremental hash with huge length array added to unprocessed bytes.",
        "commit.author.name": "Alex Herbert",
        "pcid": "f40005ad5a9c892fa8d216b12029a49062224351",
        "changes": {
            "src/main/java/org/apache/commons/codec/digest/MurmurHash3.java": {
                "new": {
                    "('org.apache.commons.codec.digest#MurmurHash3', None)": [
                        1071
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/digest/MurmurHash3Test.java": {
                "new": {
                    "(None, None)": [
                        21,
                        926
                    ],
                    "('org.apache.commons.codec.digest#MurmurHash3Test', None)": [
                        894,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901
                    ],
                    "('org.apache.commons.codec.digest#MurmurHash3Test', 'testIncrementalHashWithUnprocessedBytesAndHugeLengthArray')": [
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925
                    ]
                }
            }
        }
    },
    "1a30728418f1d015453c0ad6521de56f4728e7bd": {
        "authored_data": "2019 Dec 30 14:44",
        "commit.message": "[CODEC-278] Deprecate Charset constants in\norg.apache.commons.codec.Charsets in favor of\njava.nio.charset.StandardCharsets.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "84efbacaee58c6232223f6125682de89c09e5ba9",
        "changes": {
            "src/main/java/org/apache/commons/codec/Charsets.java": {
                "old": {
                    "('org.apache.commons.codec#Charsets', None)": [
                        95,
                        96,
                        97,
                        108,
                        109,
                        110,
                        122,
                        123,
                        124,
                        135,
                        136,
                        137,
                        148,
                        149,
                        150,
                        161,
                        162,
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#Charsets', None)": [
                        96,
                        99,
                        108,
                        111,
                        121,
                        124,
                        133,
                        136,
                        145,
                        148,
                        157,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/Hex.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.codec.binary#Hex', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/binary/StringUtils.java": {
                "old": {
                    "('org.apache.commons.codec.binary#StringUtils', None)": [
                        124,
                        142,
                        191,
                        209,
                        227,
                        245,
                        263,
                        332,
                        348,
                        364,
                        380,
                        396,
                        412
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#StringUtils', None)": [
                        124,
                        142,
                        191,
                        209,
                        227,
                        245,
                        263,
                        332,
                        348,
                        364,
                        380,
                        396,
                        412
                    ]
                }
            },
            "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', None)": [
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/codec/CharsetsTest.java": {
                "new": {
                    "('org.apache.commons.codec#CharsetsTest', None)": [
                        40,
                        46,
                        52,
                        58,
                        64,
                        70
                    ]
                }
            }
        }
    }
}