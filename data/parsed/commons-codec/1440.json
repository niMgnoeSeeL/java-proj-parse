{
    "ce66f92033c01bcbb8ea2b22f59e1e9a5961e8c7": {
        "authored_data": "2011 Jul 27 13:20",
        "commit.message": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Fix test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151455 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "479b5d3fbb28f30801807bf3afc29b195e0366dc",
        "changes": {
            "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'invalidLangResourceShouldRaiseException')": [
                        41
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'invalidLangShouldRaiseException')": [
                        46
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'invalidLanguageResourceShouldRaiseException')": [
                        51
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'negativeIndexForRuleMatchShouldRaiseException')": [
                        56
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'setConcat')": [
                        62
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'setNameTypeAsh')": [
                        69
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'setRuleTypeExact')": [
                        76
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'setRuleTypeToRulesShouldRaiseException')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testInvalidLangIllegalStateException')": [
                        41
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testInvalidLangIllegalArgumentException')": [
                        46
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testInvalidLanguageIllegalArgumentException')": [
                        51
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testNegativeIndexForRuleMatchIndexOutOfBoundsException')": [
                        56
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testSetConcat')": [
                        62
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testSetNameTypeAsh')": [
                        69
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testSetRuleTypeExact')": [
                        76
                    ],
                    "('org.apache.commons.codec.language.bm#BeiderMorseEncoderTest', 'testSetRuleTypeToRulesIllegalArgumentException')": [
                        83
                    ]
                }
            }
        }
    },
    "479b5d3fbb28f30801807bf3afc29b195e0366dc": {
        "authored_data": "2011 Jul 27 02:57",
        "commit.message": "Better names: languageArg -> languageSet\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151318 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "de74d1f1c4c7264e3e90f916aec20ce9daaf3259",
        "changes": {
            "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java": {
                "old": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'encode(String)')": [
                        135,
                        136
                    ],
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        144
                    ],
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'phoneticUtf8(String,Set)')": [
                        147,
                        148,
                        150,
                        218,
                        223,
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'encode(String)')": [
                        135,
                        136
                    ],
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', None)": [
                        144
                    ],
                    "('org.apache.commons.codec.language.bm#PhoneticEngine', 'phoneticUtf8(String,Set)')": [
                        147,
                        148,
                        150,
                        218,
                        223,
                        224
                    ]
                }
            }
        }
    },
    "5d72a46abc9bfc8f8ed146b5f598106802761e21": {
        "authored_data": "2011 Jul 22 17:02",
        "commit.message": "Remove unnecessary cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1149651 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c4d54bc44dd45c38bc44858f54a7e9de8ae2c39b",
        "changes": {
            "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java": {
                "old": {
                    "('org.apache.commons.codec#StringEncoderComparatorTest', 'testComparatorWithDoubleMetaphone')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#StringEncoderComparatorTest', 'testComparatorWithDoubleMetaphone')": [
                        60
                    ]
                }
            }
        }
    },
    "c4d54bc44dd45c38bc44858f54a7e9de8ae2c39b": {
        "authored_data": "2011 Jul 11 01:12",
        "commit.message": "Make fields final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1145002 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "acf70b38d27bf6063d76cd9897beafef8040ff02",
        "changes": {
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        1034,
                        1035,
                        1036
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', None)": [
                        1034,
                        1035,
                        1036
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64Test', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64Test', None)": [
                        44
                    ]
                }
            },
            "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java": {
                "old": {
                    "('org.apache.commons.codec.digest#DigestUtilsTest', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.digest#DigestUtilsTest', None)": [
                        38
                    ]
                }
            }
        }
    },
    "acf70b38d27bf6063d76cd9897beafef8040ff02": {
        "authored_data": "2011 Jul 11 01:10",
        "commit.message": "Convert to Java 5 enhanced loops. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1145000 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "1440a376ccd084fa50c7e6f7adf251bb0d489512",
        "changes": {
            "src/java/org/apache/commons/codec/binary/BaseNCodec.java": {
                "old": {
                    "('org.apache.commons.codec.binary#BaseNCodec', 'containsAlphabetOrPad(byte)')": [
                        418,
                        419
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#BaseNCodec', 'containsAlphabetOrPad(byte)')": [
                        418,
                        419
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "('org.apache.commons.codec.language#ColognePhonetic', 'arrayContains(char,char)')": [
                        275,
                        276
                    ],
                    "('org.apache.commons.codec.language#ColognePhonetic', 'preprocess(String)')": [
                        409,
                        410,
                        411
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#ColognePhonetic', 'arrayContains(char,char)')": [
                        275,
                        276
                    ],
                    "('org.apache.commons.codec.language#ColognePhonetic', 'preprocess(String)')": [
                        409,
                        410,
                        411
                    ]
                }
            },
            "src/java/org/apache/commons/codec/language/DoubleMetaphone.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'isSilentStart(String)')": [
                        908,
                        909
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String)')": [
                        1016,
                        1017
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'isSilentStart(String)')": [
                        908,
                        909
                    ],
                    "('org.apache.commons.codec.language#DoubleMetaphone', 'contains(String,int,int,String)')": [
                        1016,
                        1017
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodec', 'doDecoding(byte)')": [
                        156,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodec', 'doDecoding(byte)')": [
                        156,
                        157
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encodeQuotedPrintable(BitSet,byte)')": [
                        148,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodec', 'encodeQuotedPrintable(BitSet,byte)')": [
                        148,
                        149
                    ]
                }
            },
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', 'encodeUrl(BitSet,byte)')": [
                        133,
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', 'encodeUrl(BitSet,byte)')": [
                        133,
                        134
                    ]
                }
            },
            "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java": {
                "old": {
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'checkEncodings(String)')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'checkEncodingVariations(String,String)')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'testLocaleIndependence')": [
                        96,
                        101,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'checkEncodings(String)')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'checkEncodingVariations(String,String)')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.codec#StringEncoderAbstractTest', 'testLocaleIndependence')": [
                        96,
                        101,
                        105
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        233,
                        234,
                        243,
                        244,
                        253,
                        254,
                        268,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        233,
                        234,
                        243,
                        244,
                        253,
                        254,
                        268,
                        269
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base32Test.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32Samples')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32HexSamples')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32Chunked')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32Samples')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32HexSamples')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.codec.binary#Base32Test', 'testBase32Chunked')": [
                        80,
                        81
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base32TestData.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base32TestData', 'bytesContain(byte,byte)')": [
                        119,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base32TestData', 'bytesContain(byte,byte)')": [
                        119,
                        120
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        245,
                        246,
                        255,
                        256,
                        265,
                        266,
                        280,
                        281
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64OutputStreamTest', 'testByteByByte(byte,byte,int,byte)')": [
                        245,
                        246,
                        255,
                        256,
                        265,
                        266,
                        280,
                        281
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64TestData.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64TestData', 'bytesContain(byte,byte)')": [
                        217,
                        218
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64TestData', 'bytesContain(byte,byte)')": [
                        217,
                        218
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'testIsEncodeEquals')": [
                        145,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#ColognePhoneticTest', 'testIsEncodeEquals')": [
                        145,
                        146
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneEqualTest(String,boolean)')": [
                        1032,
                        1033,
                        1034
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#DoubleMetaphoneTest', 'doubleMetaphoneEqualTest(String,boolean)')": [
                        1032,
                        1033,
                        1034
                    ]
                }
            },
            "src/test/org/apache/commons/codec/language/MetaphoneTest.java": {
                "old": {
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertIsMetaphoneEqual(String,String)')": [
                        36,
                        37,
                        38,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertMetaphoneEqual(String)')": [
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertIsMetaphoneEqual(String,String)')": [
                        36,
                        37,
                        38,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.codec.language#MetaphoneTest', 'assertMetaphoneEqual(String)')": [
                        50,
                        51,
                        52
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/BCodecTest.java": {
                "old": {
                    "('org.apache.commons.codec.net#BCodecTest', 'constructString(int)')": [
                        46,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#BCodecTest', 'constructString(int)')": [
                        46,
                        47
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QCodecTest.java": {
                "old": {
                    "('org.apache.commons.codec.net#QCodecTest', 'constructString(int)')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QCodecTest', 'constructString(int)')": [
                        52,
                        53
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java": {
                "old": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodecTest', 'constructString(int)')": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#QuotedPrintableCodecTest', 'constructString(int)')": [
                        50,
                        51
                    ]
                }
            },
            "src/test/org/apache/commons/codec/net/URLCodecTest.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodecTest', 'constructString(int)')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodecTest', 'constructString(int)')": [
                        55,
                        56
                    ]
                }
            }
        }
    }
}