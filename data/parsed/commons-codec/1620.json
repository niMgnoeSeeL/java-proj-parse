{
    "eabb90925568f9e4b04754918840db8156e5444a": {
        "authored_data": "2011 Jan 25 01:28",
        "commit.message": "CODEC-99 - Oops, I forgot to update the Javadoc. Thanks, Sebb, for pointing that out!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063096 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "5223a63fa67fddcd092b2ae214b1eff0173a52c2",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        651,
                        656
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        651,
                        653,
                        654,
                        655,
                        659
                    ]
                }
            }
        }
    },
    "5223a63fa67fddcd092b2ae214b1eff0173a52c2": {
        "authored_data": "2011 Jan 25 01:16",
        "commit.message": "CODEC-110 - Add a String version of Base64.isArrayByteBase64()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063091 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Julius Davies",
        "pcid": "d8acbb037753e5ee864b11138238b9811c61719e",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "new": {
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        621,
                        622,
                        623
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'isStringBase64(String)')": [
                        619,
                        620
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64Test.java": {
                "new": [
                    "LexerError",
                    "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ]
                ]
            }
        }
    },
    "d8acbb037753e5ee864b11138238b9811c61719e": {
        "authored_data": "2011 Jan 24 04:29",
        "commit.message": "Javadoc clean ups (especially @see tags)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062642 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "6b08732ee9aae06316dbdead2aad13f08190853e",
        "changes": {
            "src/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        29,
                        30,
                        31,
                        32,
                        36,
                        37,
                        47,
                        48,
                        49,
                        155,
                        156,
                        157,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        192,
                        194
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        32,
                        33,
                        43,
                        44,
                        150,
                        151,
                        175,
                        176,
                        177,
                        179
                    ]
                }
            }
        }
    },
    "8269f17bdb90ebfbfc498503a601e085c7b458aa": {
        "authored_data": "2011 Jan 24 01:06",
        "commit.message": "[CODEC-111] org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR isn't final but should be. https://issues.apache.org/jira/browse/CODEC-111\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062599 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "85b09d76f239b20cf3e37e5507d371c355a9b318",
        "changes": {
            "src/java/org/apache/commons/codec/net/URLCodec.java": {
                "old": {
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.net#URLCodec', None)": [
                        67,
                        68,
                        69
                    ]
                }
            }
        }
    },
    "2c13032a16e37b7bc9e0272d25fc185b5c82b42e": {
        "authored_data": "2011 Jan 24 00:46",
        "commit.message": "[CODEC-105] ArrayIndexOutOfBoundsException when doing multiple reads() on encoding b64InputStream. https://issues.apache.org/jira/browse/CODEC-105\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062592 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "931e25921dc0ec705a0055655aa2b2237a0888d7",
        "changes": {
            "src/java/org/apache/commons/codec/binary/Base64.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64', 'readResults(byte,int,int)')": [
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417
                    ],
                    "('org.apache.commons.codec.binary#Base64', None)": [
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        443
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'setInitialBuffer(byte,int,int)')": [
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte,int,int)')": [
                        496
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'decode(byte)')": [
                        754,
                        755,
                        756,
                        759,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte)')": [
                        949,
                        950,
                        951,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        964,
                        965
                    ]
                },
                "new": {
                    "('org.apache.commons.codec.binary#Base64', 'readResults(byte,int,int)')": [
                        409,
                        410,
                        411
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte,int,int)')": [
                        469,
                        470,
                        471,
                        472
                    ],
                    "('org.apache.commons.codec.binary#Base64', 'encode(byte)')": [
                        917,
                        918,
                        919
                    ]
                }
            },
            "src/java/org/apache/commons/codec/binary/Base64InputStream.java": {
                "old": {
                    "('org.apache.commons.codec.binary#Base64InputStream', 'read(byte,int,int)')": [
                        169,
                        170,
                        171,
                        172,
                        173
                    ]
                }
            },
            "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        59
                    ],
                    "('org.apache.commons.codec.binary#Base64InputStreamTest', 'testCodec105')": [
                        55,
                        56,
                        57,
                        58
                    ]
                }
            }
        }
    },
    "931e25921dc0ec705a0055655aa2b2237a0888d7": {
        "authored_data": "2011 Jan 23 23:17",
        "commit.message": "@version 1.5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062572 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "8027ef85a1ca914de336af572c0de9918d5585bb",
        "changes": {
            "src/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "(None, None)": [
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        192
                    ]
                }
            }
        }
    },
    "8027ef85a1ca914de336af572c0de9918d5585bb": {
        "authored_data": "2011 Jan 23 23:16",
        "commit.message": "@author tag is ASF (like all others)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062570 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "3472e167c647bf982bd97336a3097c4a38a72d09",
        "changes": {
            "src/java/org/apache/commons/codec/language/ColognePhonetic.java": {
                "old": {
                    "(None, None)": [
                        191
                    ]
                },
                "new": {
                    "(None, None)": [
                        191
                    ]
                }
            }
        }
    }
}