{
    "62724c69eac26284c41fe4b9338b0a6b61259f94": {
        "authored_data": "2018 Jun 07 13:14",
        "commit.message": "FIX: Removed fetchedSet field from ResolveEngine because this was causing issues when the same ResolveEngine instance was used by multiple threads. The fetchedSet is now passed around as parameter between the 'fetch' methods of this class.\n",
        "commit.author.name": "Maarten Coene",
        "pcid": "30696f6e16b09ad3f992e409472bd2b1e97a94f1",
        "changes": {
            "src/java/org/apache/ivy/core/resolve/ResolveEngine.java": {
                "old": {
                    "('org.apache.ivy.core.resolve#ResolveEngine', None)": [
                        89,
                        90
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'getDependencies(ModuleDescriptor,ResolveOptions,ResolveReport)')": [
                        584,
                        585,
                        608,
                        615
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'fetchDependencies(VisitNode,String,boolean)')": [
                        699,
                        731,
                        739,
                        755
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'doFetchDependencies(VisitNode,String)')": [
                        767,
                        794,
                        798,
                        803,
                        814,
                        815,
                        816,
                        817,
                        818
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'isDependenciesFetched(IvyNode,String)')": [
                        837
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'markDependenciesFetched(IvyNode,String)')": [
                        842
                    ]
                },
                "new": {
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'getDependencies(ModuleDescriptor,ResolveOptions,ResolveReport)')": [
                        604
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'fetchDependencies(VisitNode,String,Set,boolean)')": [
                        694,
                        726,
                        734,
                        750
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'doFetchDependencies(VisitNode,String,Set)')": [
                        762,
                        789,
                        793,
                        798,
                        809,
                        810,
                        811,
                        812,
                        813
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'isDependenciesFetched(IvyNode,String,Set)')": [
                        832
                    ],
                    "('org.apache.ivy.core.resolve#ResolveEngine', 'markDependenciesFetched(IvyNode,String,Set)')": [
                        837
                    ]
                }
            }
        }
    },
    "30696f6e16b09ad3f992e409472bd2b1e97a94f1": {
        "authored_data": "2018 Apr 23 12:03",
        "commit.message": "FIX: ModuleDescriptorMemoryCache isn't thread safe resulting in corruption of the LinkedHashMap internal structure when multiple threads simultaneously read/write to this cache.\n",
        "commit.author.name": "Maarten Coene",
        "pcid": "ad90d4b7e88ddc7f81ea2115973d950f1b37d7b9",
        "changes": {
            "src/java/org/apache/ivy/core/cache/ModuleDescriptorMemoryCache.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.ivy.core.cache#ModuleDescriptorMemoryCache', 'getFromCache(File,ParserSettings,boolean)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.ivy.core.cache#ModuleDescriptorMemoryCache', 'putInCache(File,ParserSettingsMonitor,boolean,ModuleDescriptor)')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.ivy.core.cache#ModuleDescriptorMemoryCache', 'getFromCache(File,ParserSettings,boolean)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.ivy.core.cache#ModuleDescriptorMemoryCache', 'putInCache(File,ParserSettingsMonitor,boolean,ModuleDescriptor)')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            }
        }
    }
}