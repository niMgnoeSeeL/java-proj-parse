{
    "6641cc08d9568fcd6a291cab8cb0a7c4860e43b6": {
        "authored_data": "2016 Nov 03 09:08",
        "commit.message": "Fix DBCP-458\n\nMake it simpler to extend BasicDataSource to allow sub-classes to\nprovide custom GenericObjectPool implementations.",
        "commit.author.name": "Mark Thomas",
        "pcid": "861879edc67cdf244d1f7d1ea927f7c1a9399263",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/BasicDataSource.java": {
                "old": {
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createConnectionPool(PoolableConnectionFactory)')": [
                        2193,
                        2194,
                        2195,
                        2196,
                        2197,
                        2198,
                        2199,
                        2200,
                        2201
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createConnectionPool(PoolableConnectionFactory)')": [
                        2193
                    ],
                    "('org.apache.commons.dbcp2#BasicDataSource', None)": [
                        2210,
                        2211,
                        2212,
                        2213,
                        2214,
                        2215,
                        2216,
                        2217,
                        2218,
                        2219
                    ],
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createObjectPool(PoolableConnectionFactory,GenericObjectPoolConfig,AbandonedConfig)')": [
                        2220,
                        2221,
                        2222,
                        2223,
                        2224,
                        2225,
                        2226,
                        2227,
                        2228,
                        2229,
                        2230,
                        2231,
                        2232
                    ]
                }
            }
        }
    },
    "861879edc67cdf244d1f7d1ea927f7c1a9399263": {
        "authored_data": "2016 Nov 03 09:01",
        "commit.message": "Fix DBCP-459\n\nEnsure that a thread's interrupt status is visible to the caller if the\nthread is interrupted during a call to PoolingDataSource.getConnection()",
        "commit.author.name": "Mark Thomas",
        "pcid": "e6543480ad73e45c7f02710b0ee15352664e118a",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/PoolingDataSource.java": {
                "new": {
                    "('org.apache.commons.dbcp2#PoolingDataSource', 'getConnection')": [
                        146,
                        147,
                        148,
                        149
                    ]
                }
            }
        }
    },
    "e6543480ad73e45c7f02710b0ee15352664e118a": {
        "authored_data": "2016 Nov 03 08:53",
        "commit.message": "Fix DBCP-462\n\nRefactoring to prepare for a future patch to enable pooling of all\nprepared and callable statements in PoolingConnection.",
        "commit.author.name": "Mark Thomas",
        "pcid": "8a1c1118558c8a4ec4d0b972d0c58906eaa3dd87",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/PStmtKey.java": {
                "old": {
                    "('org.apache.commons.dbcp2#PStmtKey', None)": [
                        48,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        295,
                        296
                    ],
                    "('org.apache.commons.dbcp2#PStmtKey', None)": [
                        51,
                        52,
                        55,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        227,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.dbcp2#PStmtKey', 'createStatement(Connection)')": [
                        228,
                        229,
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/dbcp2/PoolingConnection.java": {
                "old": {
                    "('org.apache.commons.dbcp2#PoolingConnection', 'makeObject(PStmtKey)')": [
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        332,
                        333,
                        334,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#PoolingConnection', 'makeObject(PStmtKey)')": [
                        320,
                        321,
                        323,
                        325,
                        326,
                        327,
                        328
                    ]
                }
            },
            "src/test/java/org/apache/commons/dbcp2/TesterConnection.java": {
                "old": {
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareCall(String)')": [
                        162
                    ],
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareCall(String,int,int)')": [
                        168
                    ],
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareStatement(String,int)')": [
                        305
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareCall(String)')": [
                        162
                    ],
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareCall(String,int,int)')": [
                        168
                    ],
                    "('org.apache.commons.dbcp2#TesterConnection', 'prepareStatement(String,int)')": [
                        305,
                        306
                    ]
                }
            },
            "src/test/java/org/apache/commons/dbcp2/TesterPreparedStatement.java": {
                "new": {
                    "('org.apache.commons.dbcp2#TesterPreparedStatement', None)": [
                        48,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        93,
                        94,
                        97,
                        98
                    ],
                    "('org.apache.commons.dbcp2#TesterPreparedStatement', 'getSql')": [
                        91,
                        92
                    ],
                    "('org.apache.commons.dbcp2#TesterPreparedStatement', 'getAutoGeneratedKeys')": [
                        99,
                        100
                    ]
                }
            }
        }
    },
    "8a1c1118558c8a4ec4d0b972d0c58906eaa3dd87": {
        "authored_data": "2016 Nov 02 21:55",
        "commit.message": "Fix DBCP-463\n\nCorrect a typo in the method name\nPoolableConnectionFactory#setMaxOpenPreparedStatements. The old method\nremains but is deprecated so not to break clients currently using the\nincorrect name.",
        "commit.author.name": "Mark Thomas",
        "pcid": "f740290ca049e11fcb61439469d354a97272dc41",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/BasicDataSource.java": {
                "old": {
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createDataSource')": [
                        2036
                    ],
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createPoolableConnectionFactory(ConnectionFactory)')": [
                        2277
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createDataSource')": [
                        2036
                    ],
                    "('org.apache.commons.dbcp2#BasicDataSource', 'createPoolableConnectionFactory(ConnectionFactory)')": [
                        2277
                    ]
                }
            },
            "src/main/java/org/apache/commons/dbcp2/PoolableConnectionFactory.java": {
                "new": {
                    "('org.apache.commons.dbcp2#PoolableConnectionFactory', None)": [
                        161,
                        164,
                        165
                    ],
                    "('org.apache.commons.dbcp2#PoolableConnectionFactory', 'setMaxOpenPrepatedStatements(int)')": [
                        163
                    ],
                    "('org.apache.commons.dbcp2#PoolableConnectionFactory', 'setMaxOpenPreparedStatements(int)')": [
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/dbcp2/managed/BasicManagedDataSource.java": {
                "old": {
                    "('org.apache.commons.dbcp2.managed#BasicManagedDataSource', 'createPoolableConnectionFactory(ConnectionFactory)')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2.managed#BasicManagedDataSource', 'createPoolableConnectionFactory(ConnectionFactory)')": [
                        198
                    ]
                }
            },
            "src/test/java/org/apache/commons/dbcp2/TestPoolingDriver.java": {
                "old": {
                    "('org.apache.commons.dbcp2#TestPoolingDriver', 'setUp')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#TestPoolingDriver', 'setUp')": [
                        65
                    ]
                }
            }
        }
    },
    "f740290ca049e11fcb61439469d354a97272dc41": {
        "authored_data": "2016 Nov 02 21:40",
        "commit.message": "Fix DBCP-468\n\nExpand the fail-fast for fatal connection errors feature to include\nmanaged connections.",
        "commit.author.name": "Mark Thomas",
        "pcid": "0b5b1be810baf881d835ef2a96d55f54f537a6a5",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/managed/PoolableManagedConnection.java": {
                "old": {
                    "('org.apache.commons.dbcp2.managed#PoolableManagedConnection', None)": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.dbcp2.managed#PoolableManagedConnection', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/dbcp2/managed/PoolableManagedConnectionFactory.java": {
                "old": {
                    "('org.apache.commons.dbcp2.managed#PoolableManagedConnectionFactory', 'makeObject')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2.managed#PoolableManagedConnectionFactory', 'makeObject')": [
                        96,
                        97
                    ]
                }
            }
        }
    },
    "0b5b1be810baf881d835ef2a96d55f54f537a6a5": {
        "authored_data": "2016 Nov 02 21:24",
        "commit.message": "Fix DBCP-472\n\nAvoid potential infinite loops when checking if an SQLException is fatal\nfor a connection or not.",
        "commit.author.name": "Mark Thomas",
        "pcid": "a2042657406bddbd50fd6d884be65e1b4999b8a3",
        "changes": {
            "src/main/java/org/apache/commons/dbcp2/PoolableConnection.java": {
                "old": {
                    "('org.apache.commons.dbcp2#PoolableConnection', 'isDisconnectionSqlException(SQLException)')": [
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.dbcp2#PoolableConnection', 'isDisconnectionSqlException(SQLException)')": [
                        329,
                        330
                    ]
                }
            }
        }
    }
}