{
    "48f6ba83b1403737cbb6c439c8e6729618813ea7": {
        "authored_data": "2019 Nov 23 10:39",
        "commit.message": "IMAGING-242 Replace Theories with nested loops\n\nFinish the work started in\nhttps://github.com/apache/commons-imaging/pull/59 and convert the\nvintage @Theories to Jupiter @MethodSources.\n\nNote that Jupiter doesn't have a built-in mechanism to create a\nCartesian product between two sources (like @Theories does), so it had\nto be explicitly implemented manually.\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "af4bf94319c7dc09567551e84363d63ae32803a0",
        "changes": {
            "src/test/java/org/apache/commons/imaging/roundtrip/BitmapRoundtripTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        27
                    ],
                    "('org.apache.commons.imaging.roundtrip#BitmapRoundtripTest', None)": [
                        30,
                        43,
                        44,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.roundtrip#BitmapRoundtripTest', 'testBitmapRoundtrip')": [
                        41,
                        42
                    ],
                    "('org.apache.commons.imaging.roundtrip#BitmapRoundtripTest', None)": [
                        43,
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/FullColorRoundtrip.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        27
                    ],
                    "('org.apache.commons.imaging.roundtrip#FullColorRoundtrip', None)": [
                        30,
                        38,
                        39,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.roundtrip#FullColorRoundtrip', 'testFullColorRoundtrip')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.imaging.roundtrip#FullColorRoundtrip', None)": [
                        38,
                        40,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/GrayscaleRountripTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        27
                    ],
                    "('org.apache.commons.imaging.roundtrip#GrayscaleRountripTest', None)": [
                        30,
                        43,
                        44,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.roundtrip#GrayscaleRountripTest', 'testGrayscaleRoundtrip')": [
                        41,
                        42
                    ],
                    "('org.apache.commons.imaging.roundtrip#GrayscaleRountripTest', None)": [
                        43,
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/LimitedColorRoundtripTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        27
                    ],
                    "('org.apache.commons.imaging.roundtrip#LimitedColorRoundtripTest', None)": [
                        30,
                        38,
                        39,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.roundtrip#LimitedColorRoundtripTest', 'testLimitedColorRoundtrip')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.imaging.roundtrip#LimitedColorRoundtripTest', None)": [
                        38,
                        40,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/PixelDensityRoundtrip.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        36
                    ],
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', None)": [
                        39,
                        40,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        25,
                        31,
                        32
                    ],
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip')": [
                        38,
                        39
                    ],
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', None)": [
                        40,
                        42,
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "new": {
                    "(None, None)": [
                        24,
                        27,
                        36,
                        82
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'createRoundtripArguments(BufferedImage)')": [
                        80,
                        81
                    ]
                }
            }
        }
    },
    "af4bf94319c7dc09567551e84363d63ae32803a0": {
        "authored_data": "2019 Nov 24 07:01",
        "commit.message": "IMAGING-242 Standardize TestImageWriteException asserts\n\nUse assertion methods from org.junit.jupiter.api.Assertions instead\nof org.junit.Assert, as per the project's standard.\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "0060c9da37518a8681efda09962a8e48177b6e99",
        "changes": {
            "src/test/java/org/apache/commons/imaging/TestImageWriteException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            }
        }
    },
    "0060c9da37518a8681efda09962a8e48177b6e99": {
        "authored_data": "2019 Nov 24 07:01",
        "commit.message": "IMAGING-242 Standardize TestImageReadException asserts\n\nUse assertion methods from org.junit.jupiter.api.Assertions instead\nof org.junit.Assert, as per the project's standard.\n",
        "commit.author.name": "Allon Mureinik",
        "pcid": "a89a636e8c2773486235a6db2a34c4a269f9458c",
        "changes": {
            "src/test/java/org/apache/commons/imaging/TestImageReadException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            }
        }
    },
    "e810677f28b7a8d718596f6da0a00ef7c1670341": {
        "authored_data": "2019 Nov 20 11:43",
        "commit.message": "[IMAGING-243]: Allow users to specify the compression level for PNG deflater\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "284bd3061ed43c5c91033d49cd5b4ecbb400aae9",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngConstants.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngConstants', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        559
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        348,
                        365,
                        366,
                        367,
                        370,
                        564
                    ]
                }
            }
        }
    },
    "284bd3061ed43c5c91033d49cd5b4ecbb400aae9": {
        "authored_data": "2019 Nov 20 11:40",
        "commit.message": "[IMAGING-243]: Avoid creating an extra boolean\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "da148a621c510668ff6c96d3e23a125c3e073af8",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        444
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        444
                    ]
                }
            }
        }
    },
    "da148a621c510668ff6c96d3e23a125c3e073af8": {
        "authored_data": "2019 Nov 21 09:06",
        "commit.message": "[IMAGING-243]: Removed unused private class TransparentPalette\n",
        "commit.author.name": "Andreas Menze",
        "pcid": "ede051b50b3c278a8246ecd9d6483808fb5331e5",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341
                    ]
                }
            }
        }
    }
}