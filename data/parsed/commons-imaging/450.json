{
    "b4b249c64733e572c231f1891769062688cf3826": {
        "authored_data": "2019 Dec 14 22:32",
        "commit.message": "[IMAGING-151]: Make colorCounts private and return a copy of the list in a method\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "a91b03d59067260bb2818b52b8760db5f5786352",
        "changes": {
            "src/main/java/org/apache/commons/imaging/palette/ColorGroup.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        30,
                        127,
                        128,
                        129,
                        130,
                        133,
                        134
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'getColorCounts')": [
                        131,
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/LongestAxisMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        77,
                        82,
                        83,
                        94,
                        106,
                        108,
                        109,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        77,
                        78,
                        83,
                        84,
                        95,
                        107,
                        109,
                        110,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MedianCutQuantizer.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut)')": [
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        46,
                        55,
                        60,
                        61,
                        71,
                        82,
                        84,
                        85,
                        104,
                        106,
                        108,
                        109,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        46,
                        55,
                        60,
                        61,
                        71,
                        82,
                        84,
                        85,
                        104,
                        106,
                        108,
                        109,
                        116
                    ]
                }
            }
        }
    },
    "a91b03d59067260bb2818b52b8760db5f5786352": {
        "authored_data": "2019 Dec 14 22:21",
        "commit.message": "[IMAGING-151]: Remove public modifiers from package-protected class members\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "8e380e05d2633213fd05499fccf9a7616e5958f8",
        "changes": {
            "src/main/java/org/apache/commons/imaging/palette/ColorGroup.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        24,
                        25,
                        26,
                        27,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        40,
                        41,
                        42,
                        43,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'contains(int)')": [
                        82
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'getMedianValue')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        24,
                        25,
                        26,
                        27,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        40,
                        41,
                        42,
                        43,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'contains(int)')": [
                        82
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'getMedianValue')": [
                        103
                    ]
                }
            }
        }
    },
    "b751732a354ce908da9e10b30b99262824a4452c": {
        "authored_data": "2019 Dec 15 04:00",
        "commit.message": "[IMAGING-244]: Use isEmpty instead of comparing size() with integers\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "6b1d1272568d6b24a0417b05af8434d6b27acc3e",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findAllImageData(GifImageContents)')": [
                        673,
                        679,
                        690
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1144
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findAllImageData(GifImageContents)')": [
                        673,
                        679,
                        690
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1144
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        395
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        395
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        291
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        390
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        691,
                        709
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        390
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        691,
                        709
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readFirstDirectory(ByteSource,Map,boolean,FormatCompliance)')": [
                        380
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        395
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readFirstDirectory(ByteSource,Map,boolean,FormatCompliance)')": [
                        380
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        395
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffTags.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTag(int,List)')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTag(int,List)')": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorGroup.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MedianCutQuantizer.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut)')": [
                        133
                    ]
                }
            }
        }
    },
    "282814065819cc411b8282dfb9e37c3d30aaab04": {
        "authored_data": "2019 Dec 15 03:40",
        "commit.message": "[IMAGING-146]: add javadoc comments to the color package\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "a1072f61f68dcd4f58d171ce576314be7d57101d",
        "changes": {
            "src/main/java/org/apache/commons/imaging/color/ColorCieLab.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLch.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLuv.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmy.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmyk.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsl.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsv.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHunterLab.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorXyz.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28
                    ]
                }
            }
        }
    },
    "42e8dbffd9a1ed7cec4d8713d708aac7e22f9034": {
        "authored_data": "2019 Dec 14 22:11",
        "commit.message": "[IMAGING-155]: cleaning up ImagingTest base class by removing createTempFile method and using the JDK File method instead\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "a1072f61f68dcd4f58d171ce576314be7d57101d",
        "changes": {
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        32,
                        33,
                        34,
                        35,
                        39
                    ],
                    "('org.apache.commons.imaging#ImagingTest', 'createTempFile(String,String)')": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        154
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        410
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        410
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        540
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        540
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        127,
                        148
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        127,
                        148
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource,File)')": [
                        77
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data,File)')": [
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource,File)')": [
                        77
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data,File)')": [
                        159
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate(File)')": [
                        52,
                        73,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate(File)')": [
                        52,
                        73,
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/ConvertPngToGifTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngMultipleRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngTextTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteForceTrueColorText.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        195
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        195
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        224
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xmp/XmpUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/NullParametersRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/PixelDensityRoundtrip.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', None)": [
                        40,
                        41,
                        42,
                        78,
                        79
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        46,
                        66
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'createTempFile(String,String)')": [
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        42,
                        62
                    ]
                }
            }
        }
    },
    "a1072f61f68dcd4f58d171ce576314be7d57101d": {
        "authored_data": "2019 Dec 10 15:44",
        "commit.message": "Javadoc: Replace <code></code> HTML tags with Javadoc {@code} notation.",
        "commit.author.name": "Gary Gregory",
        "pcid": "0a765990af2b1dbcad8c5dd438153be568a190cd",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', None)": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', None)": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffField.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', None)": [
                        80,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', None)": [
                        80,
                        104
                    ]
                }
            }
        }
    }
}