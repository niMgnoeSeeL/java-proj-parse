{
    "c0bebc00bef47b80b3e65944e11106135cc6d2f9": {
        "authored_data": "2016 Jun 09 23:06",
        "commit.message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1747606 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "3bc748d0814ccc542b4abb70e1a00b1111f70452",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test1BPPIconMaskVersus8BPPMask')": [
                        91
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMask')": [
                        129
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', None)": [
                        130
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMaskVersus1BPPMask')": [
                        186
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon1BPPMaskVersus8BPPMask')": [
                        244
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIconNoMask')": [
                        270
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskedIcon')": [
                        326
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPHalfMaskedIcon')": [
                        379
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskMissingIcon')": [
                        410
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', None)": [
                        128,
                        129
                    ]
                }
            }
        }
    },
    "3bc748d0814ccc542b4abb70e1a00b1111f70452": {
        "authored_data": "2016 Jun 09 23:03",
        "commit.message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1747603 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "e178aba09295b097e21215ae137c213f381d5805",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test1BPPIconMaskVersus8BPPMask')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMask')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', None)": [
                        133,
                        280
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMaskVersus1BPPMask')": [
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon1BPPMaskVersus8BPPMask')": [
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIconNoMask')": [
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskedIcon')": [
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPHalfMaskedIcon')": [
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskMissingIcon')": [
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test1BPPIconMaskVersus8BPPMask')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', None)": [
                        92,
                        130,
                        187,
                        245,
                        271,
                        327,
                        380,
                        411
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMask')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon8BPPMaskVersus1BPPMask')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIcon1BPPMaskVersus8BPPMask')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test8BPPIconNoMask')": [
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskedIcon')": [
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPHalfMaskedIcon')": [
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'test32BPPMaskMissingIcon')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410
                    ]
                }
            }
        }
    },
    "e178aba09295b097e21215ae137c213f381d5805": {
        "authored_data": "2016 Jun 09 20:30",
        "commit.message": "Access static method directly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1747596 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "95e3d6f4f9fee4b7b9b8d4d28fbaeb45820a97e7",
        "changes": {
            "src/test/java/org/apache/commons/imaging/common/RationalNumberTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'testRationalNumber')": [
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'testRationalNumber')": [
                        121
                    ]
                }
            }
        }
    },
    "95e3d6f4f9fee4b7b9b8d4d28fbaeb45820a97e7": {
        "authored_data": "2016 Jun 09 20:28",
        "commit.message": "Add missing @Override annotations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1747595 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "38599491bfc9049de0ca161549eb1ab015d6c6b0",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "new": {
                    "(None, None)": [
                        46,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/GenericImageMetadata.java": {
                "new": {
                    "('org.apache.commons.imaging.common#GenericImageMetadata', None)": [
                        34,
                        44,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ImageMetadata.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/RgbBufferedImageFactory.java": {
                "new": {
                    "('org.apache.commons.imaging.common#RgbBufferedImageFactory', None)": [
                        23,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/SimpleBufferedImageFactory.java": {
                "new": {
                    "('org.apache.commons.imaging.common#SimpleBufferedImageFactory', None)": [
                        23,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpWriterPalette.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpWriterPalette', None)": [
                        43,
                        48,
                        53,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpWriterRgb.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpWriterRgb', None)": [
                        33,
                        38,
                        44,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageMetadata.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', None)": [
                        187,
                        207
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean,boolean)')": [
                        139,
                        144,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'hasExifSegment(ByteSource)')": [
                        406,
                        411,
                        418
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'hasIptcSegment(ByteSource)')": [
                        448,
                        453,
                        460
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'hasXmpSegment(ByteSource)')": [
                        490,
                        495,
                        502
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        543,
                        548,
                        555
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'dumpJFIF(ByteSource)')": [
                        167,
                        172,
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', None)": [
                        64,
                        69,
                        174
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'analyzeJFIF(ByteSource)')": [
                        147,
                        152,
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        419
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcRecord.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcRecord', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcType.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcTypes.java": {
                "new": {
                    "(None, None)": [
                        143,
                        148,
                        160,
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/App2Segment.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2Segment', None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', None)": [
                        43,
                        49,
                        55
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'analyzeJFIF(ByteSource)')": [
                        190,
                        195,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        319,
                        327,
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterAverage.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterAverage', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterNone.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterNone', None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterPaeth.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterPaeth', None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterSub.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterSub', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterUp.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterUp', None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PamWriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PamWriter', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PbmWriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PbmWriter', None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PgmWriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PpmWriter.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/CompressedDataReader.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#CompressedDataReader', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/UncompressedDataReader.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#UncompressedDataReader', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeInfo.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', None)": [
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffElement.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffElement', None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', None)": [
                        321,
                        327,
                        333,
                        339,
                        344
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', None)": [
                        50,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', None)": [
                        65
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'sortFields')": [
                        468
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTagDataTypes.java": {
                "new": {
                    "(None, None)": [
                        32,
                        59,
                        78,
                        97,
                        128,
                        156,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTagTypes.java": {
                "new": {
                    "(None, None)": [
                        327,
                        332,
                        337
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorSpaceSubset.java": {
                "new": {
                    "('org.apache.commons.imaging.palette#ColorSpaceSubset', None)": [
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/LongestAxisMedianCut.java": {
                "new": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', None)": [
                        28,
                        37
                    ],
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java": {
                "new": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', None)": [
                        29,
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/QuantizedPalette.java": {
                "new": {
                    "('org.apache.commons.imaging.palette#QuantizedPalette', None)": [
                        50,
                        61,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/SimplePalette.java": {
                "new": {
                    "('org.apache.commons.imaging.palette#SimplePalette', None)": [
                        26,
                        37,
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "new": {
                    "('org.apache.commons.imaging#ImagingTest', 'getTestImageByName(String)')": [
                        59
                    ],
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        56,
                        69,
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageReadExample.java": {
                "new": {
                    "('org.apache.commons.imaging.examples#ImageReadExample', None)": [
                        51,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoBaseTest', None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', None)": [
                        77,
                        122,
                        158,
                        193,
                        232,
                        267
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifBaseTest', None)": [
                        46,
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRewriteLossy')": [
                        257
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRewriteLossless')": [
                        272
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBaseTest', None)": [
                        53,
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpBaseTest', None)": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pam/PamBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pam#PamBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pcx/PcxBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxBaseTest', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/PsdBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdBaseTest', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/rgbe/RgbeBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeBaseTest', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffBaseTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'compressRoundtripAndValidate(byte)')": [
                        93,
                        98,
                        103,
                        108,
                        122,
                        154
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'decompressRoundtripAndValidate(byte)')": [
                        184,
                        193,
                        209,
                        247,
                        252,
                        257
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/wbmp/WbmpBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpBaseTest', None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xbm/XbmBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmBaseTest', None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xpm/XpmBaseTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmBaseTest', None)": [
                        32
                    ]
                }
            }
        }
    },
    "38599491bfc9049de0ca161549eb1ab015d6c6b0": {
        "authored_data": "2016 Jun 09 20:26",
        "commit.message": "Use Java 7 diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1747594 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "716323e180fb123c2e9edaf10a8b43797f4e05a7",
        "changes": {
            "src/main/java/org/apache/commons/imaging/FormatCompliance.java": {
                "old": {
                    "('org.apache.commons.imaging#FormatCompliance', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#FormatCompliance', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageInfo', 'getComments')": [
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageInfo', 'getComments')": [
                        149
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', 'getAllBufferedImages(ByteSource)')": [
                        450
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageParser', 'getAllBufferedImages(ByteSource)')": [
                        450
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'getBufferedImage(ByteSource,Map)')": [
                        1404
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImageFormat,Map)')": [
                        1514
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'getBufferedImage(ByteSource,Map)')": [
                        1404
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImageFormat,Map)')": [
                        1514
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/GenericImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.common#GenericImageMetadata', None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.common#GenericImageMetadata', 'getItems')": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#GenericImageMetadata', None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.common#GenericImageMetadata', 'getItems')": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/HuffmanTree.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTree', None)": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTree', None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        28,
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/mylzw/MyLzwCompressor.java": {
                "old": {
                    "('org.apache.commons.imaging.common.mylzw#MyLzwCompressor', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.mylzw#MyLzwCompressor', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageSize(ByteSource,Map)')": [
                        498
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        555,
                        593
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        683
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        731
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageSize(ByteSource,Map)')": [
                        498
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        555,
                        593
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        683
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        731
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        134
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAllBufferedImages(ByteSource)')": [
                        188
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        212,
                        213,
                        214
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        134
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAllBufferedImages(ByteSource)')": [
                        188
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        212,
                        213,
                        214
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readGenericGIFBlock(InputStream,int,byte)')": [
                        221
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readBlocks(GifHeaderInfo,InputStream,boolean,FormatCompliance)')": [
                        241
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        507
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        761
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1023
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readGenericGIFBlock(InputStream,int,byte)')": [
                        221
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readBlocks(GifHeaderInfo,InputStream,boolean,FormatCompliance)')": [
                        241
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        507
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        761
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1023
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        85
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readImage(ByteSource)')": [
                        237
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        85
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readImage(ByteSource)')": [
                        237
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        291
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'getAllBufferedImages(ByteSource)')": [
                        601
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        644
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'getAllBufferedImages(ByteSource)')": [
                        601
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        644
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getItems')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getItems')": [
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean,boolean)')": [
                        118
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        281
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        329
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getExifMetadata(ByteSource,Map)')": [
                        349
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        527
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        782
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean,boolean)')": [
                        118
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        281
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        329
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getExifMetadata(ByteSource,Map)')": [
                        349
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        527
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        782
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'analyzeJFIF(ByteSource)')": [
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'analyzeJFIF(ByteSource)')": [
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        109
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        127
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        253
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        415
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        109
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        127
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        253
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        415
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcTypeLookup.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcTypeLookup', None)": [
                        24
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcTypeLookup', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        197,
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        197,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/PhotoshopApp13Data.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getRecords')": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getRawBlocks')": [
                        38
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getRecords')": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getRawBlocks')": [
                        38
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DqtSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DqtSegment', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DqtSegment', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'analyzeJFIF(ByteSource)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'analyzeJFIF(ByteSource)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        518
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        518
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageInfo', 'getTextChunks')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageInfo', 'getTextChunks')": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChuckTypes(InputStream)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(InputStream,ChunkType,boolean)')": [
                        149
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'filterChunks(List,ChunkType)')": [
                        304
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        387,
                        388
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        474
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getXmpXml(ByteSource,Map)')": [
                        710
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChuckTypes(InputStream)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(InputStream,ChunkType,boolean)')": [
                        149
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'filterChunks(List,ChunkType)')": [
                        304
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        387,
                        388
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        474
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getXmpXml(ByteSource,Map)')": [
                        710
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        372,
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        372,
                        383
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        246
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        359,
                        361
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        246
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        359,
                        361
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(InputStream,int,int,int)')": [
                        187
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        492
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        744
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(InputStream,int,int,int)')": [
                        187
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        492
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        744
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffContents.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'getElements')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'getElements')": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getDirectoryEntries')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        639
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getDirectoryEntries')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        639
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getItems')": [
                        169
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        440
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getItems')": [
                        169
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        440
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        235
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        406
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getAllBufferedImages(ByteSource)')": [
                        477
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        235
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        406
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getAllBufferedImages(ByteSource)')": [
                        477
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,FormatCompliance,Listener)')": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        147
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', None)": [
                        304,
                        305
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,FormatCompliance,Listener)')": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        147
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', None)": [
                        304,
                        305
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffTags.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeMergedTagList')": [
                        57
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        84,
                        89
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeMergedTagList')": [
                        57
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        84,
                        89
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfo', None)": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfo', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        80,
                        81,
                        127
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        249,
                        306
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        80,
                        81,
                        127
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        249,
                        306
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        78,
                        116
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        155,
                        174,
                        186
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        207,
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        78,
                        116
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        155,
                        174,
                        186
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        207,
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', None)": [
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getFields')": [
                        413
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'removeField(int)')": [
                        421
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        628
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', None)": [
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getFields')": [
                        413
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'removeField(int)')": [
                        421
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        628
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSet.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', None)": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        48
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getDirectories')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', None)": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        48
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getDirectories')": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSummary.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', None)": [
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', None)": [
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        237
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        237
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        148
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        148
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        329
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        82
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        190
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        657
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        82
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        190
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        657
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/LongestAxisMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        108,
                        110,
                        114,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        108,
                        110,
                        114,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MedianCutQuantizer.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'groupColors1(BufferedImage,int,int)')": [
                        37
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut,boolean)')": [
                        97,
                        115,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'groupColors1(BufferedImage,int,int)')": [
                        37
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,MedianCut,boolean)')": [
                        97,
                        115,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        80,
                        82,
                        104,
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        80,
                        82,
                        104,
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int,int)')": [
                        211
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int)')": [
                        225
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divide(List,int,int,int)')": [
                        270
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeQuantizedRgbPalette(BufferedImage,int)')": [
                        333
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeExactRgbPaletteSimple(BufferedImage,int)')": [
                        405
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int,int)')": [
                        211
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int)')": [
                        225
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divide(List,int,int,int)')": [
                        270
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeQuantizedRgbPalette(BufferedImage,int)')": [
                        333
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeExactRgbPaletteSimple(BufferedImage,int)')": [
                        405
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/util/Debug.java": {
                "old": {
                    "('org.apache.commons.imaging.util#Debug', 'getDebug(String,Map)')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.util#Debug', 'getDebug(String,Map)')": [
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        84
                    ],
                    "('org.apache.commons.imaging#ImagingTest', 'getTestImages(ImageFilter,int)')": [
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        84
                    ],
                    "('org.apache.commons.imaging#ImagingTest', 'getTestImages(ImageFilter,int)')": [
                        109
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ApacheImagingSpeedAndMemoryTest.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#ApacheImagingSpeedAndMemoryTest', 'performTest(String)')": [
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#ApacheImagingSpeedAndMemoryTest', 'performTest(String)')": [
                        216
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageReadExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#ImageReadExample', 'imageReadExample(File)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#ImageReadExample', 'imageReadExample(File)')": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageWriteExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#ImageWriteExample', 'imageWriteExample(File)')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#ImageWriteExample', 'imageWriteExample(File)')": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/SampleUsage.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        70
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', None)": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', 'test')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', 'test')": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegWithJpegThumbnailTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegWithJpegThumbnailTest', 'testSingleImage')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegWithJpegThumbnailTest', 'testSingleImage')": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/AsciiFieldTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#AsciiFieldTest', 'testSingleImage')": [
                        43,
                        52,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#AsciiFieldTest', 'testSingleImage')": [
                        43,
                        52,
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testMetadata')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testMetadata')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        283
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeFieldMap(List)')": [
                        293
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        318,
                        320,
                        342,
                        345,
                        355,
                        357
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        283
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeFieldMap(List)')": [
                        293
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        318,
                        320,
                        342,
                        345,
                        355,
                        357
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/GpsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test')": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        56
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'checkFields(byte)')": [
                        92,
                        93,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        56
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'checkFields(byte)')": [
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/SpecificExifTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'checkImage(File)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'checkImage(File)')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        65,
                        75,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        65,
                        75,
                        79
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove')": [
                        66
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert')": [
                        99,
                        108,
                        109
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate')": [
                        144,
                        152
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate')": [
                        191,
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove')": [
                        66
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert')": [
                        99,
                        108,
                        109
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate')": [
                        144,
                        152
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate')": [
                        191,
                        200
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', 'test')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', 'test')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pam/PamReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pam#PamReadTest', 'test')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pam#PamReadTest', 'test')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pcx/PcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxReadTest', 'test')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxReadTest', 'test')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/ConvertPngToGifTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngMultipleRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        58,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        58,
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngTextTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        47,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        47,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteForceTrueColorText.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/PsdReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdReadTest', 'test')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdReadTest', 'test')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffCcittTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        181,
                        200,
                        220,
                        240,
                        260,
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        181,
                        200,
                        220,
                        240,
                        260,
                        280
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'compressRoundtripAndValidate(byte)')": [
                        91
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'decompressRoundtripAndValidate(byte)')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'compressRoundtripAndValidate(byte)')": [
                        91
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'decompressRoundtripAndValidate(byte)')": [
                        174
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffReadWriteTagsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadWriteTagsTest', 'testReadWriteTags')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadWriteTagsTest', 'testReadWriteTags')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffSubImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/wbmp/WbmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpReadTest', 'test')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpReadTest', 'test')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xbm/XbmReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmReadTest', 'test')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmReadTest', 'test')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xmp/XmpUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        87
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xpm/XpmReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmReadTest', 'test')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmReadTest', 'test')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripTest', 'testPixelDensityRoundtrip')": [
                        419
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripTest', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        468,
                        471
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripTest', 'testPixelDensityRoundtrip')": [
                        419
                    ],
                    "('org.apache.commons.imaging.roundtrip#RoundtripTest', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        468,
                        471
                    ]
                }
            }
        }
    }
}