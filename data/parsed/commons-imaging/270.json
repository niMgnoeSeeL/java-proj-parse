{
    "55512f48fdd919252f38ff235dfe42c24dd6477c": {
        "authored_data": "2020 Jul 26 03:36",
        "commit.message": "Remove clone method\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "85cad79da2d3c2f0dc94767bd0f0168e09642fe9",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/BinaryConstant.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BinaryConstant', None)": [
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.common#BinaryConstant', 'clone')": [
                        31,
                        32
                    ]
                }
            }
        }
    },
    "fdac35a58d8197643f5e1d3a06f80621ef8c8f9e": {
        "authored_data": "2020 Nov 21 18:13",
        "commit.message": "Use for-each.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "392daf68e348e3c44e7639ef55a07b4e7a8ed05f",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSegment(int,byte,int,byte,byte)')": [
                        242,
                        243,
                        262,
                        263
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        43
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSegment(int,byte,int,byte,byte)')": [
                        244,
                        245,
                        264,
                        265
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffRasterStatistics.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatistics', None)": [
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatistics', None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStrips.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readImageData(Rectangle,boolean,boolean)')": [
                        329,
                        330
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readImageData(Rectangle,boolean,boolean)')": [
                        329,
                        330
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/MetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        143,
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/SurveyTiffFolder.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'surveyFiles(File,List,int,boolean,PrintStream)')": [
                        184,
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'surveyFiles(File,List,int,boolean,PrintStream)')": [
                        184,
                        185
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        178,
                        179,
                        180
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeFieldMap(List)')": [
                        276,
                        277
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        306,
                        307,
                        341,
                        342,
                        343
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        176
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        263,
                        264
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeFieldMap(List)')": [
                        272,
                        273
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        302,
                        303,
                        337
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pam/PamReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pam#PamReadTest', 'test')": [
                        42,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pam#PamReadTest', 'test')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pcx/PcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxReadTest', 'test')": [
                        42,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxReadTest', 'test')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/ConvertPngToGifTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        39,
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngReadTest', 'test')": [
                        41,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngReadTest', 'test')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffReadAlphaTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'test')": [
                        79,
                        80,
                        81,
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'test')": [
                        79,
                        80,
                        81,
                        82
                    ]
                }
            }
        }
    },
    "392daf68e348e3c44e7639ef55a07b4e7a8ed05f": {
        "authored_data": "2020 Nov 21 17:43",
        "commit.message": "Use blocks.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6b0d99dccdc6a7dad7d5a306c6878bd64e31c77e",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/BasicCParser.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BasicCParser', 'unescapeString(StringBuilder,String)')": [
                        351
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BasicCParser', 'unescapeString(StringBuilder,String)')": [
                        351,
                        403
                    ]
                }
            }
        }
    },
    "6b0d99dccdc6a7dad7d5a306c6878bd64e31c77e": {
        "authored_data": "2020 Nov 21 03:11",
        "commit.message": "Use final.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "cff708e803bf88358e892251e61d0d9992ab443a",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/BinaryFunctions.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'quadsToByteArray(int)')": [
                        278,
                        279
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'searchQuad(int,InputStream)')": [
                        298,
                        299
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'quadsToByteArray(int)')": [
                        278,
                        279
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'searchQuad(int,InputStream)')": [
                        298,
                        299
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ImageBuilder.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ImageBuilder', None)": [
                        96
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'checkDimensions(int,int)')": [
                        105
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'checkBounds(int,int,int,int)')": [
                        176
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'getSubset(int,int,int,int)')": [
                        218,
                        220,
                        221
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ImageBuilder', None)": [
                        96
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'checkDimensions(int,int)')": [
                        105
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'checkBounds(int,int,int,int)')": [
                        176
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilder', 'getSubset(int,int,int,int)')": [
                        218,
                        220,
                        221
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ZlibDeflate.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ZlibDeflate', 'compress(byte)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ZlibDeflate', 'compress(byte)')": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageData.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageData', None)": [
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageData', None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadata', None)": [
                        31
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadata', 'toString(String)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadata', None)": [
                        31
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadata', 'toString(String)')": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageMetadataItem.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadataItem', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageMetadataItem', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'createDisposalMethodFromIntValue(int)')": [
                        513
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getMetadata(ByteSource,Map)')": [
                        551,
                        552,
                        553
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findAllImageData(GifImageContents)')": [
                        695,
                        708
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findFirstImageData(GifImageContents)')": [
                        723
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(GifHeaderInfo,GifImageData,byte)')": [
                        737
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getAllBufferedImages(ByteSource)')": [
                        830,
                        831
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'createDisposalMethodFromIntValue(int)')": [
                        513
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getMetadata(ByteSource,Map)')": [
                        551,
                        552,
                        553
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findAllImageData(GifImageContents)')": [
                        695,
                        708
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findFirstImageData(GifImageContents)')": [
                        723
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(GifHeaderInfo,GifImageData,byte)')": [
                        737
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getAllBufferedImages(ByteSource)')": [
                        830,
                        831
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        198
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeImage(IcnsImageParser,int)')": [
                        206,
                        208,
                        229,
                        233
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeImageImpl(IcnsType,IcnsElement,IcnsElement)')": [
                        245,
                        246,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        198
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeImage(IcnsImageParser,int)')": [
                        206,
                        208,
                        229,
                        233
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeImageImpl(IcnsType,IcnsElement,IcnsElement)')": [
                        245,
                        246,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        116
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'splitByRstMarkers(int)')": [
                        444,
                        446,
                        455
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        116
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'splitByRstMarkers(int)')": [
                        444,
                        446,
                        455
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'read')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'read')": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        564
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        564
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getFloatingPointRasterData(Map)')": [
                        894
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasTiffFloatingPointRasterData')": [
                        909
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getFloatingPointRasterData(Map)')": [
                        894
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasTiffFloatingPointRasterData')": [
                        909
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageData.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        63,
                        132
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', 'extractSampleFormat(TiffDirectory)')": [
                        187,
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        63,
                        132
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', 'extractSampleFormat(TiffDirectory)')": [
                        187,
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        567,
                        641,
                        648
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getFloatingPointRasterData(TiffDirectory,ByteOrder,Map)')": [
                        813,
                        915
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        567,
                        641,
                        648
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getFloatingPointRasterData(TiffDirectory,ByteOrder,Map)')": [
                        813,
                        915
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffRasterData.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', None)": [
                        37,
                        42,
                        56
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'setValue(int,int,float)')": [
                        79
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'getValue(int,int)')": [
                        95
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'getSimpleStatistics(float)')": [
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', None)": [
                        37,
                        42,
                        56
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'setValue(int,int,float)')": [
                        79
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'getValue(int,int)')": [
                        95
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterData', 'getSimpleStatistics(float)')": [
                        120
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffRasterStatistics.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatistics', None)": [
                        39,
                        46,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatistics', None)": [
                        39,
                        46,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        393
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        393
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/constants/TiffPlanarConfiguration.java": {
                "old": {
                    "(None, None)": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStrips.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'interpretStrip(ImageBuilder,byte,int,int)')": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readImageData(Rectangle,boolean,boolean)')": [
                        313,
                        322,
                        324
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readRasterData(Rectangle)')": [
                        355,
                        373,
                        386,
                        387,
                        388,
                        389,
                        390,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'interpretStrip(ImageBuilder,byte,int,int)')": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readImageData(Rectangle,boolean,boolean)')": [
                        313,
                        322,
                        324
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'readRasterData(Rectangle)')": [
                        355,
                        373,
                        386,
                        387,
                        388,
                        389,
                        390,
                        396
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderTiled.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'interpretTile(ImageBuilder,byte,int,int,int,int)')": [
                        101,
                        105,
                        106,
                        108
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'readImageData(Rectangle,boolean,boolean)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'readRasterData(Rectangle)')": [
                        308,
                        325,
                        326,
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'interpretTile(ImageBuilder,byte,int,int,int,int)')": [
                        101,
                        105,
                        106,
                        108
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'readImageData(Rectangle,boolean,boolean)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'readRasterData(Rectangle)')": [
                        308,
                        325,
                        326,
                        327
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'applyPredictorToBlock(int,int,int,byte)')": [
                        254,
                        257,
                        258
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'unpackFloatingPointSamples(int,int,int,byte,int,int,ByteOrder)')": [
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        392,
                        393,
                        394,
                        395,
                        396,
                        408,
                        410,
                        411,
                        412,
                        413,
                        424,
                        425,
                        426,
                        427,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        478,
                        487,
                        488,
                        489,
                        490
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'transferBlockToRaster(int,int,int,int,int,int,int,int,int,float)')": [
                        536,
                        537,
                        538,
                        539,
                        595,
                        596,
                        597,
                        598
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'applyPredictorToBlock(int,int,int,byte)')": [
                        254,
                        257,
                        258
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'unpackFloatingPointSamples(int,int,int,byte,int,int,ByteOrder)')": [
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        392,
                        393,
                        394,
                        395,
                        396,
                        408,
                        410,
                        411,
                        412,
                        413,
                        424,
                        425,
                        426,
                        427,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        478,
                        487,
                        488,
                        489,
                        490
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'transferBlockToRaster(int,int,int,int,int,int,int,int,int,float)')": [
                        536,
                        537,
                        538,
                        539,
                        595,
                        596,
                        597,
                        598
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterLogLuv.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuv', 'getTristimulusValues(int,int,int)')": [
                        101
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuv', 'getRgbValues(TristimulusValues)')": [
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuv', 'getTristimulusValues(int,int,int)')": [
                        101
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuv', 'getRgbValues(TristimulusValues)')": [
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForRange.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', None)": [
                        53,
                        56,
                        64,
                        70,
                        85,
                        88,
                        97,
                        103
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'isCovered(float)')": [
                        111
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'getARGB(float)')": [
                        116,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'getColor(float)')": [
                        129,
                        131,
                        132,
                        133,
                        134,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', None)": [
                        53,
                        56,
                        64,
                        70,
                        85,
                        88,
                        97,
                        103
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'isCovered(float)')": [
                        111
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'getARGB(float)')": [
                        116,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRange', 'getColor(float)')": [
                        129,
                        131,
                        132,
                        133,
                        134,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForValue.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', None)": [
                        31,
                        42
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'isCovered(float)')": [
                        54
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'getARGB(float)')": [
                        62
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'getColor(float)')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', None)": [
                        31,
                        42
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'isCovered(float)')": [
                        54
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'getARGB(float)')": [
                        62
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValue', 'getColor(float)')": [
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PhotometricInterpreterFloat.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', None)": [
                        87,
                        105,
                        109,
                        126,
                        147,
                        155
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', 'interpretPixel(ImageBuilder,int,int,int)')": [
                        168,
                        169,
                        172,
                        176,
                        177,
                        178,
                        202,
                        203,
                        204,
                        210,
                        211,
                        212
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', 'mapValueToARGB(float)')": [
                        281,
                        287,
                        299
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', None)": [
                        87,
                        105,
                        109,
                        126,
                        147,
                        155
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', 'interpretPixel(ImageBuilder,int,int,int)')": [
                        168,
                        169,
                        172,
                        176,
                        177,
                        178,
                        202,
                        203,
                        204,
                        210,
                        211,
                        212
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', 'mapValueToARGB(float)')": [
                        281,
                        287,
                        299
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'checkForActualAlpha(BufferedImage)')": [
                        267,
                        276,
                        277,
                        282
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'applyPredictor(int,int,byte)')": [
                        292,
                        293,
                        294,
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'checkForActualAlpha(BufferedImage)')": [
                        267,
                        276,
                        277,
                        282
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'applyPredictor(int,int,byte)')": [
                        292,
                        293,
                        294,
                        296
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        671,
                        672
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        671,
                        672
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorCountComparator.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorCountComparator', None)": [
                        40
                    ],
                    "('org.apache.commons.imaging.palette#ColorCountComparator', 'compare(ColorCount,ColorCount)')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#ColorCountComparator', None)": [
                        40
                    ],
                    "('org.apache.commons.imaging.palette#ColorCountComparator', 'compare(ColorCount,ColorCount)')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingGuessFormatTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat(ImageFormats,String)')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat(ImageFormats,String)')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/TestImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging#TestImageInfo', 'testToStringEmptyComments')": [
                        133
                    ],
                    "('org.apache.commons.imaging#TestImageInfo', 'testToStringWithComments')": [
                        161
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#TestImageInfo', 'testToStringEmptyComments')": [
                        133
                    ],
                    "('org.apache.commons.imaging#TestImageInfo', 'testToStringWithComments')": [
                        161
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/TestImageReadException.java": {
                "old": {
                    "('org.apache.commons.imaging#TestImageReadException', 'testCreateExceptionWithMessage')": [
                        32
                    ],
                    "('org.apache.commons.imaging#TestImageReadException', 'testCreateExceptionWithMessageAndCause')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#TestImageReadException', 'testCreateExceptionWithMessage')": [
                        32
                    ],
                    "('org.apache.commons.imaging#TestImageReadException', 'testCreateExceptionWithMessageAndCause')": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/TestImageWriteException.java": {
                "old": {
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithMessage')": [
                        53
                    ],
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithMessageAndCause')": [
                        60
                    ],
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithData(Object,String)')": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithMessage')": [
                        53
                    ],
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithMessageAndCause')": [
                        60
                    ],
                    "('org.apache.commons.imaging#TestImageWriteException', 'testCreateExceptionWithData(Object,String)')": [
                        67,
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/color/ColorCmyTest.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmyTest', 'testCreatesColorCmy')": [
                        61,
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmyTest', 'testCreatesColorCmy')": [
                        61,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/color/ColorHslTest.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHslTest', 'testCreatesColorHslOne')": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHslTest', 'testCreatesColorHslOne')": [
                        67,
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/ImageBuilderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'testBoundsCheck')": [
                        48
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'testSubimageAccess')": [
                        63,
                        65,
                        66,
                        67,
                        73,
                        74,
                        79,
                        82,
                        83
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'executeBadBounds(ImageBuilder,int,int,int,int)')": [
                        115,
                        117
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', None)": [
                        119,
                        128
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'executeBadConstructor(int,int)')": [
                        124,
                        126
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'populate(ImageBuilder)')": [
                        134,
                        137,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'testBoundsCheck')": [
                        48
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'testSubimageAccess')": [
                        63,
                        65,
                        66,
                        67,
                        73,
                        74,
                        79,
                        82,
                        83
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'executeBadBounds(ImageBuilder,int,int,int,int)')": [
                        115,
                        117
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', None)": [
                        119,
                        128
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'executeBadConstructor(int,int)')": [
                        124,
                        126
                    ],
                    "('org.apache.commons.imaging.common#ImageBuilderTest', 'populate(ImageBuilder)')": [
                        134,
                        137,
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/RationalNumberTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'testRationalNumber(double)')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'testRationalNumber(double)')": [
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceFileFactory(byte)')": [
                        130
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceInputStreamFileFactory(byte)')": [
                        135
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceInputStreamRawFactory(byte)')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceFileFactory(byte)')": [
                        130
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceInputStreamFileFactory(byte)')": [
                        135
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'testByteSourceInputStreamRawFactory(byte)')": [
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStreamTest', 'testReadFromStream')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStreamTest', 'testReadFromStream')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/ExampleReadFloatingPointData.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#ExampleReadFloatingPointData', 'main(String)')": [
                        69,
                        72,
                        78,
                        83,
                        86,
                        91,
                        98,
                        106,
                        117,
                        118,
                        119,
                        121,
                        127,
                        136,
                        137,
                        138,
                        139,
                        153,
                        157,
                        169,
                        173,
                        176,
                        177,
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#ExampleReadFloatingPointData', 'main(String)')": [
                        69,
                        72,
                        78,
                        83,
                        86,
                        91,
                        98,
                        106,
                        117,
                        118,
                        119,
                        121,
                        127,
                        136,
                        137,
                        138,
                        139,
                        153,
                        157,
                        169,
                        173,
                        176,
                        177,
                        183
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/ReadAndRenderFloatingPoint.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#ReadAndRenderFloatingPoint', 'main(String)')": [
                        63,
                        66,
                        72,
                        77,
                        80,
                        87,
                        95,
                        104,
                        124,
                        125,
                        126,
                        149,
                        154,
                        155,
                        161,
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#ReadAndRenderFloatingPoint', 'main(String)')": [
                        63,
                        66,
                        72,
                        77,
                        80,
                        87,
                        95,
                        104,
                        124,
                        125,
                        126,
                        149,
                        154,
                        155,
                        161,
                        164
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/ReadTagsAndImages.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#ReadTagsAndImages', 'main(String)')": [
                        60,
                        64,
                        70,
                        75,
                        78,
                        79,
                        87,
                        88,
                        96,
                        98,
                        104,
                        105,
                        115,
                        116,
                        123,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#ReadTagsAndImages', 'main(String)')": [
                        60,
                        64,
                        70,
                        75,
                        78,
                        79,
                        87,
                        88,
                        96,
                        98,
                        104,
                        105,
                        115,
                        116,
                        123,
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/SurveyTiffFile.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'surveyFile(File,boolean)')": [
                        52,
                        58,
                        59,
                        66,
                        67,
                        68,
                        76,
                        79,
                        111,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getCompressionString(TiffDirectory)')": [
                        171
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPredictorString(TiffDirectory)')": [
                        202
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getSampleFormatString(TiffDirectory)')": [
                        222,
                        223,
                        235
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getBitsPerSampleString(int)')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPhotometricInterpreterString(TiffDirectory,int)')": [
                        262,
                        274
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getIccProfileString(TiffDirectory)')": [
                        307,
                        308
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPlanarConfigurationString(TiffDirectory)')": [
                        316
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'formatHeader(int,boolean)')": [
                        343,
                        351,
                        352,
                        353,
                        354
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'printLegend(PrintStream)')": [
                        369
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'reformatHeaderForCsv(String)')": [
                        394,
                        395
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'trimForCsv(StringBuilder)')": [
                        421,
                        423,
                        427
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'surveyFile(File,boolean)')": [
                        52,
                        58,
                        59,
                        66,
                        67,
                        68,
                        76,
                        79,
                        111,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getCompressionString(TiffDirectory)')": [
                        171
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPredictorString(TiffDirectory)')": [
                        202
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getSampleFormatString(TiffDirectory)')": [
                        222,
                        223,
                        235
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getBitsPerSampleString(int)')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPhotometricInterpreterString(TiffDirectory,int)')": [
                        262,
                        274
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getIccProfileString(TiffDirectory)')": [
                        307,
                        308
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'getPlanarConfigurationString(TiffDirectory)')": [
                        316
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'formatHeader(int,boolean)')": [
                        343,
                        351,
                        352,
                        353,
                        354
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'printLegend(PrintStream)')": [
                        369
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'reformatHeaderForCsv(String)')": [
                        394,
                        395
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFile', 'trimForCsv(StringBuilder)')": [
                        421,
                        423,
                        427
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/SurveyTiffFolder.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'main(String)')": [
                        49,
                        54,
                        61,
                        62,
                        67,
                        77,
                        79,
                        84,
                        89
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'collectPaths(File,List,String,int)')": [
                        97,
                        98,
                        99,
                        100,
                        106,
                        107,
                        109,
                        114,
                        116,
                        118
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', None)": [
                        132,
                        136,
                        137,
                        155
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'findMaxLengths(List)')": [
                        166,
                        168
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'surveyFiles(File,List,int,boolean,PrintStream)')": [
                        181,
                        182,
                        191,
                        194,
                        195,
                        196,
                        198,
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'main(String)')": [
                        49,
                        54,
                        61,
                        62,
                        67,
                        77,
                        79,
                        84,
                        89
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'collectPaths(File,List,String,int)')": [
                        97,
                        98,
                        99,
                        100,
                        106,
                        107,
                        109,
                        114,
                        116,
                        118
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', None)": [
                        132,
                        136,
                        137,
                        155
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'findMaxLengths(List)')": [
                        166,
                        168
                    ],
                    "('org.apache.commons.imaging.examples.tiff#SurveyTiffFolder', 'surveyFiles(File,List,int,boolean,PrintStream)')": [
                        181,
                        182,
                        191,
                        194,
                        195,
                        196,
                        198,
                        227
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParserTest', 'testImageWidthRounding')": [
                        42,
                        43,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParserTest', 'testImageWidthRounding')": [
                        42,
                        43,
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testImageInfo(File)')": [
                        47
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testMetaData(File)')": [
                        57
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testBufferedImage(File)')": [
                        65
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testGetMaskShiftZeroMask')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testImageInfo(File)')": [
                        47
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testMetaData(File)')": [
                        57
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testBufferedImage(File)')": [
                        65
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testGetMaskShiftZeroMask')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageMetadata(File)')": [
                        42
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageInfo(File)')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testBufferedImage(File)')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageMetadata(File)')": [
                        42
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageInfo(File)')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testBufferedImage(File)')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testMetadata(File)')": [
                        55
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testImageInfo(File)')": [
                        63
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testImageDimensions(File)')": [
                        71
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImage(File)')": [
                        95
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForSingleImageGif(File)')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForAnimatedImageGif(File)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testCreateMetadataWithDisposalMethods')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testConvertValidDisposalMethodValues')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testMetadata(File)')": [
                        55
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testImageInfo(File)')": [
                        63
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testImageDimensions(File)')": [
                        71
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImage(File)')": [
                        95
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForSingleImageGif(File)')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForAnimatedImageGif(File)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testCreateMetadataWithDisposalMethods')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testConvertValidDisposalMethodValues')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageMetadata(File)')": [
                        66
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageInfo(File)')": [
                        74
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testBufferedImage(File)')": [
                        81
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testIcnsElementMonoPngJpeg(String,int)')": [
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageMetadata(File)')": [
                        66
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageInfo(File)')": [
                        74
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testBufferedImage(File)')": [
                        81
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testIcnsElementMonoPngJpeg(String,int)')": [
                        95,
                        96,
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testMetadata(File)')": [
                        42
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testImageInfo(File)')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testBufferedImage(File)')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testMetadata(File)')": [
                        42
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testImageInfo(File)')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testBufferedImage(File)')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', 'test(File)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', 'test(File)')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionOne')": [
                        31,
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionTwo')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionOne')": [
                        31,
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionTwo')": [
                        44,
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testDumpJFIF(File)')": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testMetadata(File)')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testDumpJFIF(File)')": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', 'testMetadata(File)')": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/GpsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test(File)')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test(File)')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/SpecificExifTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'testAllImages(File)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'testAllImages(File)')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test(File)')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test(File)')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParserTest', 'testSkipBlockTypes')": [
                        70,
                        73,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParserTest', 'testSkipBlockTypes')": [
                        70,
                        73,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove(File)')": [
                        55
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource,File)')": [
                        76
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate(File)')": [
                        128
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data,File)')": [
                        158
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate(File)')": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove(File)')": [
                        55
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource,File)')": [
                        76
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate(File)')": [
                        128
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data,File)')": [
                        158
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate(File)')": [
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/App2SegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningTrue')": [
                        36
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningFalse')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testCompareTo')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningTrue')": [
                        36
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningFalse')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testCompareTo')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', 'test(File)')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', 'test(File)')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate(File)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', 'testRemoveInsertUpdate(File)')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        53,
                        60,
                        66,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        53,
                        60,
                        66,
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PgmFileInfoTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testGetBitDepth')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testGetBitDepth')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffAlphaRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'test')": [
                        55,
                        56,
                        75,
                        77,
                        80,
                        84,
                        92,
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'doPixelsMatch(int,int,int,int)')": [
                        104,
                        110
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'componentMatch(int,int,int,int)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'test')": [
                        55,
                        56,
                        75,
                        77,
                        80,
                        84,
                        92,
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'doPixelsMatch(int,int,int,int)')": [
                        104,
                        110
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'componentMatch(int,int,int,int)')": [
                        127
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffFloatingPointReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'getTiffFile(String)')": [
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'readAndInterpretTIFF(File,float,float,float)')": [
                        78,
                        79,
                        80,
                        81,
                        85,
                        86,
                        91,
                        94,
                        95,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'readRasterFromTIFF(File,Map)')": [
                        115,
                        117,
                        118,
                        119,
                        123
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'test')": [
                        129,
                        174
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'checkSubImage(File,TiffRasterData,int,int,int,int)')": [
                        227,
                        229,
                        234,
                        239,
                        240
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'getTiffFile(String)')": [
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'readAndInterpretTIFF(File,float,float,float)')": [
                        78,
                        79,
                        80,
                        81,
                        85,
                        86,
                        91,
                        94,
                        95,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'readRasterFromTIFF(File,Map)')": [
                        115,
                        117,
                        118,
                        119,
                        123
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'test')": [
                        129,
                        174
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'checkSubImage(File,TiffRasterData,int,int,int,int)')": [
                        227,
                        229,
                        234,
                        239,
                        240
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffFloatingPointRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', None)": [
                        71,
                        73,
                        82,
                        83,
                        84,
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'test')": [
                        118,
                        128,
                        129,
                        130,
                        131,
                        135,
                        136,
                        137,
                        139,
                        140,
                        142,
                        149
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'writeFile(int,ByteOrder,boolean)')": [
                        159,
                        161,
                        165,
                        166,
                        167,
                        198,
                        199,
                        240
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'getBytesForOutput32(float,int,int,int,int,ByteOrder)')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'getBytesForOutput64(float,int,int,int,int,ByteOrder)')": [
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        328,
                        329,
                        330,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', None)": [
                        71,
                        73,
                        82,
                        83,
                        84,
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'test')": [
                        118,
                        128,
                        129,
                        130,
                        131,
                        135,
                        136,
                        137,
                        139,
                        140,
                        142,
                        149
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'writeFile(int,ByteOrder,boolean)')": [
                        159,
                        161,
                        165,
                        166,
                        167,
                        198,
                        199,
                        240
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'getBytesForOutput32(float,int,int,int,int,ByteOrder)')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', 'getBytesForOutput64(float,int,int,int,int,ByteOrder)')": [
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        328,
                        329,
                        330,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRasterDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testSetValue')": [
                        56,
                        59,
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetValue')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetSimpleStatistics_0args')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetSimpleStatistics_float')": [
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetData')": [
                        125
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testBadConstructor')": [
                        136,
                        138,
                        142,
                        144,
                        148,
                        149,
                        151,
                        155,
                        156,
                        158,
                        162,
                        163
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', None)": [
                        165
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testBadCoordinates')": [
                        177,
                        178,
                        181,
                        185,
                        186
                    ],
                    "(None, None)": [
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testSetValue')": [
                        56,
                        59,
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetValue')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetSimpleStatistics_0args')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetSimpleStatistics_float')": [
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testGetData')": [
                        125
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testBadConstructor')": [
                        136,
                        138,
                        142,
                        144,
                        148,
                        149,
                        151,
                        155,
                        156,
                        158,
                        162,
                        163
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', None)": [
                        165
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterDataTest', 'testBadCoordinates')": [
                        177,
                        178,
                        181,
                        185,
                        186
                    ],
                    "(None, None)": [
                        189
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRasterStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatisticsTest', 'testGetMeanValue')": [
                        102,
                        104,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRasterStatisticsTest', 'testGetMeanValue')": [
                        102,
                        104,
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffReadAlphaTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'getTiffFile(String)')": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'test')": [
                        67,
                        69,
                        70,
                        71,
                        72,
                        80,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'getTiffFile(String)')": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReadAlphaTest', 'test')": [
                        67,
                        69,
                        70,
                        71,
                        72,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadTest', 'testReadDirectories')": [
                        62,
                        69,
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadTest', 'testReadDirectories')": [
                        62,
                        69,
                        70,
                        71,
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffSubImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testBadSubImage')": [
                        61,
                        63,
                        64,
                        72
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'processBadParams(File,int,int,int,int,String)')": [
                        84,
                        91
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', None)": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImageCorrectness')": [
                        100,
                        102,
                        103,
                        107,
                        114,
                        115,
                        116,
                        119,
                        123,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testBadSubImage')": [
                        61,
                        63,
                        64,
                        72
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'processBadParams(File,int,int,int,int,String)')": [
                        84,
                        91
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', None)": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImageCorrectness')": [
                        100,
                        102,
                        103,
                        107,
                        114,
                        115,
                        116,
                        119,
                        123,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAsciiTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndCallsWriteData')": [
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndWriteDataUsingByteArray')": [
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndWriteDataUsingString')": [
                        59,
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndCallsWriteData')": [
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndWriteDataUsingByteArray')": [
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndWriteDataUsingString')": [
                        59,
                        60,
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeRationalTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNull')": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNonNull')": [
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNull')": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNonNull')": [
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterLogLuvTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', None)": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testGetRgbValues')": [
                        76
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixel')": [
                        107,
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', None)": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testGetRgbValues')": [
                        76
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixel')": [
                        107,
                        108,
                        109
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterRgbTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterRgbTest', None)": [
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterRgbTest', 'testInterpretPixel')": [
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterRgbTest', None)": [
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterRgbTest', 'testInterpretPixel')": [
                        57,
                        58,
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForRangeTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testIsCovered')": [
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetARGB')": [
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetColor')": [
                        69,
                        72,
                        73
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testCoversSingleEntry')": [
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetLowerBound')": [
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetUpperBound')": [
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testFaultyConstructors')": [
                        114,
                        115,
                        122,
                        129,
                        135,
                        143
                    ],
                    "(None, None)": [
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testIsCovered')": [
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetARGB')": [
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetColor')": [
                        69,
                        72,
                        73
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testCoversSingleEntry')": [
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetLowerBound')": [
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testGetUpperBound')": [
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForRangeTest', 'testFaultyConstructors')": [
                        114,
                        115,
                        122,
                        129,
                        135,
                        143
                    ],
                    "(None, None)": [
                        150
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForValueTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testIsCovered')": [
                        41
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetARGB')": [
                        56,
                        60
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetColor')": [
                        76,
                        79
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testFaultyConstructors')": [
                        96,
                        97
                    ],
                    "(None, None)": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testIsCovered')": [
                        41
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetARGB')": [
                        56,
                        60
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetColor')": [
                        76,
                        79
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testFaultyConstructors')": [
                        96,
                        97
                    ],
                    "(None, None)": [
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PhotometricInterpreterFloatTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'setUpClass')": [
                        58,
                        59,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        74,
                        83,
                        85,
                        91,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testInterpretPixel')": [
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMinFound')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMaxXY')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMaxFound')": [
                        174,
                        175
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMinXY')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMeanFound')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testConstructors')": [
                        231
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', None)": [
                        238
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testOverlappingEntriesEntry')": [
                        249,
                        250,
                        251,
                        255,
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'setUpClass')": [
                        58,
                        59,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        74,
                        83,
                        85,
                        91,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testInterpretPixel')": [
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMinFound')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMaxXY')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMaxFound')": [
                        174,
                        175
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMinXY')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testGetMeanFound')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testConstructors')": [
                        231
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', None)": [
                        238
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloatTest', 'testOverlappingEntriesEntry')": [
                        249,
                        250,
                        251,
                        255,
                        258
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoByteOrShortTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteOrShortTest', 'testEncodeValueTakingByteOrderAndByteArrayOne')": [
                        31,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteOrShortTest', 'testEncodeValueTakingByteOrderAndByteArrayTwo')": [
                        42,
                        43,
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteOrShortTest', 'testEncodeValueTakingByteOrderAndByteArrayOne')": [
                        31,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteOrShortTest', 'testEncodeValueTakingByteOrderAndByteArrayTwo')": [
                        42,
                        43,
                        44,
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/palette/DitheringTest.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#DitheringTest', 'testApplyFloydSteinbergDitheringWithNonNullOne')": [
                        35,
                        37,
                        38,
                        41
                    ],
                    "('org.apache.commons.imaging.palette#DitheringTest', 'testApplyFloydSteinbergDitheringWithNonNullTwo')": [
                        52,
                        54,
                        55,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#DitheringTest', 'testApplyFloydSteinbergDitheringWithNonNullOne')": [
                        35,
                        37,
                        38,
                        41
                    ],
                    "('org.apache.commons.imaging.palette#DitheringTest', 'testApplyFloydSteinbergDitheringWithNonNullTwo')": [
                        52,
                        54,
                        55,
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'createRoundtripArguments(BufferedImage)')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'createRoundtripArguments(BufferedImage)')": [
                        71
                    ]
                }
            }
        }
    },
    "cff708e803bf88358e892251e61d0d9992ab443a": {
        "authored_data": "2020 Nov 21 02:34",
        "commit.message": "No need to initialize to default value.",
        "commit.author.name": "Gary Gregory",
        "pcid": "319431c7cb692f92cb383cd1e7534de4307dc0ae",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        807,
                        808,
                        809
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        807
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        395,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        395
                    ]
                }
            }
        }
    }
}