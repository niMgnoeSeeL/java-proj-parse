{
    "afd43e4375d9e2c2f13ab4b8deb158a8ff7947e7": {
        "authored_data": "2016 Sep 07 18:08",
        "commit.message": "Formatting improvements: never break up\n    object.method()\ninto\n    object\n        .method()\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759654 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "db488210d7dcfa069944ef43dc34368654eb80f0",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', 'getBufferedImageFactory(Map)')": [
                        962,
                        963
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageParser', 'getBufferedImageFactory(Map)')": [
                        962,
                        963
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_1D(byte,int,int,boolean)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_2D(byte,int,int,boolean,int)')": [
                        329,
                        330
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_1D(byte,int,int,boolean)')": [
                        182
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_2D(byte,int,int,boolean,int)')": [
                        328
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        720,
                        721,
                        745,
                        746,
                        767,
                        768,
                        769,
                        770
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        720,
                        744,
                        765,
                        766
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        210,
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        210
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readHeader(InputStream,FormatCompliance)')": [
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readHeader(InputStream,FormatCompliance)')": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        98,
                        99
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        128,
                        129
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        267,
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        98
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        127
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        265
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        648,
                        649
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        648
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegConstants.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegConstants', None)": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegConstants', None)": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        565,
                        566
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        745,
                        746,
                        752,
                        753,
                        759,
                        760
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        565
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        744,
                        750,
                        756
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/Dct.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#Dct', None)": [
                        88,
                        89,
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#Dct', None)": [
                        88,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSegment(int,byte,int,byte,byte)')": [
                        203,
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSegment(int,byte,int,byte,byte)')": [
                        203
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        526,
                        527
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        526
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        195,
                        196,
                        198,
                        199,
                        204,
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        195,
                        197,
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeImage(BufferedImage,OutputStream)')": [
                        140,
                        141
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write32BppPCX(BufferedImage,BinaryOutputStream)')": [
                        178,
                        179,
                        190,
                        191
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write24BppPCX(BufferedImage,BinaryOutputStream)')": [
                        218,
                        219,
                        230,
                        231
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeBlackAndWhitePCX(BufferedImage,BinaryOutputStream)')": [
                        273,
                        274
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write16ColorPCX(BufferedImage,SimplePalette,BinaryOutputStream)')": [
                        334,
                        335
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write256ColorPCX(BufferedImage,SimplePalette,BinaryOutputStream)')": [
                        360,
                        361,
                        372,
                        373
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeImage(BufferedImage,OutputStream)')": [
                        140
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write32BppPCX(BufferedImage,BinaryOutputStream)')": [
                        177,
                        188
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write24BppPCX(BufferedImage,BinaryOutputStream)')": [
                        215,
                        226
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeBlackAndWhitePCX(BufferedImage,BinaryOutputStream)')": [
                        268
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write16ColorPCX(BufferedImage,SimplePalette,BinaryOutputStream)')": [
                        328
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'write256ColorPCX(BufferedImage,SimplePalette,BinaryOutputStream)')": [
                        353,
                        364
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        522,
                        523,
                        527,
                        528
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        522,
                        526
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        605,
                        606
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        605,
                        606
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        111,
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        210,
                        211
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getGPS')": [
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        210
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getGPS')": [
                        455,
                        456,
                        457,
                        458
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageSize(ByteSource,Map)')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        150,
                        151,
                        168,
                        169,
                        190,
                        191,
                        192,
                        193,
                        203,
                        204,
                        205,
                        206,
                        211,
                        212,
                        213,
                        214,
                        221,
                        222,
                        254,
                        255,
                        262,
                        263
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getXmpXml(ByteSource,Map)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        350,
                        351
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        406,
                        407,
                        412,
                        413
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getPhotometricInterpreter(TiffDirectory,int,int,int,int,int,int,int)')": [
                        678,
                        679
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageSize(ByteSource,Map)')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        150,
                        151,
                        168,
                        169,
                        190,
                        191,
                        192,
                        193,
                        203,
                        204,
                        209,
                        210,
                        217,
                        249,
                        256
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getXmpXml(ByteSource,Map)')": [
                        305,
                        306
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        343
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        398,
                        399,
                        404
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        549,
                        550
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getPhotometricInterpreter(TiffDirectory,int,int,int,int,int,int,int)')": [
                        669
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', None)": [
                        302,
                        303
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'getTiffRawImageData(ByteSource,TiffDirectory)')": [
                        425,
                        426,
                        445,
                        446,
                        456,
                        457,
                        470,
                        471,
                        477,
                        478
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', None)": [
                        302
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'getTiffRawImageData(ByteSource,TiffDirectory)')": [
                        424,
                        443,
                        453,
                        466,
                        472
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/BitInputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#BitInputStream', 'readBits(int)')": [
                        126,
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#BitInputStream', 'readBits(int)')": [
                        126
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReader', 'decompress(byte,int,int,int,int)')": [
                        143,
                        144,
                        169,
                        170,
                        190,
                        191
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReader', 'decompress(byte,int,int,int,int)')": [
                        143,
                        168,
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        183,
                        184
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'combineUserExifIntoFinalExif(TiffOutputSet,TiffOutputSet)')": [
                        502,
                        503,
                        511,
                        512
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        183,
                        184
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'combineUserExifIntoFinalExif(TiffOutputSet,TiffOutputSet)')": [
                        502,
                        510
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossy.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'write(OutputStream,TiffOutputSet)')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'write(OutputStream,TiffOutputSet)')": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSet.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'setGPSInDegrees(double,double)')": [
                        168,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'setGPSInDegrees(double,double)')": [
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSummary.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', 'updateOffsets(ByteOrder)')": [
                        72,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', 'updateOffsets(ByteOrder)')": [
                        72,
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'randomName')": [
                        299,
                        300,
                        304,
                        305
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        336,
                        337,
                        338,
                        339,
                        340,
                        341
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'randomName')": [
                        299,
                        303
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        334,
                        335,
                        336
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseNextString(BasicCParser,StringBuilder)')": [
                        275,
                        276
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'readXpmImage(XpmHeader,BasicCParser)')": [
                        510,
                        511,
                        523,
                        524
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseNextString(BasicCParser,StringBuilder)')": [
                        274
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'readXpmImage(XpmHeader,BasicCParser)')": [
                        508,
                        520
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorSpaceSubset.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorSpaceSubset', 'dump(String)')": [
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#ColorSpaceSubset', 'dump(String)')": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'isGrayscale(BufferedImage)')": [
                        435,
                        436
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'isGrayscale(BufferedImage)')": [
                        435
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingTest', 'isInvalidPNGTestFile(File)')": [
                        139,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingTest', 'isInvalidPNGTestFile(File)')": [
                        139,
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTestConstants.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/color/ColorConversionsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorConversionsTest', 'testXYZ')": [
                        107,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorConversionsTest', 'testXYZ')": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test')": [
                        87,
                        88,
                        95,
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test')": [
                        87,
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageReadExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#ImageReadExample', None)": [
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#ImageReadExample', None)": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/MetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        110,
                        111,
                        112
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/SampleUsage.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        107,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/WriteExifMetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        107,
                        108,
                        111,
                        112
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifTag(File,File)')": [
                        201,
                        202,
                        204,
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        107,
                        110
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifTag(File,File)')": [
                        199,
                        201
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        79,
                        80
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        117,
                        118,
                        159,
                        160
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        198,
                        199,
                        230,
                        231
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        287,
                        288
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        331,
                        332,
                        333,
                        334
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        79
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        116,
                        157
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        195,
                        226
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'makeDirectoryMap(List)')": [
                        282
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        325,
                        326
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/GpsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test')": [
                        50,
                        51,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', 'test')": [
                        50,
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/SpecificExifTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'testAllImages')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', 'testAllImages')": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        98,
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        98,
                        99
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove')": [
                        69,
                        70,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert')": [
                        101,
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate')": [
                        156,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testRemove')": [
                        69,
                        70,
                        75,
                        76
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert')": [
                        100,
                        101,
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate')": [
                        156,
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngMultipleRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        38,
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        38,
                        39
                    ]
                }
            }
        }
    },
    "db488210d7dcfa069944ef43dc34368654eb80f0": {
        "authored_data": "2016 Sep 07 17:24",
        "commit.message": "Simplify some array operations.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759648 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "397c81ab1c51df34a7c897dcbe9443a271d3f648",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReader.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReader', 'resetPredictor')": [
                        115,
                        116
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReader', None)": [
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        36
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReader', 'resetPredictor')": [
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'getTestByteArrays')": [
                        61,
                        62,
                        63
                    ]
                }
            }
        }
    },
    "397c81ab1c51df34a7c897dcbe9443a271d3f648": {
        "authored_data": "2016 Sep 07 01:59",
        "commit.message": "Some TiffImageWriterLossless cleanups.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759533 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "670e915d4880e661dc98e2758b44ecbfc6df2951",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        81,
                        84,
                        87,
                        88,
                        116,
                        117,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        186,
                        187
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,long)')": [
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        84,
                        87,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        178
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,long)')": [
                        305,
                        306,
                        307,
                        311,
                        312,
                        313
                    ]
                }
            }
        }
    },
    "670e915d4880e661dc98e2758b44ecbfc6df2951": {
        "authored_data": "2016 Sep 06 18:54",
        "commit.message": "The MicrosoftTagTest fails on Jenkins, because it selects an image\napparently already containing XP tags and duplicates are a problem,\nso delete the tags before adding them.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759485 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "883f3a23e6c85e37b555a9d6fb7f955b9702b072",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testRewrite')": [
                        100,
                        101,
                        103,
                        104,
                        106,
                        107,
                        109,
                        110,
                        112
                    ]
                }
            }
        }
    },
    "883f3a23e6c85e37b555a9d6fb7f955b9702b072": {
        "authored_data": "2016 Sep 06 18:09",
        "commit.message": "IMAGING-181: EXIF lens metadata tags missing in Commons Imaging but recognized in exiftool\n\nAdd missing EXIF tags for some lens and camera metadata.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759477 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "30b2b34a4864100393e48a27d935f93e52ea0d62",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/constants/ExifTagConstants.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.constants#ExifTagConstants', None)": [
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503
                    ]
                }
            }
        }
    },
    "30b2b34a4864100393e48a27d935f93e52ea0d62": {
        "authored_data": "2016 Sep 06 17:40",
        "commit.message": "Clean up imports.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759475 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "d280ca6b5437975b5a1ca09bbe91c0b8f381c882",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        26
                    ]
                }
            }
        }
    },
    "d280ca6b5437975b5a1ca09bbe91c0b8f381c882": {
        "authored_data": "2016 Sep 06 17:16",
        "commit.message": "IMAGING-172: Microsoft tags are not seen in MS Windows Properties/Details dialog\n\nNull-terminate the XpString tag, and store it in the root directory where\nWindows looks for it instead of the EXIF directory. Also deletes the\nIPTC and XMP metadata which contains conflicting tags which Windows\nuses instead when present.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759460 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "14b9eff39ac560a2ab34826c87251b37d72ceaf6",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoXpString.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'encodeValue(FieldType,Object,ByteOrder)')": [
                        46
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'getValue(TiffField)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'encodeValue(FieldType,Object,ByteOrder)')": [
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'getValue(TiffField)')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testRewrite')": [
                        74,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        33,
                        34,
                        39,
                        40,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'cleanImage(File)')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', None)": [
                        87,
                        88
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testRewrite')": [
                        91,
                        92,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                }
            }
        }
    },
    "b3a371800b39e4cc6f01adbf6977328e654ece6d": {
        "authored_data": "2016 Sep 03 11:06",
        "commit.message": "Fix indentation.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759076 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "ecdf5f2ff4f96bc6e78501076ab941cb9d839232",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ]
                }
            }
        }
    },
    "ecdf5f2ff4f96bc6e78501076ab941cb9d839232": {
        "authored_data": "2016 Sep 03 11:04",
        "commit.message": "Fix chuck -> chunk typo.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1759075 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "d65744c5bf25e1945c740c9334c2ccf3ec1bee6c",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChuckTypes(InputStream)')": [
                        111
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'hasChuckType(ByteSource,ChunkType)')": [
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChunkTypes(InputStream)')": [
                        111
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'hasChunkType(ByteSource,ChunkType)')": [
                        121
                    ]
                }
            }
        }
    }
}