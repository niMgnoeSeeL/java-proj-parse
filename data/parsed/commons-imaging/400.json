{
    "10de55b350cd0d6fb88461284ab3edcb26e0b521": {
        "authored_data": "2020 Apr 12 11:16",
        "commit.message": "Initialize collection in the constructor\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "feec4ba85ef72794cf40840025ca7ff6795884bf",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        66,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        66
                    ]
                }
            }
        }
    },
    "feec4ba85ef72794cf40840025ca7ff6795884bf": {
        "authored_data": "2020 Apr 12 11:12",
        "commit.message": "Use capital L for long\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "bc44c773b58bc5f56148b431da4c80da03a9b679",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets(File)')": [
                        63
                    ]
                }
            }
        }
    },
    "bc44c773b58bc5f56148b431da4c80da03a9b679": {
        "authored_data": "2020 Apr 12 11:10",
        "commit.message": "Fix typos\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "252e0a3dd42d3e220e6b83f182eb9d979d0ff685",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        752
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        752
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ImageBuilder.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ImageBuilder', None)": [
                        140,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ImageBuilder', None)": [
                        140,
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/RationalNumber.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumber', 'factoryMethod(long,long)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumber', 'factoryMethod(long,long)')": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/XmpEmbeddable.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/BitInputStreamFlexible.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#BitInputStreamFlexible', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#BitInputStreamFlexible', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/mylzw/MyBitOutputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.common.mylzw#MyBitOutputStream', 'writeBits(int,int)')": [
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.mylzw#MyBitOutputStream', 'writeBits(int,int)')": [
                        70,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readIconInfo(InputStream)')": [
                        199
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readIconInfo(InputStream)')": [
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'splitByRstMarkers(int)')": [
                        439
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'splitByRstMarkers(int)')": [
                        439
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        572,
                        574
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        572,
                        574
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputField.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputField', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputField', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        39,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        39,
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        39,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        39,
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'testFullyTransparent32bitRGBA')": [
                        528
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'testFullyTransparent32bitRGBA')": [
                        528
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParserTest', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParserTest', None)": [
                        53
                    ]
                }
            }
        }
    },
    "252e0a3dd42d3e220e6b83f182eb9d979d0ff685": {
        "authored_data": "2020 Apr 12 10:56",
        "commit.message": "Use Math.min instead of calculating it manually\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "99c373e3e73243159a821b315a58e8335dcd3321",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'nextChangingElement(int,int,int)')": [
                        701
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'nextChangingElement(int,int,int)')": [
                        701
                    ]
                }
            }
        }
    },
    "99c373e3e73243159a821b315a58e8335dcd3321": {
        "authored_data": "2020 Apr 12 10:51",
        "commit.message": "Remove unnecessary semicolon\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "7dbaed03060ac68ac81135cb68e229f54bc883a1",
        "changes": {
            "src/test/java/org/apache/commons/imaging/examples/WriteExifMetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        62
                    ]
                }
            }
        }
    },
    "7dbaed03060ac68ac81135cb68e229f54bc883a1": {
        "authored_data": "2020 Apr 12 10:51",
        "commit.message": "Remove unnecessary .toString call\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "9a72900e23226924e5793cc172e73a84cc16788d",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/BasicCParser.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BasicCParser', 'unescapeString(StringBuilder,String)')": [
                        322
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BasicCParser', 'unescapeString(StringBuilder,String)')": [
                        322
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        96
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccp.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffField.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', 'getValueDescription(Object)')": [
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        250,
                        267,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        301,
                        318,
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', 'getValueDescription(Object)')": [
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        250,
                        267,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        301,
                        318,
                        335
                    ]
                }
            }
        }
    },
    "9a72900e23226924e5793cc172e73a84cc16788d": {
        "authored_data": "2020 Apr 12 10:50",
        "commit.message": "Use StandardCharsets instead of string value\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "464e2adde1e4430ac9a69a3ac9fc2b4bbba2109a",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/psd/ImageResourceBlockTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlockTest', 'testCreatesImageResourceBlockAndCallsGetName')": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlockTest', 'testCreatesImageResourceBlockAndCallsGetName')": [
                        33
                    ]
                }
            }
        }
    },
    "464e2adde1e4430ac9a69a3ac9fc2b4bbba2109a": {
        "authored_data": "2020 Apr 12 10:45",
        "commit.message": "Remove deprecated methods calls (removed unnecessary unboxing)\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "3acace345edfcd51810ce4e3189d61c69aab8cc1",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        54,
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        54,
                        56,
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeRationalTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNull')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNull')": [
                        37
                    ]
                }
            }
        }
    }
}