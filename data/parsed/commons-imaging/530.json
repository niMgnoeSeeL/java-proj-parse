{
    "a38f0e082fe095afbb09cef14e1e5d64e452667b": {
        "authored_data": "2019 Jun 09 19:40",
        "commit.message": "IMAGING-134: Address review comments\n",
        "commit.author.name": "Michael Sommerville",
        "pcid": "9ddc4c45847d48ab4835c3cf38b307d7083886e9",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        77,
                        78,
                        79,
                        83,
                        85,
                        143,
                        145,
                        195,
                        196
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', None)": [
                        449,
                        451,
                        452,
                        453
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'getIntervalStartPositions(int)')": [
                        457,
                        461,
                        462,
                        464,
                        465,
                        472,
                        477,
                        480
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        77,
                        78,
                        82,
                        84,
                        142,
                        144,
                        194
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', None)": [
                        447,
                        448,
                        449,
                        450,
                        451,
                        453
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'getIntervalStartPositions(int)')": [
                        457,
                        461,
                        462,
                        464,
                        465,
                        472,
                        477,
                        480
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', None)": [
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'read')": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'read')": [
                        78
                    ]
                }
            }
        }
    },
    "9ddc4c45847d48ab4835c3cf38b307d7083886e9": {
        "authored_data": "2019 Jun 07 17:44",
        "commit.message": "IMAGING-134: Fix JPEG handling for files encoded with RST markers\n",
        "commit.author.name": "Michael Sommerville",
        "pcid": "e9f975a8eb487369211dc83a84cd618c2214c2da",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegConstants.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegConstants', None)": [
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegConstants', None)": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        139,
                        140
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'getMarkerName(int)')": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        28,
                        40,
                        41,
                        42
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        76,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        137,
                        138,
                        139,
                        140,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', None)": [
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        487,
                        488
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'splitByRstMarkers(int)')": [
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'getIntervalStartPositions(int)')": [
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStream.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', None)": [
                        26,
                        30,
                        31
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'nextBit')": [
                        34,
                        36,
                        42,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', None)": [
                        23,
                        24,
                        25,
                        29,
                        30,
                        31,
                        34,
                        35,
                        36,
                        37,
                        40,
                        41,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'hasNext')": [
                        38,
                        39
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'nextBit')": [
                        42,
                        44,
                        50,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStream', 'read')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82
                    ]
                }
            }
        }
    },
    "d328b7f1c3c7e597f4d0c5fa9adb01f8a5a1193a": {
        "authored_data": "2019 Jun 05 11:47",
        "commit.message": "IMAGING-130: Ignore extra bytes when LZW decoder table is full\n",
        "commit.author.name": "Michael Sommerville",
        "pcid": "06dd48ee5f3a6bf1bc020891f96bbc2ab154fd26",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/mylzw/MyLzwDecompressor.java": {
                "old": {
                    "('org.apache.commons.imaging.common.mylzw#MyLzwDecompressor', 'addStringToTable(byte)')": [
                        111,
                        112,
                        113,
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.mylzw#MyLzwDecompressor', 'addStringToTable(byte)')": [
                        111,
                        112,
                        113,
                        114
                    ]
                }
            }
        }
    },
    "d5375654e13f08a27955d1bd351ea5eb69515719": {
        "authored_data": "2019 Jun 03 09:59",
        "commit.message": "Add unit tests for interpretPixel\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "83e98089e5d93e800d58ff6a33cce38b4684ebe8",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterLogLuvTest.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        107
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', None)": [
                        89,
                        90,
                        93,
                        94,
                        95,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelNullSamples')": [
                        91,
                        92
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelEmptySamples')": [
                        96,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixel')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ]
                }
            }
        }
    }
}