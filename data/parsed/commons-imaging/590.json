{
    "84a2239f1b3e7aa702bb202bde13d34ec1eb1814": {
        "authored_data": "2019 Mar 31 13:49",
        "commit.message": "Use final.",
        "commit.author.name": "Gary Gregory",
        "pcid": "dee0061e877debc6171c291a4929cb774c19e514",
        "changes": {
            "src/main/java/org/apache/commons/imaging/FormatCompliance.java": {
                "old": {
                    "('org.apache.commons.imaging#FormatCompliance', 'dump')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#FormatCompliance', 'dump')": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'hasImageFileExtension(String)')": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'hasImageFileExtension(String)')": [
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/BinaryFileParser.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(String,int,int)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(String,int,int)')": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsType.java": {
                "old": {
                    "(None, None)": [
                        169
                    ]
                },
                "new": {
                    "(None, None)": [
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        395
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        395
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdHeaderInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdHeaderInfo', 'dump')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdHeaderInfo', 'dump')": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageContents.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageContents', 'dump')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageContents', 'dump')": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffField.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', 'dump')": [
                        364
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffField', 'dump')": [
                        364
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAscii.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'writeData(Object,ByteOrder)')": [
                        77,
                        86,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'writeData(Object,ByteOrder)')": [
                        77,
                        86,
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseCIntegerLiteral(String)')": [
                        177
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseCIntegerLiteral(String)')": [
                        177
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImageDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageDumpTest', 'testDumpColorSpace')": [
                        30,
                        31
                    ],
                    "('org.apache.commons.imaging#ImageDumpTest', 'testDump')": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageDumpTest', 'testDumpColorSpace')": [
                        30,
                        31
                    ],
                    "('org.apache.commons.imaging#ImageDumpTest', 'testDump')": [
                        39,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/RgbBufferedImageFactoryTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RgbBufferedImageFactoryTest', 'testGetColorBufferedImageThrowsIllegalArgumentException')": [
                        30,
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RgbBufferedImageFactoryTest', 'testGetColorBufferedImageThrowsIllegalArgumentException')": [
                        30,
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'testGetInputStreamThrowsNullPointerException')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'testGetInputStreamThrowsNullPointerException')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/itu_t4/HuffmanTreeExceptionTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTreeExceptionTest', 'testCreatesHuffmanTreeExceptionTakingString')": [
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTreeExceptionTest', 'testCreatesHuffmanTreeExceptionTakingString')": [
                        27,
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/itu_t4/T4_T6_TablesTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4_T6_TablesTest', 'testCreatesT4_T6_TablesTakingNoArgumentsAndCallsWriteBits')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4_T6_TablesTest', 'testCreatesT4_T6_TablesTakingNoArgumentsAndCallsWriteBits')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpWriterRgbTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpWriterRgbTest', 'testGetImageData')": [
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpWriterRgbTest', 'testGetImageData')": [
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        41,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        41,
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets')": [
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', 'testOddOffsets')": [
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcTypeLookupTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcTypeLookupTest', 'testGetIptcTypeWithPositive')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcTypeLookupTest', 'testGetIptcTypeWithPositive')": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/AppnSegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#AppnSegmentTest', 'testCreatesAppnSegment')": [
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#AppnSegmentTest', 'testCreatesAppnSegment')": [
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/JfifSegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#JfifSegmentTest', 'testCreatesJfifSegment')": [
                        31,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#JfifSegmentTest', 'testCreatesJfifSegment')": [
                        31,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/NegSizeSegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#NegSizeSegmentTest', 'testCreatesNegSizeSegment')": [
                        38,
                        49,
                        50,
                        51,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#NegSizeSegmentTest', 'testCreatesNegSizeSegment')": [
                        38,
                        49,
                        50,
                        51,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/SosSegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#SosSegmentTest', 'testGetComponentsTakingNoArguments')": [
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#SosSegmentTest', 'testCreatesSosSegmentTakingThreeArguments')": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#SosSegmentTest', 'testGetComponentsTakingNoArguments')": [
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#SosSegmentTest', 'testCreatesSosSegmentTakingThreeArguments')": [
                        39,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParserTest', 'testCreatesJpegXmpParserAndCallsParseXmpJpegSegment')": [
                        28,
                        29,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParserTest', 'testCreatesJpegXmpParserAndCallsParseXmpJpegSegment')": [
                        28,
                        29,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pcx/RleReaderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#RleReaderTest', 'testReadWithNonNull')": [
                        30,
                        31,
                        32,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#RleReaderTest', 'testReadWithNonNull')": [
                        30,
                        31,
                        32,
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngCrcTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngCrcTest', 'testCrc')": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngCrcTest', 'testCrc')": [
                        36,
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/chunks/PngChunkTextTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkTextTest', 'testCreatesPngChunkText')": [
                        28,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkTextTest', 'testCreatesPngChunkText')": [
                        28,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterAverageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterAverageTest', 'testUnfilterWithNull')": [
                        30,
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterAverageTest', 'testUnfilterWithNull')": [
                        30,
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterPaethTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterPaethTest', 'testUnfilter')": [
                        30,
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterPaethTest', 'testUnfilter')": [
                        30,
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterUpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterUpTest', 'testUnfilterWithNull')": [
                        30,
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterUpTest', 'testUnfilterWithNull')": [
                        30,
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterIndexedColorTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColorTest', 'testFilterWithNegativeAndNegative')": [
                        28,
                        29,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColorTest', 'testFilterWithNegativeAndNegative')": [
                        28,
                        29,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PbmFileInfoTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PbmFileInfoTest', 'testGetRGBThrowsIOException')": [
                        32,
                        33,
                        34,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PbmFileInfoTest', 'testGetRGBThrowsIOException')": [
                        32,
                        33,
                        34,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PnmImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        58,
                        68,
                        69,
                        72,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        58,
                        68,
                        69,
                        72,
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/WhiteSpaceReaderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#WhiteSpaceReaderTest', 'testReadLineReturningNonEmptyString')": [
                        31,
                        33,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#WhiteSpaceReaderTest', 'testReadLineReturningNonEmptyString')": [
                        31,
                        33,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/ImageResourceBlockTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlockTest', 'testCreatesImageResourceBlockAndCallsGetName')": [
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlockTest', 'testCreatesImageResourceBlockAndCallsGetName')": [
                        29,
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/ImageResourceTypeTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceTypeTest', 'testGetDescriptionWithPositive')": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.psd#ImageResourceTypeTest', 'testGetDescriptionWithZero')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceTypeTest', 'testGetDescriptionWithPositive')": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.psd#ImageResourceTypeTest', 'testGetDescriptionWithZero')": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserCmykTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserCmykTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserCmykTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserGrayscaleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserGrayscaleTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserGrayscaleTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserIndexedTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserIndexedTest', 'testFailsToCreateDataParserIndexedThrowsArrayIndexOutOfBoundsException')": [
                        28,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserIndexedTest', 'testFailsToCreateDataParserIndexedThrowsArrayIndexOutOfBoundsException')": [
                        28,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserLabTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserLabTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserLabTest', 'testGetBasicChannelsCount')": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/rgbe/RgbeReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeReadTest', 'testErrorDecompressingInvalidFile')": [
                        68,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeReadTest', 'testErrorDecompressingInvalidFile')": [
                        68,
                        71,
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/JpegImageDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#JpegImageDataTest', 'testCreatesJpegImageDataAndCallsGetElementDescription')": [
                        27,
                        28,
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#JpegImageDataTest', 'testCreatesJpegImageDataAndCallsGetElementDescription')": [
                        27,
                        28,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffTagsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTagsTest', 'testGetTagWithNegativeAndPositive')": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTagsTest', 'testGetTagWithNegativeAndPositive')": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStripsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStripsTest', 'testApplyPredictor')": [
                        26,
                        27,
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStripsTest', 'testApplyPredictor')": [
                        26,
                        27,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeByteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeByteTest', 'testWriteDataWithNull')": [
                        28,
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeByteTest', 'testWriteDataWithNull')": [
                        28,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeLongTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeLongTest', 'testWriteDataWithNonNull')": [
                        30,
                        31,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeLongTest', 'testWriteDataWithNonNull')": [
                        30,
                        31,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeShortTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeShortTest', 'testCreatesFieldTypeShortAndCallsWriteData')": [
                        30,
                        31,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeShortTest', 'testCreatesFieldTypeShortAndCallsWriteData')": [
                        30,
                        31,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeTest', 'testGetFieldTypeWithNegative')": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeTest', 'testGetFieldTypeWithNegative')": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoByteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteTest', 'testCreatesTagInfoByteTakingFourArgumentsAndCallsEncodeValue')": [
                        30,
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoByteTest', 'testCreatesTagInfoByteTakingFourArgumentsAndCallsEncodeValue')": [
                        30,
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSByteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSByteTest', 'testCreatesTagInfoSByteAndCallsEncodeValue')": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSByteTest', 'testCreatesTagInfoSByteAndCallsEncodeValue')": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSBytesTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSBytesTest', 'testCreatesTagInfoSBytesAndCallsEncodeValue')": [
                        30,
                        31,
                        32,
                        33,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSBytesTest', 'testCreatesTagInfoSBytesAndCallsEncodeValue')": [
                        30,
                        31,
                        32,
                        33,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSLongTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSLongTest', 'testEncodeValue')": [
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSLongTest', 'testEncodeValue')": [
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSShortTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShortTest', 'testGetValue')": [
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShortTest', 'testGetValue')": [
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSShortsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShortsTest', 'testEncodeValue')": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShortsTest', 'testEncodeValue')": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoUnknownTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoUnknownTest', 'testCreatesTagInfoUnknown')": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoUnknownTest', 'testCreatesTagInfoUnknown')": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/palette/SimplePaletteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#SimplePaletteTest', 'testGetPaletteIndexReturningNegative')": [
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#SimplePaletteTest', 'testGetPaletteIndexReturningNegative')": [
                        29,
                        30
                    ]
                }
            }
        }
    },
    "dee0061e877debc6171c291a4929cb774c19e514": {
        "authored_data": "2019 Mar 31 13:48",
        "commit.message": "Change ImagingTestConstants from an interface to a class.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8934b16fa5316c960ee36165da2cb4e0dbe7be42",
        "changes": {
            "src/test/java/org/apache/commons/imaging/ImagingGuessFormatTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat')": [
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        32,
                        33,
                        88
                    ],
                    "('org.apache.commons.imaging#ImagingTest', 'isPhilHarveyTestImage(File)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        32,
                        87
                    ],
                    "('org.apache.commons.imaging#ImagingTest', 'isPhilHarveyTestImage(File)')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingTestConstants.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingTestConstants', None)": [
                        24
                    ]
                }
            }
        }
    },
    "8934b16fa5316c960ee36165da2cb4e0dbe7be42": {
        "authored_data": "2019 Mar 31 13:46",
        "commit.message": "Remove redundant modifiers like 'public' and 'static'.",
        "commit.author.name": "Gary Gregory",
        "pcid": "92e281c27e3b3b9a6bddf9aa6b3c0afbacd8f88f",
        "changes": {
            "src/test/java/org/apache/commons/imaging/ImagingTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        48,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingTest', None)": [
                        48,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', None)": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', None)": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', None)": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', None)": [
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/test/util/FileSystemTraversal.java": {
                "old": {
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', None)": [
                        31
                    ]
                }
            }
        }
    },
    "92e281c27e3b3b9a6bddf9aa6b3c0afbacd8f88f": {
        "authored_data": "2019 Mar 31 13:41",
        "commit.message": "Clean up generics.",
        "commit.author.name": "Gary Gregory",
        "pcid": "3debe7d6c50ec211d4bdbcc8beae169fab03e9bf",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageSize(ByteSource,Map)')": [
                        498
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        549
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        651
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        693
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageSize(ByteSource,Map)')": [
                        498
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        549
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        651
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        693
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        85
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        274
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageInfo(ByteSource,Map)')": [
                        85
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'getImageSize(ByteSource,Map)')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        632
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        632
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        281
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        281
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        478
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        478
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        483
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        483
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        348
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        348
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        646
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        646
                    ]
                }
            }
        }
    },
    "3debe7d6c50ec211d4bdbcc8beae169fab03e9bf": {
        "authored_data": "2019 Mar 31 13:40",
        "commit.message": "Clean up exceptions.",
        "commit.author.name": "Gary Gregory",
        "pcid": "466722afe5971f480b8f6a8b76e389cecce6237b",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'rewrite(Rewriter,String)')": [
                        176
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'testTiffImageData')": [
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'testTiffImageData')": [
                        63
                    ]
                }
            }
        }
    },
    "466722afe5971f480b8f6a8b76e389cecce6237b": {
        "authored_data": "2019 Mar 31 13:39",
        "commit.message": "These casts are not needed.",
        "commit.author.name": "Gary Gregory",
        "pcid": "258277b4025961202e6080f478123d01a3a524eb",
        "changes": {
            "src/test/java/org/apache/commons/imaging/common/RationalNumberTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'data')": [
                        96,
                        97,
                        103,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', 'data')": [
                        96,
                        97,
                        103,
                        104
                    ]
                }
            }
        }
    },
    "0a310d35804d6871c38aa7a410395ca5c24003da": {
        "authored_data": "2019 Mar 26 17:49",
        "commit.message": "Update Apache Commons Parent from 47 to 48.",
        "commit.author.name": "Gary Gregory",
        "pcid": "fa7c16f434061d441d1c0d9dbcfd0f4c3092c880",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        42
                    ]
                }
            }
        }
    }
}