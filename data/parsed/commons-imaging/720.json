{
    "4dc0d455ca0fbc1109ee6af22554aa2b40807c8f": {
        "authored_data": "2016 Oct 11 16:22",
        "commit.message": "IMAGING-190 ImageDataReader.decompress() overwrites its input\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1764288 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "3653791bb2ec9e9224beee7da3525af2cf866f32",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'decompress(byte,int,int,int,int)')": [
                        140,
                        151,
                        152,
                        161,
                        164,
                        180,
                        183,
                        197,
                        202,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'decompress(byte,int,int,int,int)')": [
                        140,
                        148,
                        150,
                        153,
                        154,
                        155,
                        164,
                        167,
                        183,
                        186,
                        200,
                        205,
                        219
                    ]
                }
            }
        }
    },
    "3653791bb2ec9e9224beee7da3525af2cf866f32": {
        "authored_data": "2016 Oct 11 15:50",
        "commit.message": "Oops - the class is used in public parameter types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1764274 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2000ebc8be79733140face581be259278dd67071",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcBlock.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', None)": [
                        22,
                        28
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', 'isIPTCBlock')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', None)": [
                        22,
                        23,
                        24,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', 'isIPTCBlock')": [
                        36
                    ]
                }
            }
        }
    },
    "2000ebc8be79733140face581be259278dd67071": {
        "authored_data": "2016 Oct 10 16:45",
        "commit.message": "IMAGING-193 - Duplicate class names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1764151 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2f64583cdcb8d28d050aba22b46ec41d6df91ec2",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        302,
                        474
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        566
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        679
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        302,
                        474
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        566
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(InputStream,Map)')": [
                        679
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean)')": [
                        438
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean,FormatCompliance)')": [
                        444,
                        459
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageSize(ByteSource,Map)')": [
                        474
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        521
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        593
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        645
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean)')": [
                        438
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean,FormatCompliance)')": [
                        444,
                        459
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageSize(ByteSource,Map)')": [
                        474
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        521
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        593
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        645
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(InputStream)')": [
                        118,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(ByteSource,int,int)')": [
                        243
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(ByteSource)')": [
                        377,
                        380
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        448
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        536
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        572
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        691
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(InputStream)')": [
                        118,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(ByteSource,int,int)')": [
                        243
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(ByteSource)')": [
                        377,
                        380
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        448
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        536
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        572
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        691
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParser.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParser', 'parseData(int,BufferedImage,ImageContents)')": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParser', 'getRGB(int,int,int,ImageContents)')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParser', 'parseData(int,BufferedImage,PsdImageContents)')": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParser', 'getRGB(int,int,int,PsdImageContents)')": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserBitmap.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserBitmap', 'getRGB(int,int,int,ImageContents)')": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserBitmap', 'getRGB(int,int,int,PsdImageContents)')": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserCmyk.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserCmyk', 'getRGB(int,int,int,ImageContents)')": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserCmyk', 'getRGB(int,int,int,PsdImageContents)')": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserGrayscale.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserGrayscale', 'getRGB(int,int,int,ImageContents)')": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserGrayscale', 'getRGB(int,int,int,PsdImageContents)')": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserIndexed.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserIndexed', 'getRGB(int,int,int,ImageContents)')": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserIndexed', 'getRGB(int,int,int,PsdImageContents)')": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserLab.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserLab', 'getRGB(int,int,int,ImageContents)')": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserLab', 'getRGB(int,int,int,PsdImageContents)')": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserRgb.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserRgb', 'getRGB(int,int,int,ImageContents)')": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserRgb', 'getRGB(int,int,int,PsdImageContents)')": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/dataparsers/DataParserStub.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserStub', 'getRGB(int,int,int,ImageContents)')": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd.dataparsers#DataParserStub', 'getRGB(int,int,int,PsdImageContents)')": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/CompressedDataReader.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.imaging.formats.psd.datareaders#CompressedDataReader', 'readData(InputStream,BufferedImage,ImageContents,BinaryFileParser)')": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.imaging.formats.psd.datareaders#CompressedDataReader', 'readData(InputStream,BufferedImage,PsdImageContents,BinaryFileParser)')": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/DataReader.java": {
                "old": {
                    "(None, None)": [
                        25,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/UncompressedDataReader.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.psd.datareaders#UncompressedDataReader', 'readData(InputStream,BufferedImage,ImageContents,BinaryFileParser)')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.psd.datareaders#UncompressedDataReader', 'readData(InputStream,BufferedImage,PsdImageContents,BinaryFileParser)')": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageData.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        55,
                        121
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', 'getDataReader(TiffDirectory,PhotometricInterpreter,int,int,int,int,int,int,int,ByteOrder)')": [
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        55,
                        121
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', 'getDataReader(TiffDirectory,PhotometricInterpreter,int,int,int,int,int,int,int,ByteOrder)')": [
                        139
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        642
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getBufferedImage(TiffDirectory,ByteOrder,Map)')": [
                        642
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStrips.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderTiled.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', None)": [
                        33
                    ]
                }
            }
        }
    },
    "2f64583cdcb8d28d050aba22b46ec41d6df91ec2": {
        "authored_data": "2016 Oct 09 13:43",
        "commit.message": "Don't expose mutable data unnecessarily\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763980 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "860ee5bc33a7a6f6a9b4839eac3742e0f81b0050",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        197
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', None)": [
                        92,
                        93,
                        94,
                        103,
                        108,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', None)": [
                        92,
                        93,
                        94,
                        103,
                        108,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ]
                }
            }
        }
    },
    "860ee5bc33a7a6f6a9b4839eac3742e0f81b0050": {
        "authored_data": "2016 Oct 09 13:22",
        "commit.message": "Eliminate magic number\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763977 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "cb387cf13efc8fde3c777bc87f7eb9612a15c07e",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/ZigZag.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#ZigZag', 'zigZagToBlock(int,int)')": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#ZigZag', 'blockToZigZag(int,int)')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#ZigZag', 'zigZagToBlock(int,int)')": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#ZigZag', 'blockToZigZag(int,int)')": [
                        40
                    ]
                }
            }
        }
    },
    "cb387cf13efc8fde3c777bc87f7eb9612a15c07e": {
        "authored_data": "2016 Oct 09 13:18",
        "commit.message": "Don't expose ctor unnecessarily\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763976 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "df41d46a01618a04c8f411c775f7df7f17e2c5e5",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        44
                    ]
                }
            }
        }
    },
    "df41d46a01618a04c8f411c775f7df7f17e2c5e5": {
        "authored_data": "2016 Oct 09 13:15",
        "commit.message": "Tidyup unused bytes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763975 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "0644734bc2057ceeda9497237393281f7e638376",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        248
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcRecord.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcRecord', None)": [
                        27,
                        28,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcRecord', 'getRawBytes')": [
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcRecord', None)": [
                        26
                    ]
                }
            }
        }
    },
    "0644734bc2057ceeda9497237393281f7e638376": {
        "authored_data": "2016 Oct 09 13:12",
        "commit.message": "Not used outside the package, so don't expose state unnecessarily\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763974 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "09f80c34d40bbe58754293bca0b981a740cda9f1",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcBlock.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', None)": [
                        22,
                        28
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', 'isIPTCBlock')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', None)": [
                        22,
                        28
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcBlock', 'isIPTCBlock')": [
                        34
                    ]
                }
            }
        }
    },
    "09f80c34d40bbe58754293bca0b981a740cda9f1": {
        "authored_data": "2016 Oct 09 13:11",
        "commit.message": "Use getter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763973 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "0b3e97339fa0da57dd823c9e7d0fd72488ca895b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        436,
                        437
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        436,
                        437
                    ]
                }
            }
        }
    },
    "0b3e97339fa0da57dd823c9e7d0fd72488ca895b": {
        "authored_data": "2016 Oct 09 13:10",
        "commit.message": "Use getter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1763972 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "3e4a5a6657861edfe253cbc3ecbfc2e06f8b8813",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        71
                    ]
                }
            }
        }
    }
}