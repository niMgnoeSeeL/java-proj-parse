{
    "133035a898dad05b8dc81f56b01e9aef224eb6e5": {
        "authored_data": "2013 Nov 27 17:09",
        "commit.message": "IoUtils doesn't need to inherit from ImagingConstants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546118 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "3abb4d8e78ad17f433210c87ff8b9cf5842886fc",
        "changes": {
            "src/main/java/org/apache/commons/imaging/util/IoUtils.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', None)": [
                        24
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.util#IoUtils', None)": [
                        22
                    ]
                }
            }
        }
    },
    "3abb4d8e78ad17f433210c87ff8b9cf5842886fc": {
        "authored_data": "2013 Nov 27 17:04",
        "commit.message": "Removed BinaryInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546112 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "40789efa9dd7e9bbdf9dfea1f10c93de0389c3ae",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParser.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParser', None)": [
                        33,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParser', None)": [
                        32,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserBitFields.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserBitFields', 'getNextRGB')": [
                        78,
                        81,
                        84
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserBitFields', 'newline')": [
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserBitFields', 'getNextRGB')": [
                        81,
                        84,
                        87
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserBitFields', 'newline')": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserRgb.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRgb', 'getNextRGB')": [
                        67
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRgb', 'newline')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRgb', 'getNextRGB')": [
                        70
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRgb', 'newline')": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/pixelparsers/PixelParserRle.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRle', 'processImage(ImageBuilder)')": [
                        98,
                        99,
                        114,
                        115,
                        134,
                        135
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.bmp.pixelparsers#PixelParserRle', 'processImage(ImageBuilder)')": [
                        99,
                        100,
                        115,
                        116,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        255,
                        258,
                        263,
                        275,
                        276,
                        285,
                        290,
                        297,
                        301,
                        311,
                        315,
                        330,
                        341
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        255,
                        258,
                        263,
                        275,
                        276,
                        285,
                        290,
                        297,
                        301,
                        311,
                        315,
                        330,
                        341
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeInfo.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', None)": [
                        40,
                        47,
                        48
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'readMetadata')": [
                        97
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'getPixelData')": [
                        147,
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', None)": [
                        40,
                        47
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'readMetadata')": [
                        96
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'getPixelData')": [
                        146,
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTag.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.icc#IccTag', 'setData(byte)')": [
                        51,
                        54,
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        29
                    ],
                    "('org.apache.commons.imaging.icc#IccTag', 'setData(byte)')": [
                        52,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTagDataTypes.java": {
                "old": {
                    "(None, None)": [
                        24,
                        33,
                        36,
                        37,
                        38,
                        39,
                        42,
                        43,
                        61,
                        64,
                        65,
                        66,
                        67,
                        81,
                        84,
                        85,
                        86,
                        87,
                        101,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        134,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        26,
                        27,
                        35,
                        38,
                        39,
                        42,
                        43,
                        61,
                        64,
                        65,
                        79,
                        82,
                        83,
                        97,
                        100,
                        101,
                        102,
                        103,
                        127,
                        130,
                        131,
                        132
                    ]
                }
            }
        }
    },
    "40789efa9dd7e9bbdf9dfea1f10c93de0389c3ae": {
        "authored_data": "2013 Nov 27 16:34",
        "commit.message": "Naming convention for boolean values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546096 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "7aa85069750c58427c296d38268a833676c401cd",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageInfo', None)": [
                        45,
                        46,
                        81,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'isProgressive')": [
                        238
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'toString(PrintWriter,String)')": [
                        323,
                        324
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'isTransparent')": [
                        344
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageInfo', None)": [
                        45,
                        46,
                        81,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'isProgressive')": [
                        238
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'toString(PrintWriter,String)')": [
                        323,
                        324
                    ],
                    "('org.apache.commons.imaging#ImageInfo', 'isTransparent')": [
                        344
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        612,
                        613,
                        626,
                        635
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        612,
                        613,
                        626,
                        635
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        559,
                        570,
                        572,
                        582
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        559,
                        570,
                        572,
                        582
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', None)": [
                        1096,
                        1097,
                        1098,
                        1115
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', None)": [
                        1096,
                        1097,
                        1098,
                        1115
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageInfo', None)": [
                        33,
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageInfo', None)": [
                        33,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        257,
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        257,
                        266
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        513,
                        522,
                        541
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getImageInfo(ByteSource,Map)')": [
                        513,
                        522,
                        541
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tga/TgaImageParser.java": {
                "old": {
                    "(None, None)": [
                        211,
                        212,
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        211,
                        212,
                        220
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        249,
                        254,
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        249,
                        254,
                        301
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        144,
                        150,
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'getImageInfo(ByteSource,Map)')": [
                        144,
                        150,
                        162
                    ]
                }
            }
        }
    },
    "7aa85069750c58427c296d38268a833676c401cd": {
        "authored_data": "2013 Nov 27 16:28",
        "commit.message": "Removed the methods in BinaryFileParser redirecting to BinaryFunctions and use a static import instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546091 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "d61e69628a29eb6df3c445ac5788fc2186fdf283",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/BinaryFileParser.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        25,
                        26,
                        224
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', None)": [
                        51,
                        55,
                        58,
                        59,
                        62,
                        63,
                        66,
                        67,
                        70,
                        71,
                        74,
                        75,
                        78,
                        79,
                        82,
                        83,
                        87,
                        88,
                        92,
                        93,
                        97,
                        98,
                        102,
                        103,
                        107,
                        108,
                        112,
                        113,
                        116,
                        117,
                        122,
                        123,
                        127,
                        128,
                        132,
                        133,
                        137,
                        138,
                        142,
                        143,
                        146,
                        147,
                        150,
                        151,
                        154,
                        155,
                        158,
                        159,
                        162,
                        163,
                        166,
                        167,
                        170,
                        171,
                        184,
                        185,
                        202,
                        206,
                        207,
                        220,
                        221
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'toBytes(short)')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'toBytes(short,ByteOrder)')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'toInt(byte)')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'toUInt16(byte)')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'toUInt16(byte,int)')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'getStreamBytes(InputStream)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'read4Bytes(String,InputStream,String)')": [
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'read3Bytes(String,InputStream,String)')": [
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'read2Bytes(String,InputStream,String)')": [
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readByte(String,InputStream,String)')": [
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readBytes(String,InputStream,int,String)')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readBytes(String,InputStream,int)')": [
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readBytes(InputStream,int)')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readAndVerifyBytes(InputStream,BinaryConstant,String)')": [
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'readAndVerifyBytes(InputStream,byte,String)')": [
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'skipBytes(InputStream,int)')": [
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'skipBytes(InputStream,long)')": [
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'skipBytes(InputStream,long,String)')": [
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'remainingBytes(String,byte,int)')": [
                        144,
                        145
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'slice(byte,int,int)')": [
                        148,
                        149
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'findNull(byte)')": [
                        152,
                        153
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'findNull(byte,int)')": [
                        156,
                        157
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'printByteBits(String,byte)')": [
                        160,
                        161
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'printCharQuad(String,int)')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'printCharQuad(PrintWriter,String,int)')": [
                        168,
                        169
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(String,int)')": [
                        172,
                        173
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(PrintWriter,String,int)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(PrintWriter,String,int,int)')": [
                        186,
                        187,
                        198,
                        199
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'compareBytes(byte,int,byte,int,int)')": [
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'startsWith(byte,BinaryConstant)')": [
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'startsWith(byte,byte)')": [
                        222,
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BinaryFileParser', None)": [
                        47,
                        51
                    ],
                    "('org.apache.commons.imaging.common#BinaryFileParser', 'debugNumber(PrintWriter,String,int,int)')": [
                        62,
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/BinaryFunctions.java": {
                "old": {
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'readAndVerifyBytes(String,InputStream,byte,String)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', None)": [
                        133,
                        134,
                        135,
                        136,
                        160,
                        161,
                        162,
                        163,
                        172,
                        173
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'scanForByte(InputStream,byte)')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'tail(byte,int)')": [
                        174,
                        175,
                        176,
                        177,
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#BinaryFunctions', 'startsWith(byte,BinaryConstant)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.imaging.common#BinaryFunctions', None)": [
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ByteConversions.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ByteConversions', 'toUInt16(byte,ByteOrder)')": [
                        227
                    ],
                    "('org.apache.commons.imaging.common#ByteConversions', 'toUInt16(byte,int,ByteOrder)')": [
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ByteConversions', 'toUInt16(byte,ByteOrder)')": [
                        227
                    ],
                    "('org.apache.commons.imaging.common#ByteConversions', 'toUInt16(byte,int,ByteOrder)')": [
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readBmpHeaderInfo(InputStream,FormatCompliance,boolean)')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        154,
                        155,
                        156,
                        162,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getRLEBytes(InputStream,int)')": [
                        268,
                        270,
                        285,
                        287,
                        307
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        404,
                        452,
                        453,
                        466
                    ]
                },
                "new": {
                    "(None, None)": [
                        55,
                        56
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readBmpHeaderInfo(InputStream,FormatCompliance,boolean)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        151,
                        152,
                        153,
                        159,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        179,
                        180,
                        181,
                        182,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getRLEBytes(InputStream,int)')": [
                        252,
                        254,
                        269,
                        271,
                        291
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        388,
                        436,
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        126,
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        47
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        128,
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readHeader(InputStream,FormatCompliance)')": [
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readGraphicControlExtension(int,InputStream)')": [
                        198,
                        199
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readImageDescriptor(GifHeaderInfo,int,InputStream,boolean,FormatCompliance)')": [
                        337,
                        338,
                        339,
                        340
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readHeader(InputStream,FormatCompliance)')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readGraphicControlExtension(int,InputStream)')": [
                        199
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readImageDescriptor(GifHeaderInfo,int,InputStream,boolean,FormatCompliance)')": [
                        337,
                        338,
                        339,
                        340
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readIcnsHeader(InputStream)')": [
                        158,
                        159
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readIcnsElement(InputStream)')": [
                        196,
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        42,
                        43
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readIcnsHeader(InputStream)')": [
                        160,
                        161
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readIcnsElement(InputStream)')": [
                        198,
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readFileHeader(InputStream)')": [
                        125,
                        126,
                        127
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readIconInfo(InputStream)')": [
                        188,
                        192,
                        194,
                        196
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readBitmapIconData(byte,IconInfo)')": [
                        316,
                        323,
                        330,
                        341,
                        346,
                        354,
                        362,
                        371,
                        374,
                        376,
                        385,
                        392,
                        393,
                        394,
                        476
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        50
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readFileHeader(InputStream)')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readIconInfo(InputStream)')": [
                        190,
                        194,
                        196,
                        198
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readBitmapIconData(byte,IconInfo)')": [
                        318,
                        325,
                        332,
                        343,
                        348,
                        356,
                        364,
                        373,
                        376,
                        378,
                        387,
                        394,
                        395,
                        396,
                        478
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "new": {
                    "(None, None)": [
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        82,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        85,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        69,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        40
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        511,
                        517,
                        543,
                        549
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        43,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        514,
                        520,
                        546,
                        552
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'isPhotoshopJpegSegment(byte)')": [
                        49
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'isPhotoshopJpegSegment(byte)')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        173
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/App14Segment.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', 'isAdobeJpegSegment')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', 'isAdobeJpegSegment')": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/App2Segment.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2Segment', None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2Segment', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DqtSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DqtSegment', None)": [
                        66,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#DqtSegment', None)": [
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/GenericSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'dump(PrintWriter,int)')": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'dump(PrintWriter,int)')": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/JfifSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#JfifSegment', None)": [
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#JfifSegment', None)": [
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/SofnSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#SofnSegment', None)": [
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#SofnSegment', None)": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/SosSegment.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "new": {
                    "(None, None)": [
                        35,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParser', 'isXmpJpegSegment(byte)')": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParser', 'isXmpJpegSegment(byte)')": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'readPcxHeader(InputStream,boolean)')": [
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        274,
                        275,
                        276,
                        277
                    ]
                },
                "new": {
                    "(None, None)": [
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'readPcxHeader(InputStream,boolean)')": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        277,
                        278,
                        279,
                        280
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(InputStream,int,boolean)')": [
                        152,
                        153,
                        175
                    ]
                },
                "new": {
                    "(None, None)": [
                        64,
                        65
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(InputStream,int,boolean)')": [
                        154,
                        155,
                        177
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ScanExpediter.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', None)": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getNextScanline(InputStream,int,byte,int)')": [
                        221
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', None)": [
                        35
                    ],
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getNextScanline(InputStream,int,byte,int)')": [
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkGama.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkGama', None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkGama', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccp.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIhdr.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        35,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        37,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkItxt.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkItxt', None)": [
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkItxt', None)": [
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkPhys.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkPhys', None)": [
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkPhys', None)": [
                        34,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkPlte.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkText.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkZtxt.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkZtxt', None)": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkZtxt', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterGrayscale.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterTrueColor.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        33,
                        34,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "new": {
                    "(None, None)": [
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readHeader(InputStream)')": [
                        108,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(InputStream)')": [
                        124,
                        131,
                        138,
                        144
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(InputStream,int,int,int)')": [
                        192,
                        208
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getInputStream(ByteSource,int)')": [
                        277,
                        287,
                        297,
                        307
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getData(ByteSource,int)')": [
                        341,
                        354,
                        367,
                        379
                    ]
                },
                "new": {
                    "(None, None)": [
                        50,
                        51
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readHeader(InputStream)')": [
                        110,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(InputStream)')": [
                        126,
                        133,
                        140,
                        146
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(InputStream,int,int,int)')": [
                        194,
                        210
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getInputStream(ByteSource,int)')": [
                        279,
                        289,
                        299,
                        309
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getData(ByteSource,int)')": [
                        343,
                        356,
                        369,
                        381
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readTiffHeader(InputStream)')": [
                        82,
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        147,
                        158,
                        159,
                        160,
                        162,
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        40,
                        41
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readTiffHeader(InputStream)')": [
                        85,
                        90
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        150,
                        161,
                        162,
                        163,
                        165,
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "new": {
                    "(None, None)": [
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccProfileParser.java": {
                "old": {
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'readICCProfileInfo(InputStream)')": [
                        123,
                        136,
                        141,
                        144,
                        149,
                        154,
                        161,
                        166,
                        171,
                        176,
                        181,
                        188,
                        195,
                        212,
                        218,
                        223,
                        224
                    ],
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'issRGB(ByteSource)')": [
                        317,
                        322,
                        326,
                        327,
                        328,
                        333
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'readICCProfileInfo(InputStream)')": [
                        125,
                        138,
                        143,
                        146,
                        151,
                        156,
                        163,
                        168,
                        173,
                        178,
                        183,
                        190,
                        197,
                        214,
                        220,
                        225,
                        226
                    ],
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'issRGB(ByteSource)')": [
                        319,
                        324,
                        328,
                        329,
                        330,
                        335
                    ]
                }
            }
        }
    },
    "d61e69628a29eb6df3c445ac5788fc2186fdf283": {
        "authored_data": "2013 Nov 27 15:05",
        "commit.message": "Formatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546060 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "348af04c6fcdfec0876381efac527196e3e7f10a",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "(None, None)": [
                        68,
                        71,
                        81
                    ],
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        90,
                        91,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        146,
                        148,
                        151,
                        152,
                        153,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        165,
                        166,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        193,
                        195,
                        197,
                        198,
                        199,
                        200,
                        202,
                        203,
                        204,
                        205,
                        206,
                        213,
                        214,
                        215,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        242,
                        244,
                        246,
                        247,
                        248,
                        249,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        272,
                        273,
                        274,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        321,
                        322,
                        323,
                        330,
                        332,
                        334,
                        335,
                        336,
                        337,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        358,
                        360,
                        362,
                        363,
                        364,
                        365,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        388,
                        389,
                        390,
                        391,
                        398,
                        404,
                        405,
                        406,
                        407,
                        414,
                        420,
                        421,
                        422,
                        423,
                        435,
                        439,
                        440,
                        441,
                        442,
                        443,
                        457,
                        461,
                        462,
                        463,
                        464,
                        465,
                        472,
                        473,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        492,
                        493,
                        494,
                        498,
                        499,
                        500,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        510,
                        511,
                        512,
                        515,
                        516,
                        517,
                        518,
                        520,
                        521,
                        522,
                        523,
                        524,
                        532,
                        535,
                        536,
                        537,
                        538,
                        540,
                        541,
                        542,
                        543,
                        544,
                        554,
                        555,
                        564,
                        566,
                        567,
                        568,
                        569,
                        570,
                        572,
                        573,
                        574,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        599,
                        601,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        634,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        668,
                        669,
                        670,
                        671,
                        673,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        690,
                        691,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        713,
                        714,
                        715,
                        717,
                        718,
                        719,
                        720,
                        721,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        749,
                        750,
                        751,
                        753,
                        754,
                        755,
                        756,
                        757,
                        772,
                        773,
                        778,
                        779,
                        781,
                        782,
                        783,
                        784,
                        785,
                        790,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        807,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        832,
                        837,
                        838,
                        839,
                        840,
                        841,
                        860,
                        861,
                        862,
                        863,
                        864,
                        893,
                        894,
                        902,
                        919,
                        929,
                        953,
                        959,
                        960,
                        984
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(ByteSource)')": [
                        134,
                        135
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(byte)')": [
                        181,
                        182
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(File)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageInfo(ByteSource,Map)')": [
                        297
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageInfo(ByteSource)')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getAllBufferedImages(File)')": [
                        483,
                        484
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        508,
                        509
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageSize(byte)')": [
                        594,
                        595
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageSize(File)')": [
                        626,
                        627,
                        628
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getICCProfileBytes(byte)')": [
                        704,
                        705
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getICCProfileBytes(File)')": [
                        740,
                        741
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'dumpImageFile(byte)')": [
                        802,
                        803
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'dumpImageFile(File)')": [
                        819,
                        820
                    ]
                },
                "new": {
                    "(None, None)": [
                        60,
                        62,
                        64,
                        69,
                        71,
                        73,
                        76,
                        79,
                        81,
                        88,
                        94
                    ],
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        98,
                        102,
                        133,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        152,
                        155,
                        157,
                        159,
                        161,
                        162,
                        163,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        180,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        199,
                        202,
                        204,
                        206,
                        207,
                        208,
                        209,
                        210,
                        212,
                        213,
                        214,
                        215,
                        216,
                        228,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        247,
                        250,
                        252,
                        254,
                        255,
                        256,
                        257,
                        258,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        306,
                        307,
                        308,
                        313,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        327,
                        334,
                        336,
                        338,
                        339,
                        340,
                        341,
                        342,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        363,
                        365,
                        367,
                        368,
                        369,
                        370,
                        371,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        392,
                        395,
                        396,
                        406,
                        409,
                        410,
                        420,
                        423,
                        424,
                        436,
                        438,
                        441,
                        442,
                        443,
                        444,
                        458,
                        460,
                        463,
                        464,
                        465,
                        466,
                        473,
                        474,
                        476,
                        479,
                        480,
                        481,
                        482,
                        483,
                        492,
                        493,
                        496,
                        498,
                        499,
                        500,
                        502,
                        503,
                        504,
                        505,
                        506,
                        508,
                        509,
                        510,
                        511,
                        514,
                        515,
                        516,
                        517,
                        518,
                        520,
                        521,
                        522,
                        523,
                        531,
                        534,
                        535,
                        536,
                        537,
                        538,
                        540,
                        541,
                        542,
                        543,
                        553,
                        554,
                        558,
                        564,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        573,
                        574,
                        575,
                        587,
                        590,
                        591,
                        592,
                        593,
                        594,
                        599,
                        601,
                        602,
                        603,
                        604,
                        606,
                        607,
                        608,
                        609,
                        618,
                        621,
                        622,
                        623,
                        624,
                        625,
                        632,
                        633,
                        634,
                        635,
                        637,
                        638,
                        639,
                        640,
                        654,
                        656,
                        657,
                        659,
                        660,
                        661,
                        662,
                        666,
                        667,
                        668,
                        670,
                        673,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        691,
                        694,
                        695,
                        696,
                        697,
                        698,
                        707,
                        708,
                        709,
                        710,
                        712,
                        713,
                        714,
                        715,
                        726,
                        729,
                        730,
                        731,
                        732,
                        733,
                        742,
                        743,
                        744,
                        745,
                        747,
                        748,
                        749,
                        750,
                        765,
                        769,
                        771,
                        772,
                        774,
                        775,
                        776,
                        777,
                        785,
                        788,
                        789,
                        790,
                        791,
                        792,
                        797,
                        801,
                        804,
                        805,
                        806,
                        807,
                        808,
                        821,
                        824,
                        827,
                        828,
                        829,
                        830,
                        847,
                        850,
                        851,
                        852,
                        853,
                        863,
                        872,
                        879,
                        885,
                        886,
                        894,
                        895,
                        912,
                        913,
                        923,
                        924,
                        952,
                        954,
                        976,
                        979
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(ByteSource)')": [
                        143
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(byte)')": [
                        190
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getMetadata(File)')": [
                        238
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageInfo(ByteSource,Map)')": [
                        305
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageInfo(ByteSource)')": [
                        323
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getAllBufferedImages(File)')": [
                        484
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        507
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageSize(byte)')": [
                        595
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getImageSize(File)')": [
                        626
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getICCProfileBytes(byte)')": [
                        699
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getICCProfileBytes(File)')": [
                        734
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'dumpImageFile(byte)')": [
                        793
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'dumpImageFile(File)')": [
                        809
                    ]
                }
            }
        }
    },
    "348af04c6fcdfec0876381efac527196e3e7f10a": {
        "authored_data": "2013 Nov 27 14:38",
        "commit.message": "Hide the internal ICNS classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546049 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "c262d207d6b24c790ac481e188ca2a0fc37a09a6",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode1BPPImage(IcnsType,byte,ImageBuilder)')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode4BPPImage(IcnsType,byte,ImageBuilder)')": [
                        113,
                        114
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode8BPPImage(IcnsType,byte,ImageBuilder)')": [
                        131,
                        132
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode32BPPImage(IcnsType,byte,ImageBuilder)')": [
                        141,
                        142
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'apply1BPPMask(byte,ImageBuilder)')": [
                        154,
                        155,
                        166,
                        167,
                        184,
                        185
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        200,
                        201,
                        210,
                        253,
                        254,
                        276,
                        277,
                        286,
                        287
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode1BPPImage(IcnsType,byte,ImageBuilder)')": [
                        89
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode4BPPImage(IcnsType,byte,ImageBuilder)')": [
                        112
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode8BPPImage(IcnsType,byte,ImageBuilder)')": [
                        129
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decode32BPPImage(IcnsType,byte,ImageBuilder)')": [
                        138
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'apply1BPPMask(byte,ImageBuilder)')": [
                        150,
                        161,
                        178
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsDecoder', 'decodeAllImages(IcnsImageParser)')": [
                        193,
                        202,
                        245,
                        267,
                        276
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsType.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "c262d207d6b24c790ac481e188ca2a0fc37a09a6": {
        "authored_data": "2013 Nov 27 14:22",
        "commit.message": "Removed the unimplemented ImageParser.embedICCProfile() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546045 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "24b4bdae178d1624ac6d9950e6bac89664d7c682",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        871,
                        872,
                        873,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'embedICCProfile(File,File,byte)')": [
                        882
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'embedICCProfile(File,File,byte)')": [
                        550,
                        551
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', None)": [
                        552,
                        553,
                        554
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', None)": [
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'embedICCProfile(File,File,byte)')": [
                        79,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'embedICCProfile(File,File,byte)')": [
                        505,
                        506
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', None)": [
                        507,
                        508,
                        509
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'embedICCProfile(File,File,byte)')": [
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', None)": [
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'embedICCProfile(File,File,byte)')": [
                        80,
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', None)": [
                        635,
                        636,
                        637
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'embedICCProfile(File,File,byte)')": [
                        638,
                        639
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'embedICCProfile(File,File,byte)')": [
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'embedICCProfile(File,File,byte)')": [
                        286,
                        287
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', None)": [
                        288,
                        289,
                        290
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'embedICCProfile(File,File,byte)')": [
                        224,
                        225
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', None)": [
                        226,
                        227,
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', None)": [
                        445,
                        446,
                        447
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'embedICCProfile(File,File,byte)')": [
                        448,
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeImageParser.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImageParser', 'embedICCProfile(File,File,byte)')": [
                        156,
                        157
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImageParser', None)": [
                        158,
                        159,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tga/TgaImageParser.java": {
                "old": {
                    "(None, None)": [
                        246,
                        247,
                        248,
                        249,
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'embedICCProfile(File,File,byte)')": [
                        122,
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'embedICCProfile(File,File,byte)')": [
                        71,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'embedICCProfile(File,File,byte)')": [
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'embedICCProfile(File,File,byte)')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        138,
                        139,
                        140
                    ]
                }
            }
        }
    },
    "24b4bdae178d1624ac6d9950e6bac89664d7c682": {
        "authored_data": "2013 Nov 27 13:02",
        "commit.message": "Turned IcnsType into an enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546023 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "59cb7cc57f42a6884cf1cc4bdf497be6fe1361ad",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsType.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsType', None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        28,
                        29,
                        30,
                        32,
                        33,
                        34,
                        35,
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        53,
                        55
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsType', 'typeAsInt(String)')": [
                        177,
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25,
                        27,
                        28,
                        29,
                        30,
                        31,
                        33,
                        34,
                        35,
                        36,
                        37,
                        39,
                        40,
                        41,
                        42,
                        43,
                        45,
                        46,
                        48,
                        50,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        178,
                        179,
                        180,
                        181
                    ]
                }
            }
        }
    },
    "59cb7cc57f42a6884cf1cc4bdf497be6fe1361ad": {
        "authored_data": "2013 Nov 27 12:53",
        "commit.message": "Made ICNS_MAGIC package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1546017 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Emmanuel Bourg",
        "pcid": "a0ea11fb783d14ee3565a1599cd4a4a801773d23",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        44
                    ]
                }
            }
        }
    }
}