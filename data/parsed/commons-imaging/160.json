{
    "8da56adc67b6a934b7a75526d0fad52457d49fa0": {
        "authored_data": "2021 May 12 20:19",
        "commit.message": "[IMAGING-305] Replace Collections.sort with list.sort.\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "678ffcc332ffe3c742a8f5184b268121387272e8",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegPhotoshopMetadata.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffContents.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'dissect')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'dissect')": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PhotometricInterpreterFloat.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', None)": [
                        162,
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PhotometricInterpreterFloat', None)": [
                        161,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'combineUserExifIntoFinalExif(TiffOutputSet,TiffOutputSet)')": [
                        608
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'combineUserExifIntoFinalExif(TiffOutputSet,TiffOutputSet)')": [
                        608
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        194,
                        209,
                        215,
                        253
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        194,
                        209,
                        215,
                        253
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'sortFields')": [
                        595
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'sortFields')": [
                        595
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/LongestAxisMedianCut.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'performNextMedianCut(List,boolean)')": [
                        37
                    ],
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'performNextMedianCut(List,boolean)')": [
                        36
                    ],
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        53,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        52,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeQuantizedRgbPalette(BufferedImage,int)')": [
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'makeQuantizedRgbPalette(BufferedImage,int)')": [
                        379
                    ]
                }
            }
        }
    },
    "d06135a1ae3eda4a50f234c056f82381f41ac0c9": {
        "authored_data": "2021 May 12 20:11",
        "commit.message": "[IMAGING-303] Simplify If-else conditions\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "ade7a907261be99345f77af4ddae40c79c68bf1d",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasJpegImageData')": [
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasTiffImageData')": [
                        162,
                        163,
                        164,
                        165,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasJpegImageData')": [
                        150
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'hasTiffImageData')": [
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        663,
                        664,
                        665,
                        666
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        663
                    ]
                }
            }
        }
    }
}