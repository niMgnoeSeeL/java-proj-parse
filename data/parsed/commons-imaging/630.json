{
    "fa201df06edefd329610d210d67caba6802b1211": {
        "authored_data": "2018 Feb 20 04:39",
        "commit.message": "Parse header values in XBM files as C integer literals, allowing\nhexadecimal and octal values too.\n\nOther cleanups like making methods static and better exception\nmessages.\n\nPatch by: me\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "8cf2b128010edabf2e6afb2cf1063a2137f69385",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        153,
                        155,
                        157,
                        159
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        189
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'randomName')": [
                        305
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'toPrettyHex(int)')": [
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        153,
                        155,
                        157,
                        159
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        176,
                        190,
                        191
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseCIntegerLiteral(String)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        205
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'randomName')": [
                        321
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'toPrettyHex(int)')": [
                        336
                    ]
                }
            }
        }
    },
    "8cf2b128010edabf2e6afb2cf1063a2137f69385": {
        "authored_data": "2018 Feb 19 04:51",
        "commit.message": "Allow writing PCX files with 1 plane and a bitdepth of 2.\n\nPatch by: me\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "6228007aa81fb62e4c90e11d3a3efccf35f2df93",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeImage(BufferedImage,OutputStream)')": [
                        145,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writeImage(BufferedImage,OutputStream)')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxWriter', 'writePixels(BufferedImage,int,int,int,SimplePalette,BinaryOutputStream)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290
                    ]
                }
            }
        }
    },
    "6228007aa81fb62e4c90e11d3a3efccf35f2df93": {
        "authored_data": "2018 Feb 10 09:39",
        "commit.message": "IMAGING-215: prevent ArrayIndexOutOfBoundsException when creating Huffman table\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "7e7f96857df999175bb614732e13272a82f7962a",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        80,
                        81,
                        82
                    ]
                }
            }
        }
    },
    "0a61492fda0e82b0c01602e689f238051f9106ee": {
        "authored_data": "2018 Jan 02 00:31",
        "commit.message": "IMAGING-214: avoid code execution unless/until it is needed\n",
        "commit.author.name": "Dave Brosius",
        "pcid": "51880b788df7130a1b6871559709b852379fbd8f",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        397,
                        398
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readImageContents(InputStream,FormatCompliance,boolean)')": [
                        400
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        650
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        651
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        447,
                        448
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        469
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        324,
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        324,
                        348
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        190,
                        191,
                        192,
                        193
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            }
        }
    },
    "51880b788df7130a1b6871559709b852379fbd8f": {
        "authored_data": "2018 Jan 02 00:09",
        "commit.message": "IMAGING-213: presize collections where possible\n",
        "commit.author.name": "Dave Brosius",
        "pcid": "7862d6028dafff8cd2b117b1cae0525ca655ba20",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'getAllBufferedImages(ByteSource)')": [
                        590
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'getAllBufferedImages(ByteSource)')": [
                        593
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        793
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        795
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChunkTypes(InputStream)')": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        395,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChunkTypes(InputStream)')": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        395,
                        396,
                        397
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        730
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        730
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        231
                    ]
                }
            }
        }
    },
    "7862d6028dafff8cd2b117b1cae0525ca655ba20": {
        "authored_data": "2018 Jan 01 20:51",
        "commit.message": "IMAGING-212: use StandardCharsets to avoid reflection and UnsupportedEncodingExceptions\n",
        "commit.author.name": "Dave Brosius",
        "pcid": "4701b96281124b9ccd6ecd35c3f16aa73345f315",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readBlocks(GifHeaderInfo,InputStream,boolean,FormatCompliance)')": [
                        293
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        511
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        873
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readBlocks(GifHeaderInfo,InputStream,boolean,FormatCompliance)')": [
                        293
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        511
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        873
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsType.java": {
                "old": {
                    "(None, None)": [
                        19,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        190,
                        191,
                        192,
                        193,
                        194
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        169,
                        185
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        799,
                        800,
                        801,
                        802
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        799
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        233
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        436,
                        437
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        234
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        437,
                        438
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/App14Segment.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpParser.java": {
                "old": {
                    "(None, None)": [
                        20,
                        50
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParser', 'parseXmpJpegSegment(byte)')": [
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpParser', 'parseXmpJpegSegment(byte)')": [
                        45,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ChunkType.java": {
                "old": {
                    "(None, None)": [
                        19,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkiTXt(OutputStream,PngText)')": [
                        137,
                        144,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkzTXt(OutputStream,PngText)')": [
                        168,
                        175
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunktEXt(OutputStream,PngText)')": [
                        192,
                        196
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'isValidISO_8859_1(String)')": [
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        218
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkXmpiTXt(OutputStream,String)')": [
                        227,
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkSCAL(OutputStream,double,double,byte)')": [
                        304,
                        305,
                        306,
                        307
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkiTXt(OutputStream,PngText)')": [
                        137,
                        144,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkzTXt(OutputStream,PngText)')": [
                        168,
                        175
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunktEXt(OutputStream,PngText)')": [
                        192,
                        196
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'isValidISO_8859_1(String)')": [
                        212,
                        213
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkXmpiTXt(OutputStream,String)')": [
                        222,
                        231,
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkSCAL(OutputStream,double,double,byte)')": [
                        299,
                        300,
                        301,
                        302
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccp.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkItxt.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkItxt', None)": [
                        55,
                        77,
                        85,
                        95,
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkItxt', None)": [
                        56,
                        78,
                        86,
                        96,
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkScal.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', None)": [
                        45,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', None)": [
                        46,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkText.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkText', None)": [
                        39,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkText', None)": [
                        40,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkZtxt.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkZtxt', None)": [
                        44,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkZtxt', None)": [
                        45,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PamWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PamWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        40,
                        43,
                        46,
                        49,
                        52,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PamWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        41,
                        44,
                        47,
                        50,
                        53,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PbmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PbmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        44,
                        47,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PbmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        45,
                        48,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PgmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        46,
                        49,
                        52,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        47,
                        50,
                        53,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PpmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        46,
                        49,
                        52,
                        67,
                        70,
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        47,
                        50,
                        53,
                        68,
                        71,
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/ImageResourceBlock.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlock', 'getName')": [
                        34,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.psd#ImageResourceBlock', 'getName')": [
                        34,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "(None, None)": [
                        32,
                        737
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        552
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        732,
                        733,
                        734,
                        735,
                        736
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        552
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getXmpXml(ByteSource,Map)')": [
                        732,
                        733
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getXmpXml(ByteSource,Map)')": [
                        318,
                        319,
                        320,
                        321,
                        322,
                        323
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        324
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getXmpXml(ByteSource,Map)')": [
                        318,
                        319
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAscii.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'getValue(TiffField)')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'writeData(Object,ByteOrder)')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'getValue(TiffField)')": [
                        50,
                        51,
                        52,
                        58,
                        59,
                        60
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAscii', 'writeData(Object,ByteOrder)')": [
                        77,
                        86,
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoAscii.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoAscii', 'getValue(ByteOrder,byte)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoAscii', 'getValue(ByteOrder,byte)')": [
                        48,
                        49,
                        50,
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoGpsText.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoGpsText', 'getValue(TiffField)')": [
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "(None, None)": [
                        184,
                        185
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoGpsText', 'getValue(TiffField)')": [
                        151,
                        152,
                        176,
                        177
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoXpString.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'encodeValue(FieldType,Object,ByteOrder)')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', None)": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'getValue(TiffField)')": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'encodeValue(FieldType,Object,ByteOrder)')": [
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoXpString', 'getValue(TiffField)')": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        483
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        484
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        345,
                        346,
                        347,
                        368,
                        371,
                        374,
                        381,
                        384,
                        387,
                        394
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        346,
                        347,
                        348,
                        369,
                        372,
                        375,
                        382,
                        385,
                        388,
                        395
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        82
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        679,
                        681,
                        684,
                        695,
                        700,
                        703,
                        713,
                        716,
                        720
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        83
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        680,
                        682,
                        685,
                        696,
                        701,
                        704,
                        714,
                        717,
                        721
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTag.java": {
                "old": {
                    "('org.apache.commons.imaging.icc#IccTag', 'dump(PrintWriter,String)')": [
                        92,
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.icc#IccTag', 'dump(PrintWriter,String)')": [
                        93,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTagDataTypes.java": {
                "old": {
                    "(None, None)": [
                        43,
                        94,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        44,
                        95,
                        111
                    ]
                }
            }
        }
    },
    "4701b96281124b9ccd6ecd35c3f16aa73345f315": {
        "authored_data": "2017 Dec 29 11:38",
        "commit.message": "IMAGING-203: JPEG segment size not validated (thanks patch by to Rody Kersten)\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "c5ca63fe3864a0fd7673641d08049741e94a0287",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        83,
                        84,
                        85
                    ]
                }
            }
        }
    },
    "c5ca63fe3864a0fd7673641d08049741e94a0287": {
        "authored_data": "2017 Dec 28 11:58",
        "commit.message": "IMAGING-123: remove duplicated lines found via CPD reports. Thanks to Jens Kapitza\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "40ab2ccf48eca2d8a019e3264187634af8590484",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        244
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_2D(byte,int,int,boolean,int)')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT6(byte,int,int)')": [
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        244,
                        275,
                        276
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT(int,int,int,BitArrayOutputStream,int,int)')": [
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT4_2D(byte,int,int,boolean,int)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT6(byte,int,int)')": [
                        489,
                        490
                    ]
                }
            }
        }
    }
}