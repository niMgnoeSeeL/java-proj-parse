{
    "3bc19753a06cbc21a4f06fe27e782ff988c6eed9": {
        "authored_data": "2012 Feb 05 19:24",
        "commit.message": "Make some internal PNG arrays private.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240779 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "544326e34205377c68b7cf3adeba77d42321f5fa",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/png/ScanExpediterInterlaced.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.png#ScanExpediterInterlaced', None)": [
                        57,
                        60,
                        63,
                        66,
                        69,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.png#ScanExpediterInterlaced', None)": [
                        57,
                        60,
                        63,
                        66,
                        69,
                        72
                    ]
                }
            }
        }
    },
    "544326e34205377c68b7cf3adeba77d42321f5fa": {
        "authored_data": "2012 Feb 05 16:22",
        "commit.message": "Hid formats.jpeg.JpegImageParser.AcceptedExtensions\nand converted icc classes to enums.\n\nJira issue key: SANSELAN-42\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240761 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "1cbf26507fb1f3ef344fb4ffb85925b7a4e96aee",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', None)": [
                        85
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getAcceptedExtensions')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', None)": [
                        85
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getAcceptedExtensions')": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/icc/IccConstants.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/icc/IccProfileParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.icc#IccProfileParser', 'getIccTagType(int)')": [
                        300,
                        301,
                        302
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.icc#IccProfileParser', 'getIccTagType(int)')": [
                        300,
                        301,
                        302,
                        303,
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/icc/IccTag.java": {
                "old": {
                    "('org.apache.commons.sanselan.icc#IccTag', 'getIccTagDataType(int)')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.sanselan.icc#IccTag', 'dump(PrintWriter,String)')": [
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.icc#IccTag', 'getIccTagDataType(int)')": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.sanselan.icc#IccTag', 'dump(PrintWriter,String)')": [
                        120
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/icc/IccTagDataType.java": {
                "old": {
                    "('org.apache.commons.sanselan.icc#IccTagDataType', None)": [
                        23,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.sanselan.icc#IccTagDataType', 'dump(String,byte)')": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25,
                        26,
                        27,
                        28,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/icc/IccTagType.java": {
                "old": {
                    "('org.apache.commons.sanselan.icc#IccTagType', None)": [
                        19,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ],
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        21,
                        22,
                        23
                    ]
                }
            }
        }
    },
    "1cbf26507fb1f3ef344fb4ffb85925b7a4e96aee": {
        "authored_data": "2012 Feb 05 07:47",
        "commit.message": "Converted most collections to use generics,\nconverted all Comparable and Comparator instances to use generics,\nand dropped most casts.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240671 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "296abe940c39150a9531ef881055bc56f8c7d31c",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/JpegImageMetadata.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnailData')": [
                        96
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnail')": [
                        129
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getRawImageData')": [
                        154
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getItems')": [
                        167,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnailData')": [
                        96
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnail')": [
                        129
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getRawImageData')": [
                        154
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageMetadata', 'getItems')": [
                        167,
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        481,
                        510
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        480,
                        509
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        120
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        359
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        120
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        359
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        422
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeXmpSegments(List)')": [
                        235
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removePhotoshopApp13Segments(List)')": [
                        240
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'findPhotoshopApp13Segments(List)')": [
                        245
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeExifSegments(List)')": [
                        250
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter)')": [
                        255
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        260,
                        261,
                        265,
                        269
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        308,
                        309,
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeXmpSegments(List)')": [
                        235
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removePhotoshopApp13Segments(List)')": [
                        240
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'findPhotoshopApp13Segments(List)')": [
                        245
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeExifSegments(List)')": [
                        250
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter)')": [
                        255
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        260,
                        261,
                        265,
                        269
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        308,
                        309,
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        490
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffContents.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffContents', 'getElements')": [
                        38,
                        40
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffContents', 'dissect(boolean)')": [
                        84,
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffContents', 'getElements')": [
                        38,
                        40
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffContents', 'dissect(boolean)')": [
                        84,
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        196,
                        206
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffDirectory', 'getTiffRawImageDataElements')": [
                        214
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffDirectory', 'getRawImageDataElements(TiffField,TiffField)')": [
                        196,
                        206
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffDirectory', 'getTiffRawImageDataElements')": [
                        214
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffElement.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffElement', None)": [
                        39,
                        41,
                        43,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffElement', None)": [
                        39,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffImageMetadata.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', None)": [
                        131
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getDirectories')": [
                        188
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getItems')": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        230
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'findField(TagInfo,boolean)')": [
                        263
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'findDirectory(int)')": [
                        312
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', None)": [
                        131
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getDirectories')": [
                        188
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getItems')": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        230
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'findField(TagInfo,boolean)')": [
                        263
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'findDirectory(int)')": [
                        312
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        325
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        420
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.sanselan.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        421
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffReader', 'getTiffRawImageData(ByteSource,TiffDirectory)')": [
                        467,
                        471,
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff#TiffReader', 'getTiffRawImageData(ByteSource,TiffDirectory)')": [
                        467,
                        471
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/write/TiffImageWriterLossless.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff')": [
                        122,
                        132,
                        182
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        227,
                        252
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', None)": [
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        283,
                        289,
                        316
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,int)')": [
                        414
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff')": [
                        122,
                        132,
                        182
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'write(OutputStream,TiffOutputSet)')": [
                        227,
                        252
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', None)": [
                        263,
                        264,
                        265,
                        266,
                        271,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        279,
                        285,
                        312
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,int)')": [
                        410
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/write/TiffImageWriterLossy.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'write(OutputStream,TiffOutputSet)')": [
                        43
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'updateOffsetsStep(List)')": [
                        54,
                        60
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'writeStep(BinaryOutputStream,List)')": [
                        71,
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'write(OutputStream,TiffOutputSet)')": [
                        43
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'updateOffsetsStep(List)')": [
                        54,
                        60
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffImageWriterLossy', 'writeStep(BinaryOutputStream,List)')": [
                        71,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/write/TiffOutputDirectory.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', None)": [
                        40
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'getFields')": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'sortFields')": [
                        99,
                        100,
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        191,
                        284,
                        290
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', None)": [
                        40
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'getFields')": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'sortFields')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        188,
                        281,
                        287
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/tiff/write/TiffOutputSet.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputSet', 'toString(String)')": [
                        311
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.sanselan.formats.tiff.write#TiffOutputSet', 'toString(String)')": [
                        311
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/palette/ColorSpaceSubset.java": {
                "old": {
                    "('org.apache.commons.sanselan.palette#ColorSpaceSubset', None)": [
                        19
                    ],
                    "('org.apache.commons.sanselan.palette#ColorSpaceSubset', 'compareTo(Object)')": [
                        165,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.palette#ColorSpaceSubset', None)": [
                        19
                    ],
                    "('org.apache.commons.sanselan.palette#ColorSpaceSubset', 'compareTo(ColorSpaceSubset)')": [
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/util/Debug.java": {
                "old": {
                    "('org.apache.commons.sanselan.util#Debug', 'getDebug(String,java)')": [
                        161
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.util#Debug', 'getDebug(String,java)')": [
                        161
                    ]
                }
            }
        }
    },
    "296abe940c39150a9531ef881055bc56f8c7d31c": {
        "authored_data": "2012 Feb 04 13:50",
        "commit.message": "Added generic collections for all JPEG classes.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240502 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "58314f54276491a430a9aa482a8f0bab72fab15d",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean,boolean)')": [
                        113,
                        117
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        196
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'assembleSegments(List,boolean)')": [
                        207,
                        213
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'dumpSegments(List)')": [
                        267
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean)')": [
                        282
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        291,
                        297,
                        304,
                        305,
                        306,
                        307,
                        310
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        343,
                        344,
                        345,
                        351,
                        352,
                        353,
                        354
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', None)": [
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'filterSegments(List,List)')": [
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getExifRawData(ByteSource)')": [
                        392,
                        398
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        566,
                        608
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getPhotoshopMetadata(ByteSource,Map)')": [
                        614
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getImageSize(ByteSource,Map)')": [
                        642
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        678,
                        694,
                        808,
                        809
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        1042
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean,boolean)')": [
                        113,
                        117
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        196
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'assembleSegments(List,boolean)')": [
                        207,
                        213
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'dumpSegments(List)')": [
                        267
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'readSegments(ByteSource,int,boolean)')": [
                        282
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        291,
                        294,
                        304,
                        305,
                        306,
                        309
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        342,
                        343,
                        344
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getExifRawData(ByteSource)')": [
                        375,
                        381
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getXmpXml(ByteSource,Map)')": [
                        549,
                        591
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getPhotoshopMetadata(ByteSource,Map)')": [
                        597
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getImageSize(ByteSource,Map)')": [
                        625
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        661,
                        677,
                        791,
                        792
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        1025
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', None)": [
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'analyzeJFIF(ByteSource)')": [
                        148,
                        149
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'removeExifMetadata(ByteSource,OutputStream)')": [
                        269
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        362
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossy(ByteSource,OutputStream,TiffOutputSet)')": [
                        456
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        467
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', None)": [
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'analyzeJFIF(ByteSource)')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'removeExifMetadata(ByteSource,OutputStream)')": [
                        270
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossless(ByteSource,OutputStream,TiffOutputSet)')": [
                        363
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'updateExifMetadataLossy(ByteSource,OutputStream,TiffOutputSet)')": [
                        457
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        468
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/segments/App2Segment.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.segments#App2Segment', None)": [
                        26
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.segments#App2Segment', 'compareTo(Object)')": [
                        67,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.segments#App2Segment', None)": [
                        26
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.segments#App2Segment', 'compareTo(App2Segment)')": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/xmp/JpegXmpRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegXmpRewriter', 'removeXmpXml(ByteSource,OutputStream)')": [
                        113
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        188,
                        191
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegXmpRewriter', 'removeXmpXml(ByteSource,OutputStream)')": [
                        113
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegXmpRewriter', 'updateXmpXml(ByteSource,OutputStream,String)')": [
                        188,
                        191
                    ]
                }
            }
        }
    },
    "58314f54276491a430a9aa482a8f0bab72fab15d": {
        "authored_data": "2012 Feb 04 10:34",
        "commit.message": "More conversion to generic types for IPTC classes.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240483 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "e290f202587fc69b02e019413696b47a24d5ab80",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream)')": [
                        120,
                        121,
                        126
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'writeIPTC(ByteSource,OutputStream,PhotoshopApp13Data)')": [
                        223,
                        224,
                        229,
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream)')": [
                        120,
                        121,
                        126
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'writeIPTC(ByteSource,OutputStream,PhotoshopApp13Data)')": [
                        223,
                        224,
                        229,
                        233
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', None)": [
                        55,
                        58
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'analyzeJFIF(ByteSource)')": [
                        174
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeXmpSegments(List)')": [
                        235
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removePhotoshopApp13Segments(List)')": [
                        240
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'findPhotoshopApp13Segments(List)')": [
                        245
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeExifSegments(List)')": [
                        250
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter)')": [
                        255
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        260,
                        263,
                        267
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        279,
                        280
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        304,
                        305,
                        310,
                        319,
                        327
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        332,
                        333,
                        341
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', None)": [
                        55,
                        58
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'analyzeJFIF(ByteSource)')": [
                        174
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeXmpSegments(List)')": [
                        235
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removePhotoshopApp13Segments(List)')": [
                        240
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'findPhotoshopApp13Segments(List)')": [
                        245
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'removeExifSegments(List)')": [
                        250
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter)')": [
                        255
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        260,
                        261,
                        262,
                        265,
                        269
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertBeforeFirstAppSegments(List,List)')": [
                        281,
                        282,
                        283,
                        284
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'insertAfterLastAppSegments(List,List)')": [
                        308,
                        309,
                        310,
                        311,
                        316,
                        325,
                        333
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        338,
                        339,
                        340,
                        341,
                        349
                    ]
                }
            }
        }
    },
    "e290f202587fc69b02e019413696b47a24d5ab80": {
        "authored_data": "2012 Feb 04 09:21",
        "commit.message": "API immutability changes and Java 1.5 updates.\n\nDeleted the unused legacy IptcConstants.IPTC_PREFIX array\n(= IPTC_RECORD_TAG_MARKER + IPTC_APPLICATION_2_RECORD_NUMBER).\nConverted IptcConstants.IPTC_TYPE_* to an enum.\nMade some collections and classes generic.\n\nSimilar changes will be applied to the whole tree,\nI am just starting here.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1240468 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "d74936d61178e5d9db035a96f35e186fc6bb3f0a",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/common/itu_t4/HuffmanTree.java": {
                "old": {
                    "('org.apache.commons.sanselan.common.itu_t4#HuffmanTree', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.common.itu_t4#HuffmanTree', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/JpegPhotoshopMetadata.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        38,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        39,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcConstants.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        93,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        132,
                        135
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        259,
                        262
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        356
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        389,
                        401,
                        407,
                        410,
                        411,
                        413,
                        414,
                        415,
                        426,
                        431,
                        433,
                        434
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parseIPTCBlock(byte,boolean)')": [
                        132,
                        135
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'parseAllBlocks(byte,boolean,boolean)')": [
                        259,
                        262
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        356
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        389,
                        401,
                        407,
                        410,
                        411,
                        413,
                        424,
                        429,
                        431,
                        432
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcRecord.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcRecord', 'getIptcTypeName')": [
                        42
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcRecord', None)": [
                        45,
                        46,
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcRecord', 'getIptcTypeName')": [
                        42
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcRecord', None)": [
                        45,
                        46,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcType.java": {
                "old": {
                    "(None, None)": [
                        19,
                        40,
                        41
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcType', None)": [
                        21,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        35,
                        36
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcType', 'toString')": [
                        32,
                        33,
                        34
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcType', 'getUnknown(int)')": [
                        37,
                        38,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcTypeLookup.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcTypeLookup', None)": [
                        28,
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcTypeLookup', 'getIptcType(int)')": [
                        38,
                        39,
                        40,
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcTypeLookup', None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcTypeLookup', 'getIptcType(int)')": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream)')": [
                        134,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream)')": [
                        134,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/sanselan/formats/jpeg/iptc/PhotoshopApp13Data.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', None)": [
                        25,
                        26,
                        28
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getRecords')": [
                        34,
                        36
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getRawBlocks')": [
                        39,
                        41
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        44,
                        46,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', None)": [
                        25,
                        26,
                        28
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getRecords')": [
                        34,
                        36
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getRawBlocks')": [
                        39,
                        41
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        44,
                        46,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcDumpTest', 'test')": [
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/sanselan/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcUpdateTest', 'testRemoveInsertUpdate')": [
                        180,
                        181,
                        185,
                        187,
                        231,
                        233,
                        277,
                        279
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcUpdateTest', 'testAddIptcData')": [
                        371,
                        372,
                        378,
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcUpdateTest', 'testRemoveInsertUpdate')": [
                        180,
                        181,
                        185,
                        187,
                        231,
                        233,
                        277,
                        279
                    ],
                    "('org.apache.commons.sanselan.formats.jpeg.iptc#IptcUpdateTest', 'testAddIptcData')": [
                        371,
                        372,
                        378,
                        380
                    ]
                }
            }
        }
    },
    "d74936d61178e5d9db035a96f35e186fc6bb3f0a": {
        "authored_data": "2012 Jan 26 15:07",
        "commit.message": "Fix the GIF BitsPerPixel formula in GifImageParser's getImageInfo().\n\nJira issue key: SANSELAN-62\n\nSubmitted by: Piyush Kapoor <pkapoor at adobe dot com>\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1236225 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "cf4077c062d78fdb2149434ac6255904be532de1",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        603
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.gif#GifImageParser', 'getImageInfo(ByteSource,Map)')": [
                        603
                    ]
                }
            }
        }
    },
    "cf4077c062d78fdb2149434ac6255904be532de1": {
        "authored_data": "2012 Jan 26 08:41",
        "commit.message": "Deal with TIFF files with FillOrder=2.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1236072 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "cc1fa5bf85e89d220651f723b7d554d26a1e36be",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/tiff/datareaders/DataReader.java": {
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.datareaders#DataReader', 'decompress(byte,int,int,int,int)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                }
            }
        }
    },
    "cc1fa5bf85e89d220651f723b7d554d26a1e36be": {
        "authored_data": "2012 Jan 26 08:40",
        "commit.message": "rowsPerStrip is meant to be a 32 bit unsigned integer,\nsince we store it in an int, and real-world TIFF\nfiles use the value 2^32 - 1, it needs to be\npromoted to a long when calculating tile height\nwith it.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1236071 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "29eec6d1f1844f099ae6539313317a0aaecd4658",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/formats/tiff/datareaders/DataReaderStrips.java": {
                "old": {
                    "('org.apache.commons.sanselan.formats.tiff.datareaders#DataReaderStrips', 'readImageData(BufferedImage)')": [
                        88,
                        89,
                        90,
                        91,
                        96,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.formats.tiff.datareaders#DataReaderStrips', 'readImageData(BufferedImage)')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        97,
                        99
                    ]
                }
            }
        }
    },
    "29eec6d1f1844f099ae6539313317a0aaecd4658": {
        "authored_data": "2012 Jan 08 06:44",
        "commit.message": "Deleted a test that's wrong by design.\n\nThe Adobe and Ghostscript formulas for converting\nCMYK to RGB are fundamentally designed to give\ndifferent outputs, it is meaningless to test\nthem against each other and expect the same results.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@1228802 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "72bfba2120d9b29aa57aaf681e4e899e0932448f",
        "changes": {
            "src/main/java/org/apache/commons/sanselan/color/ColorConversions.java": {
                "old": {
                    "('org.apache.commons.sanselan.color#ColorConversions', 'convertCMYKtoRGB_old(int,int,int,int)')": [
                        519
                    ]
                },
                "new": {
                    "('org.apache.commons.sanselan.color#ColorConversions', 'convertCMYtoRGB(ColorCmy)')": [
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.sanselan.color#ColorConversions', 'convertCMYKtoRGB_Adobe(int,int,int,int)')": [
                        525
                    ]
                }
            },
            "src/test/java/org/apache/commons/sanselan/color/ColorConversionsTest.java": {
                "old": {
                    "('org.apache.commons.sanselan.color#ColorConversionsTest', None)": [
                        37,
                        52,
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.sanselan.color#ColorConversionsTest', 'testCMYKtoRGB')": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            }
        }
    }
}