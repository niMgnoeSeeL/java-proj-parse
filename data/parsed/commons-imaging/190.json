{
    "5fce159e9017c5f13f77bf14cc2ec43ae764962f": {
        "authored_data": "2021 Apr 25 13:51",
        "commit.message": "[IMAGING-295] Use 'compare()' method to compare numbers\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "d1d8d1ff6d87349594a6cea0caf2bf4d545e60a4",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffElement.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffElement', None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffElement', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', None)": [
                        77
                    ]
                }
            }
        }
    },
    "de17e9b76b3beb7733cc3ed9d97a16845a444b1f": {
        "authored_data": "2021 Apr 21 09:03",
        "commit.message": "[IMAGING-287] Simplify assertions in tests\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "2b305dfb68187e1fa7180d993e98c94590161b97",
        "changes": {
            "src/test/java/org/apache/commons/imaging/color/ColorCmyTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.color#ColorCmyTest', 'testCreatesColorCmy')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.color#ColorCmyTest', 'testCreatesColorCmy')": [
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/color/ColorHslTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.color#ColorHslTest', 'testCreatesColorHslOne')": [
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.color#ColorHslTest', 'testCreatesColorHslOne')": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        51
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        91,
                        119,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        52
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        92,
                        120,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        60
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetBufferedImage(File,byte)')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageSize(File,byte)')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGuessFormat(File,byte)')": [
                        131,
                        136,
                        139
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetICCProfileBytes(File,byte)')": [
                        149
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        196,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        63
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetBufferedImage(File,byte)')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageSize(File,byte)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGuessFormat(File,byte)')": [
                        134,
                        139,
                        142
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetICCProfileBytes(File,byte)')": [
                        152
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        199,
                        207
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/itu_t4/HuffmanTreeExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTreeExceptionTest', 'testCreatesHuffmanTreeExceptionTakingString')": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#HuffmanTreeExceptionTest', 'testCreatesHuffmanTreeExceptionTakingString')": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpRoundtripTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        160,
                        161
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'compare(int,int)')": [
                        170,
                        173,
                        175,
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        160,
                        161
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'compare(int,int)')": [
                        170,
                        173,
                        175,
                        187
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForSingleImageGif(File)')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testBufferedImagesForSingleImageGif(File)')": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        415,
                        416
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'verify(BufferedImage,int,int)')": [
                        423,
                        426,
                        438
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        416,
                        417
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsRoundTripTest', 'verify(BufferedImage,int,int)')": [
                        424,
                        427,
                        439
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        546,
                        547
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'verify(BufferedImage,int,int)')": [
                        554,
                        557,
                        569
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'writeAndReadImageData(String,byte,int,int)')": [
                        547,
                        548
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoRoundtripTest', 'verify(BufferedImage,int,int)')": [
                        555,
                        558,
                        570
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        133
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        286
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testRemove')": [
                        94
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'testInsert')": [
                        134
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriteTest', 'compare(File,TiffImageMetadata,TiffImageMetadata)')": [
                        287
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData(File)')": [
                        93
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        123
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate(File)')": [
                        155
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate(File)')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testInsert(File)')": [
                        124
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testUpdate(File)')": [
                        156
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'testNoChangeUpdate(File)')": [
                        202
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/segments/App2SegmentTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningTrue')": [
                        38
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningFalse')": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningTrue')": [
                        37
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#App2SegmentTest', 'testEqualsReturningFalse')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        230,
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        230,
                        231
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PnmImageParserTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        66,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        65,
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffCcittTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Compressions')": [
                        66,
                        80,
                        94,
                        108,
                        122,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        172,
                        186,
                        200,
                        214,
                        228,
                        241
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Compressions')": [
                        66,
                        80,
                        94,
                        108,
                        122,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        172,
                        186,
                        200,
                        214,
                        228,
                        241
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/floatingpoint/PaletteEntryForValueTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetColor')": [
                        82,
                        84,
                        87,
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters.floatingpoint#PaletteEntryForValueTest', 'testGetColor')": [
                        84,
                        86,
                        89,
                        91
                    ]
                }
            }
        }
    },
    "5259f0fadd4341d144db26fc9c5910b166a2d72b": {
        "authored_data": "2021 Apr 21 09:26",
        "commit.message": "[IMAGING-288] Java 8 improvements:\n\n* Use method reference\n* Replace statement with lambda\n* Use Map.computeIfAbsent\n* Use map.merge\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "0c9533a8656814b78f1f3c8624ef66902a4a4d5b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffTags.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        87,
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        98
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'testGetInputStreamThrowsNullPointerException')": [
                        76,
                        77
                    ],
                    "(None, None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'testGetInputStreamThrowsNullPointerException')": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParserTest', 'testImageForNegativeArraySizeException')": [
                        60,
                        61
                    ],
                    "(None, None)": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParserTest', 'testImageForNegativeArraySizeException')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testMetaData(File)')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', 'testMetaData(File)')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageMetadata(File)')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', 'testImageMetadata(File)')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testMetadata(File)')": [
                        56,
                        57
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testMetadata(File)')": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageMetadata(File)')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', None)": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', 'testImageMetadata(File)')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testMetadata(File)')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        45,
                        54
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testImageInfo(File)')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testMetadata(File)')": [
                        43
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', 'testImageInfo(File)')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegWithInvalidDhtSegmentTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegWithInvalidDhtSegmentTest', 'testSingleImage')": [
                        41,
                        42
                    ],
                    "(None, None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegWithInvalidDhtSegmentTest', 'testSingleImage')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoderTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        42,
                        43
                    ],
                    "(None, None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoderTest', 'testDecodeBadFile')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionOne')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', None)": [
                        38
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionTwo')": [
                        47,
                        48
                    ],
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionOne')": [
                        36
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegInputStreamTest', 'testNextBitThrowsImageReadExceptionTwo')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWithInvalidPngChunkSizeTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWithInvalidPngChunkSizeTest', 'testPngWithInvalidPngChunkSize')": [
                        47,
                        48
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWithInvalidPngChunkSizeTest', None)": [
                        49
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWithInvalidPngChunkSizeTest', 'testPngWithInvalidNegativePngChunkSize')": [
                        62,
                        63
                    ],
                    "(None, None)": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWithInvalidPngChunkSizeTest', 'testPngWithInvalidPngChunkSize')": [
                        47
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWithInvalidPngChunkSizeTest', 'testPngWithInvalidNegativePngChunkSize')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testErrorOnNoProfileName')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', None)": [
                        47
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        79,
                        80,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testErrorOnNoProfileName')": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccpTest', 'testParsingIccpChunk')": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/chunks/PngChunkScalTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_InvalidUnitSpecifier')": [
                        51,
                        52
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', None)": [
                        53,
                        60,
                        67,
                        74
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingSeparator')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_InvalidDblValue')": [
                        65,
                        66
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingXValue')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingYValue')": [
                        79,
                        80
                    ],
                    "(None, None)": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_InvalidUnitSpecifier')": [
                        51
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingSeparator')": [
                        56
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_InvalidDblValue')": [
                        61
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingXValue')": [
                        66
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScalTest', 'testConstruct_MissingYValue')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PgmFileInfoTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testCreateThrowsImageReadExceptionOne')": [
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', None)": [
                        31,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testCreateThrowsImageReadExceptionTwo')": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testCreateThrowsImageReadExceptionOne')": [
                        29
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PgmFileInfoTest', 'testCreateThrowsImageReadExceptionTwo')": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PnmImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidWidth')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', None)": [
                        91,
                        101
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidHeight')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_missingWidthValue')": [
                        109,
                        110
                    ],
                    "(None, None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidWidth')": [
                        89
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidHeight')": [
                        97
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_missingWidthValue')": [
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PpmFileInfoTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PpmFileInfoTest', 'testCreatesPpmFileInfoOne')": [
                        32,
                        33
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PpmFileInfoTest', None)": [
                        34
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PpmFileInfoTest', 'testCreatesPpmFileInfoThree')": [
                        39,
                        40
                    ],
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PpmFileInfoTest', 'testCreatesPpmFileInfoOne')": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PpmFileInfoTest', 'testCreatesPpmFileInfoThree')": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/rgbe/RgbeReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeReadTest', 'testErrorDecompressingInvalidFile')": [
                        71,
                        72
                    ],
                    "(None, None)": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeReadTest', 'testErrorDecompressingInvalidFile')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeAsciiTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndCallsWriteData')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeAsciiTest', 'testCreatesFieldTypeAsciiAndCallsWriteData')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeByteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeByteTest', 'testWriteDataWithNull')": [
                        32,
                        33
                    ],
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeByteTest', 'testWriteDataWithNull')": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/fieldtypes/FieldTypeRationalTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNonNull')": [
                        47,
                        48
                    ],
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.fieldtypes#FieldTypeRationalTest', 'testWriteDataWithNonNull')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreterLogLuvTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelNullSamples')": [
                        93,
                        94
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', None)": [
                        95,
                        102
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelEmptySamples')": [
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelNullSamples')": [
                        93
                    ],
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreterLogLuvTest', 'testInterpretPixelEmptySamples')": [
                        98
                    ]
                }
            }
        }
    }
}