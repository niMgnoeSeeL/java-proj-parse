{
    "418b3444ca7171127b632cd0e4c4de93fd4f3a2b": {
        "authored_data": "2013 Oct 24 18:45",
        "commit.message": "Propagate exceptions from close() methods instead of swallowing and/or logging them.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535496 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "37dd278fdbf470e31e7292b788439c45c700a197",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "(None, None)": [
                        52
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        579,
                        580,
                        581,
                        582,
                        583
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageParser', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        578
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        303,
                        304,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.imaging#Imaging', None)": [
                        308,
                        309
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,File,ImageFormat,Map)')": [
                        1406,
                        1407,
                        1408,
                        1409,
                        1410,
                        1411
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        302
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,File,ImageFormat,Map)')": [
                        1399,
                        1400
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/ZLibUtils.java": {
                "old": {
                    "('org.apache.commons.imaging.common#ZLibUtils', 'deflate(byte)')": [
                        35,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#ZLibUtils', 'deflate(byte)')": [
                        35,
                        36,
                        37,
                        38,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceFile.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getBlock(long,int)')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', None)": [
                        71
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getBlock(long,int)')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        88,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT6(byte,int,int)')": [
                        587,
                        588
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        590,
                        591
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'compressT6(byte,int,int)')": [
                        587,
                        588,
                        590,
                        591
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', None)": [
                        592
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readBmpHeaderInfo(ByteSource,boolean)')": [
                        509,
                        510,
                        511,
                        512,
                        513,
                        514
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', None)": [
                        515,
                        516,
                        730
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        617,
                        618,
                        619,
                        620,
                        621
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getFormatCompliance(ByteSource)')": [
                        706,
                        707,
                        708,
                        709,
                        710
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        726,
                        727,
                        728,
                        729
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'readBmpHeaderInfo(ByteSource,boolean)')": [
                        508,
                        509
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', None)": [
                        510
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getImageInfo(ByteSource,Map)')": [
                        611
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getFormatCompliance(ByteSource)')": [
                        696
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        712
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "(None, None)": [
                        44
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAllBufferedImages(ByteSource)')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'readDcxHeader(ByteSource)')": [
                        158,
                        159
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAllBufferedImages(ByteSource)')": [
                        197,
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "(None, None)": [
                        48,
                        1136,
                        1137
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean,FormatCompliance)')": [
                        470,
                        471,
                        472,
                        473,
                        474,
                        475
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', None)": [
                        476,
                        477
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'readFile(ByteSource,boolean,FormatCompliance)')": [
                        469,
                        470
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', None)": [
                        471
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1124,
                        1125
                    ],
                    "(None, None)": [
                        1126
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readImage(ByteSource)')": [
                        260,
                        262,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', 'readImage(ByteSource)')": [
                        259
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readImage(ByteSource)')": [
                        580,
                        581,
                        582,
                        583,
                        584,
                        585
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', None)": [
                        586,
                        587
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', 'readImage(ByteSource)')": [
                        579,
                        580
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', None)": [
                        581
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegUtils.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegUtils', 'traverseJFIF(ByteSource,Visitor)')": [
                        96,
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/exif/ExifRewriter.java": {
                "old": {
                    "(None, None)": [
                        41
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        562,
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', None)": [
                        566
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifRewriter', 'writeSegmentsReplacingExif(OutputStream,List,byte)')": [
                        561
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        313,
                        317,
                        323,
                        324,
                        325,
                        326,
                        327
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', None)": [
                        328,
                        329,
                        330,
                        331
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        313,
                        317,
                        322
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'readPcxHeader(ByteSource)')": [
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        251,
                        252,
                        374,
                        375,
                        538,
                        539
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'read256ColorPaletteFromEndOfFile(ByteSource)')": [
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        535,
                        536,
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'readPcxHeader(ByteSource)')": [
                        248,
                        249
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'read256ColorPaletteFromEndOfFile(ByteSource)')": [
                        368,
                        369
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        529,
                        530
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "(None, None)": [
                        49,
                        50,
                        51,
                        62
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'hasChuckType(ByteSource,int)')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(ByteSource,int,boolean)')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        48,
                        53
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'hasChuckType(ByteSource,int)')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'readChunks(ByteSource,int,boolean)')": [
                        243,
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "(None, None)": [
                        42
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(ByteSource)')": [
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(ByteSource)')": [
                        192,
                        193
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        310,
                        311
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "(None, None)": [
                        48
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readHeader(ByteSource)')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', None)": [
                        97,
                        98,
                        273,
                        274,
                        444,
                        445
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(ByteSource,int,int)')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getInputStream(ByteSource,int)')": [
                        344,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getData(ByteSource,int)')": [
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(ByteSource)')": [
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        763,
                        764
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readHeader(ByteSource)')": [
                        90,
                        91
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', None)": [
                        92,
                        263,
                        421
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageResourceBlocks(ByteSource,int,int)')": [
                        261,
                        262
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getInputStream(ByteSource,int)')": [
                        333
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getData(ByteSource,int)')": [
                        401,
                        402,
                        403
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'readImageContents(ByteSource)')": [
                        419,
                        420
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        733,
                        734,
                        735
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeInfo.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'close')": [
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', None)": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeInfo', 'close')": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readTiffHeader(ByteSource,FormatCompliance)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        287,
                        288,
                        289,
                        290,
                        291,
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readTiffHeader(ByteSource,FormatCompliance)')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,long,int,FormatCompliance,Listener,boolean,List)')": [
                        282,
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'readWbmpHeader(ByteSource)')": [
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        172,
                        173,
                        235,
                        236
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        232,
                        233,
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'readWbmpHeader(ByteSource)')": [
                        169,
                        170
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        229,
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        187,
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'parseXbmHeader(ByteSource)')": [
                        184,
                        185
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        61,
                        63,
                        64,
                        65,
                        66,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        101,
                        102,
                        275,
                        276
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseXpmHeader(ByteSource)')": [
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseColor(String)')": [
                        368,
                        369,
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'loadColorNames')": [
                        60,
                        62,
                        63,
                        64,
                        66,
                        67,
                        69,
                        70,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        92,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseXpmHeader(ByteSource)')": [
                        269,
                        270
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'parseColor(String)')": [
                        362
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccTag.java": {
                "old": {
                    "('org.apache.commons.imaging.icc#IccTag', 'setData(byte)')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.imaging.icc#IccTag', None)": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.icc#IccTag', 'setData(byte)')": [
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/util/IoUtils.java": {
                "old": {
                    "('org.apache.commons.imaging.util#IoUtils', 'copyFileNio(File,File)')": [
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'copyStreamToStream(InputStream,OutputStream,boolean)')": [
                        106,
                        107,
                        110,
                        111,
                        112,
                        113,
                        114,
                        117,
                        118
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'getFileBytes(File)')": [
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'getInputStreamBytes(InputStream)')": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'putInputStreamToFile(InputStream,File)')": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'writeToFile(byte,File)')": [
                        221,
                        222,
                        223,
                        224,
                        225,
                        226
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', None)": [
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.util#IoUtils', 'copyFileNio(File,File)')": [
                        66,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'copyStreamToStream(InputStream,OutputStream,boolean)')": [
                        109,
                        110,
                        111,
                        113,
                        114,
                        116,
                        117,
                        118,
                        120,
                        121,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'getFileBytes(File)')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'getInputStreamBytes(InputStream)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'putInputStreamToFile(InputStream,File)')": [
                        202,
                        203
                    ],
                    "('org.apache.commons.imaging.util#IoUtils', 'writeToFile(byte,File)')": [
                        216,
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        89,
                        90,
                        91,
                        92,
                        127,
                        128
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        129,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        89,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/WriteExifMetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifMetadata(File,File)')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', None)": [
                        51,
                        52,
                        53,
                        154,
                        155,
                        156,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        152,
                        153
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifTag(File,File)')": [
                        240,
                        241,
                        242,
                        245,
                        246
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'setExifGPSTag(File,File)')": [
                        314,
                        315,
                        316,
                        319,
                        320
                    ],
                    "(None, None)": [
                        321,
                        322,
                        323
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifMetadata(File,File)')": [
                        49
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'changeExifMetadata(File,File)')": [
                        148
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'removeExifTag(File,File)')": [
                        234
                    ],
                    "('org.apache.commons.imaging.examples#WriteExifMetadataExample', 'setExifGPSTag(File,File)')": [
                        301
                    ]
                }
            }
        }
    },
    "37dd278fdbf470e31e7292b788439c45c700a197": {
        "authored_data": "2013 Oct 24 00:51",
        "commit.message": "- The static method createInterleavedRaster(int, int, int, int, Point) from the type Raster should be accessed directly.\n- The static method createPackedRaster(int, int, int, int[], Point) from the type Raster should be accessed directly.\n- The static method createInterleavedRaster(int, int, int, int, Point) from the type Raster should be accessed directly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535250 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "3eee6c0b5bf83a43479d04887d1854d524874067",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'readXpmImage(XpmHeader,BasicCParser)')": [
                        534,
                        547,
                        554
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', 'readXpmImage(XpmHeader,BasicCParser)')": [
                        535,
                        548,
                        555
                    ]
                }
            }
        }
    },
    "3eee6c0b5bf83a43479d04887d1854d524874067": {
        "authored_data": "2013 Oct 24 00:50",
        "commit.message": "The static method createPackedRaster(DataBuffer, int, int, int, Point) from the type Raster should be accessed directly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535249 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "3d9fc10935bbbca65e7db117139b4025411fd1c8",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        290
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        291
                    ]
                }
            }
        }
    },
    "3d9fc10935bbbca65e7db117139b4025411fd1c8": {
        "authored_data": "2013 Oct 24 00:49",
        "commit.message": "The static method createPackedRaster(DataBuffer, int, int, int, Point) from the type Raster should be accessed directly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535248 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "74bbfe166888670edc1955fc87bff9dad0edf391",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'readImage(WbmpHeader,InputStream)')": [
                        213
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', 'readImage(WbmpHeader,InputStream)')": [
                        214
                    ]
                }
            }
        }
    },
    "74bbfe166888670edc1955fc87bff9dad0edf391": {
        "authored_data": "2013 Oct 24 00:48",
        "commit.message": "The declared exception ImageWriteException is not actually thrown by the method encodeValue(ByteOrder, short...) from type TagInfoSShort.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535247 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "2e74b049db1b7f5040a97c05c5357678c44585ae",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSShort.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShort', 'encodeValue(ByteOrder,short)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSShort', 'encodeValue(ByteOrder,short)')": [
                        33
                    ]
                }
            }
        }
    },
    "2e74b049db1b7f5040a97c05c5357678c44585ae": {
        "authored_data": "2013 Oct 24 00:36",
        "commit.message": "The declared exception ImageWriteException is not actually thrown by the method encodeValue(ByteOrder, int...) from type TagInfoSLong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535244 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "cee67126a7859cb615e84041e07c111874d62376",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoSLong.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSLong', 'encodeValue(ByteOrder,int)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoSLong', 'encodeValue(ByteOrder,int)')": [
                        33
                    ]
                }
            }
        }
    },
    "cee67126a7859cb615e84041e07c111874d62376": {
        "authored_data": "2013 Oct 24 00:36",
        "commit.message": "The declared exception ImageWriteException is not actually thrown by the method encodeValue(ByteOrder, float...) from type TagInfoFloat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535243 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "f2f0ef3a616f4154f384ed0e5e9d1fd804ff50dc",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoFloat.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            }
        }
    },
    "f2f0ef3a616f4154f384ed0e5e9d1fd804ff50dc": {
        "authored_data": "2013 Oct 24 00:36",
        "commit.message": "The declared exception ImageWriteException is not actually thrown by the method encodeValue(ByteOrder, float...) from type TagInfoFloat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535242 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "a67bc739194c92ed4e28e62a50eabcd073a532c7",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoFloat.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoFloat', 'encodeValue(ByteOrder,float)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoFloat', 'encodeValue(ByteOrder,float)')": [
                        34
                    ]
                }
            }
        }
    },
    "a67bc739194c92ed4e28e62a50eabcd073a532c7": {
        "authored_data": "2013 Oct 24 00:35",
        "commit.message": "The declared exception ImageWriteException is not actually thrown by the method encodeValue(ByteOrder, double...) from type TagInfoDouble.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535241 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "cc976bfa016aa18151a1db02bbedf8051d07aa90",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfoDouble.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoDouble', 'encodeValue(ByteOrder,double)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfoDouble', 'encodeValue(ByteOrder,double)')": [
                        33
                    ]
                }
            }
        }
    },
    "cc976bfa016aa18151a1db02bbedf8051d07aa90": {
        "authored_data": "2013 Oct 24 00:35",
        "commit.message": "Inline unused lvar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1535240 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "78a9fbcac7144841fdaaedc0311d3d087fe61f5a",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/taginfos/TagInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfo', 'getValue(TiffField)')": [
                        86,
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.taginfos#TagInfo', 'getValue(TiffField)')": [
                        86
                    ]
                }
            }
        }
    }
}