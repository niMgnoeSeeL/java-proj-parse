{
    "075be6ca7c0ffabc5884b748eca5ab0264b196f1": {
        "authored_data": "2012 Dec 04 04:51",
        "commit.message": "Revert a patch that was committed accidentally.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1416773 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "d7d10030b51f5e77b647b8406ba35bc12554c16b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngConstants.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        252,
                        253,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunk(OutputStream,byte,byte)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkTRNS(OutputStream,Palette)')": [
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        491,
                        494,
                        495,
                        496,
                        503,
                        504,
                        508,
                        509,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        102,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunk(OutputStream,byte,byte)')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        483,
                        484,
                        485,
                        487,
                        488,
                        489,
                        490,
                        491,
                        499,
                        500,
                        504,
                        505,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterIndexedColor.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', 'filter(int,int)')": [
                        34,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', None)": [
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', 'filter(int,int)')": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MedianCutQuantizer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', None)": [
                        94,
                        104,
                        107,
                        118
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,boolean)')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        288,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,boolean)')": [
                        274,
                        275,
                        276,
                        277,
                        285,
                        286,
                        287,
                        288
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', None)": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', None)": [
                        337
                    ]
                }
            }
        }
    },
    "d7d10030b51f5e77b647b8406ba35bc12554c16b": {
        "authored_data": "2012 Dec 04 04:39",
        "commit.message": "Deal with JPEG images with bad block sizes.\n\nJira issue key: IMAGING-99\nSubmitted by: st.h <sth at lavabit dot com>\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1416772 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "ac0a2e6eb155d2c42b1339d1f2b6f31dc3a23574",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'getJpegRawImageData(ByteSource,TiffDirectory)')": [
                        508,
                        509,
                        510
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'getJpegRawImageData(ByteSource,TiffDirectory)')": [
                        509,
                        510,
                        511,
                        514,
                        515,
                        516,
                        517,
                        518
                    ]
                }
            }
        }
    },
    "837cc0b926b2989fbe7ed484ef3460b041e81e27": {
        "authored_data": "2012 Dec 02 09:57",
        "commit.message": "When not in strict mode, allow errors when reading\nsubdirectory tags (and ignore the tags in that case).\n\nJira issue key: IMAGING-90\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1416148 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "fcf027c38ac94ded8cdb248ec41e9d37b32e8b14",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngConstants.java": {
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        102,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunk(OutputStream,byte,byte)')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        483,
                        484,
                        485,
                        487,
                        488,
                        489,
                        490,
                        491,
                        499,
                        500,
                        504,
                        505,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        252,
                        253,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunk(OutputStream,byte,byte)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeChunkTRNS(OutputStream,Palette)')": [
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        491,
                        494,
                        495,
                        496,
                        503,
                        504,
                        508,
                        509,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterIndexedColor.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', None)": [
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', 'filter(int,int)')": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterIndexedColor', 'filter(int,int)')": [
                        34,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,int,int,FormatCompliance,Listener,boolean,List)')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectory(ByteSource,int,int,FormatCompliance,Listener,boolean,List)')": [
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        281
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MedianCutQuantizer.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,boolean)')": [
                        274,
                        275,
                        276,
                        277,
                        285,
                        286,
                        287,
                        288
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', None)": [
                        94,
                        104,
                        107,
                        118
                    ],
                    "('org.apache.commons.imaging.palette#MedianCutQuantizer', 'process(BufferedImage,int,boolean)')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        288,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', None)": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', None)": [
                        337
                    ]
                }
            }
        }
    },
    "fcf027c38ac94ded8cdb248ec41e9d37b32e8b14": {
        "authored_data": "2012 Oct 24 19:01",
        "commit.message": "Tiled TIFF images do not correctly load partial tiles.\n\nJira issue key: IMAGING-93\nSubmitted by: Gary Lucas <gwlucas at sonalysts dot com>\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1401825 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "07ba103fea727e1d91dc41e83694d64191ed664b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderTiled.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'interpretTile(ImageBuilder,byte,int,int)')": [
                        86,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderTiled', 'interpretTile(ImageBuilder,byte,int,int)')": [
                        86,
                        92
                    ]
                }
            }
        }
    },
    "07ba103fea727e1d91dc41e83694d64191ed664b": {
        "authored_data": "2012 Oct 24 05:21",
        "commit.message": "Speed up ByteSourceInputStream.CacheReadingInputStream.skip(), which\nspeeds up reading TIFF files from InputStreams.\n\nSubmitted by: Amit Gupta <amitgupt at adobe dot com>\nJira issue key: IMAGING-95\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1401553 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "24cda45bf8351ef4816553212ee00863daa7e219",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceInputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', None)": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', None)": [
                        91,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ]
                }
            }
        }
    },
    "24cda45bf8351ef4816553212ee00863daa7e219": {
        "authored_data": "2012 Oct 24 05:08",
        "commit.message": "ByteSourceInputStream.streamLength could be a long\n\nJira issue key: IMAGING-91\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1401552 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "814d3471b0e1effc894b70d5fa1599479b48fbc5",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceInputStream.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', 'getBlock(int,int)')": [
                        171
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', None)": [
                        194
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', 'getLength')": [
                        198,
                        199
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', 'getBlock(int,int)')": [
                        171
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', None)": [
                        194
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceInputStream', 'getLength')": [
                        198,
                        199
                    ]
                }
            }
        }
    },
    "814d3471b0e1effc894b70d5fa1599479b48fbc5": {
        "authored_data": "2012 Oct 13 10:11",
        "commit.message": "Fix setExifGPSTag().\n\nSubmitted by: Herve M. <hmarmy at gmail dot com>\nJira issue key: IMAGING-92\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1397808 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "be971af31a298114769421a89f1cf9d68c40e73b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSet.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'setGPSInDegrees(double,double)')": [
                        147,
                        151,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'setGPSInDegrees(double,double)')": [
                        147,
                        151,
                        166
                    ]
                }
            }
        }
    },
    "be971af31a298114769421a89f1cf9d68c40e73b": {
        "authored_data": "2012 Oct 05 05:14",
        "commit.message": "Test reading JPEG images (that we can).\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1394361 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Damjan Jovanovic",
        "pcid": "4c4be402d91ae2b6bf423b3d2ea1639902ab55f8",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegReadTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        27,
                        65
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', 'test')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            }
        }
    }
}