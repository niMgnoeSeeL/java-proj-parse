{
    "e54023f0c5f174e25cecf3ba6f51a211c25438e7": {
        "authored_data": "2021 May 09 00:04",
        "commit.message": "[IMAGING-300] Throw ImageReadException if GIF image data contains invalid range (prevents IndexOutOfBoundsException)\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "f5287e78ce300213423900d4c79fe3790aefbcff",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(GifHeaderInfo,GifImageData,byte)')": [
                        806
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getBufferedImage(GifHeaderInfo,GifImageData,byte)')": [
                        800,
                        801,
                        802,
                        809
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        27,
                        28,
                        35,
                        165
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', 'testUncaughtExceptionOssFuzz33501')": [
                        160,
                        161,
                        162,
                        163,
                        164
                    ]
                }
            }
        }
    },
    "430a088fd4b8d78f78dbab490b4b0629f8463f94": {
        "authored_data": "2021 Apr 26 22:33",
        "commit.message": "[IMAGING-298] Apply suggestion of @arturobernalg to use lamnda expression\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "21af3a8d31beb27cf36c0ab5967948bcb8ef4a49",
        "changes": {
            "src/test/java/org/apache/commons/imaging/formats/png/PngReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngReadTest', 'testUncaughtExceptionOssFuzz33691')": [
                        95,
                        96
                    ],
                    "(None, None)": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngReadTest', 'testUncaughtExceptionOssFuzz33691')": [
                        95
                    ]
                }
            }
        }
    },
    "20ca4b1b4aff3afb99fade757381b53b4456a25a": {
        "authored_data": "2021 Apr 26 08:55",
        "commit.message": "[IMAGING-298] Throw ImageReadException if the PNG parser is given an image with invalid ICC Profile\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "cf6d30e944364fa8aefb94e83e47181eecb66bca",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        586
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        586,
                        587,
                        588,
                        589,
                        590
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngReadTest.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        30,
                        33,
                        97,
                        98
                    ],
                    "('org.apache.commons.imaging.formats.png#PngReadTest', None)": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.imaging.formats.png#PngReadTest', 'testUncaughtExceptionOssFuzz33691')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ]
                }
            }
        }
    },
    "0db984be2e2e6e2f4a0180b4d77246afaab6ca8c": {
        "authored_data": "2021 Apr 25 13:44",
        "commit.message": "[IMAGING-294] Use java style array declaration\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "79ec5d8bf6fe2a993ef7a757fb9698d86fca8b52",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'transferBlockToRaster(int,int,int,int,int,int,int,int,int,float)')": [
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'transferBlockToRaster(int,int,int,int,int,int,int,int,int,float)')": [
                        537
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/color/ColorConversionsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorConversionsTest', None)": [
                        26
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorConversionsTest', None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        43,
                        48,
                        60,
                        71
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        80,
                        87,
                        100,
                        108,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        43,
                        48,
                        60,
                        71
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', 'writeAndReadBytes(ByteSourceFactory,byte)')": [
                        80,
                        87,
                        100,
                        108,
                        118
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        61
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetICCProfileBytes(File,byte)')": [
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'test(File)')": [
                        61
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetICCProfileBytes(File,byte)')": [
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        179
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        34
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'getTestByteArrays')": [
                        50,
                        55,
                        60,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'createTempFile(byte)')": [
                        34
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceTest', 'getTestByteArrays')": [
                        50,
                        55,
                        60,
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/MetadataExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        110,
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#MetadataExample', 'metadataExample(File)')": [
                        110,
                        112
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/SampleUsage.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        46,
                        55,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        46,
                        55,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        163
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngMultipleRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        204
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        204
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        233
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffFloatingPointRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', None)": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointRoundTripTest', None)": [
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'compressRoundtripAndValidate(byte)')": [
                        79,
                        113,
                        164
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'decompressRoundtripAndValidate(byte)')": [
                        172,
                        201,
                        264
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'compressRoundtripAndValidate(byte)')": [
                        79,
                        113,
                        164
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'decompressRoundtripAndValidate(byte)')": [
                        172,
                        201,
                        264
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/ImageAsserts.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#ImageAsserts', 'assertEquals(File,File)')": [
                        85,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#ImageAsserts', 'assertEquals(File,File)')": [
                        85,
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/TestImages.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#TestImages', 'createLimitedColorImage(int,int)')": [
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#TestImages', 'createLimitedColorImage(int,int)')": [
                        85
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/test/util/FileSystemTraversal.java": {
                "old": {
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', 'traverse(File,int,Visitor,double,double)')": [
                        64
                    ],
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', 'traverse(int,Visitor,double,double)')": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', 'traverse(File,int,Visitor,double,double)')": [
                        64
                    ],
                    "('org.apache.commons.imaging.test.util#FileSystemTraversal', 'traverse(int,Visitor,double,double)')": [
                        137
                    ]
                }
            }
        }
    }
}