{
    "c3c8838abc7a5841d98ecf72bdc5e6753ab9e3fb": {
        "authored_data": "2016 Dec 23 19:00",
        "commit.message": "Local variable is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775890 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "38c8705afebec5b0ceb5e32c6f395fa5774bc2b2",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/DataReaderStrips.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'interpretStrip(ImageBuilder,byte,int,int)')": [
                        169,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#DataReaderStrips', 'interpretStrip(ImageBuilder,byte,int,int)')": [
                        169
                    ]
                }
            }
        }
    },
    "38c8705afebec5b0ceb5e32c6f395fa5774bc2b2": {
        "authored_data": "2016 Dec 23 18:59",
        "commit.message": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775889 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "56e0133a0f9b7c89eb180696b13e53ba38007beb",
        "changes": {
            "src/main/java/org/apache/commons/imaging/color/ColorCieLab.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLab', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLab', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLch.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLch', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLch', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLuv.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLuv', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLuv', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmy.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmy', 'equals(Object)')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmy', 'equals(Object)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmyk.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsl.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHsl', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHsl', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsv.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHsv', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHsv', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHunterLab.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHunterLab', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHunterLab', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorXyz.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorXyz', 'equals(Object)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorXyz', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4AndT6Compression.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'decompressT4_1D(byte,int,int,boolean)')": [
                        215
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'decompressT6(byte,int,int)')": [
                        563
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'decompressT4_1D(byte,int,int,boolean)')": [
                        215
                    ],
                    "('org.apache.commons.imaging.common.itu_t4#T4AndT6Compression', 'decompressT6(byte,int,int)')": [
                        563
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findBlock(List,int)')": [
                        430
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        508
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1017
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'findBlock(List,int)')": [
                        430
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getComments(List)')": [
                        508
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', 'getXmpXml(ByteSource,Map)')": [
                        1017
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnailData')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnail')": [
                        135
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getRawImageData')": [
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnailData')": [
                        103
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getEXIFThumbnail')": [
                        135
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageMetadata', 'getRawImageData')": [
                        175
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        205
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List,boolean)')": [
                        253
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        287
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        334
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getPhotoshopMetadata(ByteSource,Map)')": [
                        596
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        796
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        205
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List,boolean)')": [
                        253
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getICCProfileBytes(ByteSource,Map)')": [
                        287
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'filterAPP1Segments(List)')": [
                        334
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getPhotoshopMetadata(ByteSource,Map)')": [
                        596
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getImageInfo(ByteSource,Map)')": [
                        796
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegPhotoshopMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegPhotoshopMetadata', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        117
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        360
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'parsePhotoshopSegment(byte,boolean,boolean)')": [
                        117
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writePhotoshopApp13Segment(PhotoshopApp13Data)')": [
                        360
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcParser', 'writeIPTCBlock(List)')": [
                        422
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'writeIPTC(ByteSource,OutputStream,PhotoshopApp13Data)')": [
                        303,
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'writeIPTC(ByteSource,OutputStream,PhotoshopApp13Data)')": [
                        303,
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/PhotoshopApp13Data.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#PhotoshopApp13Data', 'getNonIptcBlocks')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegRewriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        254
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'filterSegments(List,SegmentFilter,boolean)')": [
                        254
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegRewriter', 'writeSegments(OutputStream,List)')": [
                        325
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ChunkType.java": {
                "old": {
                    "(None, None)": [
                        91,
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        91,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngColorType.java": {
                "old": {
                    "(None, None)": [
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChunkTypes(InputStream)')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getMetadata(ByteSource,Map)')": [
                        284
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'filterChunks(List,ChunkType)')": [
                        296
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        381,
                        398,
                        403,
                        408
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        533
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getXmpXml(ByteSource,Map)')": [
                        720
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getChunkTypes(InputStream)')": [
                        115
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getMetadata(ByteSource,Map)')": [
                        284
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'filterChunks(List,ChunkType)')": [
                        296
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getImageInfo(ByteSource,Map)')": [
                        381,
                        398,
                        403,
                        408
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getBufferedImage(ByteSource,Map)')": [
                        533
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getXmpXml(ByteSource,Map)')": [
                        720
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'getBitDepth(PngColorType,Map)')": [
                        315
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        546
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'getBitDepth(PngColorType,Map)')": [
                        315
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        546
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ScanExpediter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getNextScanline(InputStream,int,byte,int)')": [
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getNextScanline(InputStream,int,byte,int)')": [
                        210
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIhdr.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        44,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        44,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkScal.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', 'toDouble(String)')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', 'toDouble(String)')": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/scanlinefilters/ScanlineFilterPaeth.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterPaeth', 'unfilter(byte,byte,byte)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.scanlinefilters#ScanlineFilterPaeth', 'unfilter(byte,byte,byte)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterGrayscale.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterTrueColor.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        32,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        32,
                        33,
                        34,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(InputStream)')": [
                        106,
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(InputStream)')": [
                        106,
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/ImageResourceType.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceType', 'getDescription(int)')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceType', 'getDescription(int)')": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffContents.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'getElements')": [
                        41,
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'findField(TagInfo)')": [
                        64
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'dissect(boolean)')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'getElements')": [
                        41,
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'findField(TagInfo)')": [
                        64
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffContents', 'dissect(boolean)')": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getElementDescription(boolean)')": [
                        90
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'dump')": [
                        129
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'findField(TagInfo,boolean)')": [
                        181
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getJpegRawImageDataElement')": [
                        769,
                        770
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getElementDescription(boolean)')": [
                        90
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'dump')": [
                        129
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'findField(TagInfo,boolean)')": [
                        181
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', 'getJpegRawImageDataElement')": [
                        769,
                        770
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageMetadata.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', None)": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getItems')": [
                        172
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        200
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'findField(TagInfo,boolean)')": [
                        230,
                        242,
                        260
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'findDirectory(int)')": [
                        429
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', None)": [
                        114
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getItems')": [
                        172
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getOutputSet')": [
                        200
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'findField(TagInfo,boolean)')": [
                        230,
                        242,
                        260
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'findDirectory(int)')": [
                        429
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageMetadata', 'getAllFields')": [
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getMetadata(ByteSource,Map)')": [
                        130,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        232
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        368
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        408
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'checkForSubImage(Map)')": [
                        510,
                        511,
                        512,
                        513
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getMetadata(ByteSource,Map)')": [
                        130,
                        136
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getImageInfo(ByteSource,Map)')": [
                        232
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        368
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'collectRawImageData(ByteSource,Map)')": [
                        408
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'checkForSubImage(Map)')": [
                        510,
                        511,
                        512,
                        513
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffTags.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        86
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        101
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTag(int,List)')": [
                        135,
                        145,
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'makeTagMap(List)')": [
                        86
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'countTags(List)')": [
                        101
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTag(int,List)')": [
                        135,
                        145,
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        82,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'validateDirectories(TiffOutputSet)')": [
                        82,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossless.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        235
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,long)')": [
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'analyzeOldTiff(Map)')": [
                        87
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'updateOffsetsStep(List,List)')": [
                        235
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossless', 'writeStep(OutputStream,TiffOutputSet,List,List,long)')": [
                        317
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterLossy.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'updateOffsetsStep(List)')": [
                        58
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'writeStep(BinaryOutputStream,List)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'updateOffsetsStep(List)')": [
                        58
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterLossy', 'writeStep(BinaryOutputStream,List)')": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'removeField(int)')": [
                        556
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'findField(int)')": [
                        591
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'writeItem(BinaryOutputStream)')": [
                        623
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        733,
                        734,
                        767
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'removeField(int)')": [
                        556
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'findField(int)')": [
                        591
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'writeItem(BinaryOutputStream)')": [
                        623
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectory', 'getOutputItems(TiffOutputSummary)')": [
                        733,
                        734,
                        767
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSet.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        50
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'findDirectory(int)')": [
                        120
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'removeField(int)')": [
                        198
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'findField(int)')": [
                        208
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'toString(String)')": [
                        275
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'getOutputItems(TiffOutputSummary)')": [
                        50
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'findDirectory(int)')": [
                        120
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'removeField(int)')": [
                        198
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'findField(int)')": [
                        208
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSet', 'toString(String)')": [
                        275
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSummary.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', 'updateOffsets(ByteOrder)')": [
                        60,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSummary', 'updateOffsets(ByteOrder)')": [
                        60,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        270,
                        271,
                        272,
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', 'readXbmImage(XbmHeader,BasicCParser)')": [
                        270,
                        271,
                        272,
                        273
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/icc/IccProfileParser.java": {
                "old": {
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'getICCProfileInfo(ByteSource)')": [
                        71
                    ],
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'issRGB(ByteSource)')": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'getICCProfileInfo(ByteSource)')": [
                        71
                    ],
                    "('org.apache.commons.imaging.icc#IccProfileParser', 'issRGB(ByteSource)')": [
                        335
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorGroup.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        58
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'getMedianValue')": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#ColorGroup', None)": [
                        58
                    ],
                    "('org.apache.commons.imaging.palette#ColorGroup', 'getMedianValue')": [
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/LongestAxisMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        117,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#LongestAxisMedianCut', 'doCut(ColorGroup,ColorComponent,List,boolean)')": [
                        117,
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/MostPopulatedBoxesMedianCut.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#MostPopulatedBoxesMedianCut', 'performNextMedianCut(List,boolean)')": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/PaletteFactory.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int,int)')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int)')": [
                        234
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divide(List,int,int,int)')": [
                        276
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int,int)')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divideSubset2(int,ColorSpaceSubset,int)')": [
                        234
                    ],
                    "('org.apache.commons.imaging.palette#PaletteFactory', 'divide(List,int,int,int)')": [
                        276
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/util/Debug.java": {
                "old": {
                    "('org.apache.commons.imaging.util#Debug', 'debug(String,List)')": [
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.util#Debug', 'debug(String,List)')": [
                        232
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingGuessFormatTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', 'testGuessFormat')": [
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetBufferedImage(File,byte)')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetBufferedImage(File,byte)')": [
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/AsciiFieldTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#AsciiFieldTest', 'testSingleImage')": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#AsciiFieldTest', 'testSingleImage')": [
                        70
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'checkFields(byte)')": [
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'checkFields(byte)')": [
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', 'testAddIptcData')": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcFullDiscardTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'addMetaData(byte)')": [
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'generateImage')": [
                        41,
                        42,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeMetaData(byte,boolean)')": [
                        50
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'leaveApp13Segment')": [
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeApp13Segment')": [
                        65,
                        66,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'addMetaData(byte)')": [
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'generateImage')": [
                        41,
                        42,
                        44
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeMetaData(byte,boolean)')": [
                        50
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'leaveApp13Segment')": [
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeApp13Segment')": [
                        65,
                        66,
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngTextTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PnmImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_happyCase')": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidWidth')": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidHeight')": [
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_missingWidthValue')": [
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_happyCase')": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidWidth')": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_invalidHeight')": [
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testGetImageInfo_missingWidthValue')": [
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffLzwTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'testTiffImageData')": [
                        66,
                        67,
                        71,
                        72,
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffLzwTest', 'testTiffImageData')": [
                        66,
                        67,
                        71,
                        72,
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffReadWriteTagsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadWriteTagsTest', 'testReadWriteTags')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        66,
                        67,
                        70,
                        71,
                        72,
                        73,
                        74,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReadWriteTagsTest', 'testReadWriteTags')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        66,
                        67,
                        70,
                        71,
                        72,
                        73,
                        74,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffSubImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        37,
                        38,
                        40,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        37,
                        38,
                        40,
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffTagIntegrityTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTagIntegrityTest', 'verifyFields(Class,List)')": [
                        87,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTagIntegrityTest', 'verifyFields(Class,List)')": [
                        87,
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputDirectoryTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectoryTest', 'testFindField')": [
                        42,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputDirectoryTest', 'testFindField')": [
                        42,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/write/TiffOutputSetTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSetTest', 'testImaging144')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffOutputSetTest', 'testImaging144')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/palette/PaletteQuantizationTest.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'testPaletteQuantization')": [
                        31,
                        39,
                        50
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPaletteDetails(BufferedImage,int,int)')": [
                        67,
                        96
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkUniqueColors(BufferedImage,Palette)')": [
                        107,
                        110
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPixelsAreIdentical(BufferedImage,Palette)')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'testPaletteQuantization')": [
                        31,
                        39,
                        50
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPaletteDetails(BufferedImage,int,int)')": [
                        67,
                        96
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkUniqueColors(BufferedImage,Palette)')": [
                        107,
                        110
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPixelsAreIdentical(BufferedImage,Palette)')": [
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/GrayscaleRountripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#GrayscaleRountripTest', 'testGrayscaleRoundtrip(BufferedImage,FormatInfo)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#GrayscaleRountripTest', 'testGrayscaleRoundtrip(BufferedImage,FormatInfo)')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/NullParametersRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        46
                    ]
                }
            }
        }
    },
    "56e0133a0f9b7c89eb180696b13e53ba38007beb": {
        "authored_data": "2016 Dec 23 18:58",
        "commit.message": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775888 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "b23253278ce0c42f83d7ea652a907f0e2cb8ff15",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ColorTools.java": {
                "old": {
                    "('org.apache.commons.imaging#ColorTools', 'convertBetweenICCProfiles(BufferedImage,ICC_Profile,ICC_Profile)')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ColorTools', 'convertBetweenICCProfiles(BufferedImage,ICC_Profile,ICC_Profile)')": [
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageInfo.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageInfo', None)": [
                        43,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageInfo', None)": [
                        43,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLab.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLab', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLab', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLch.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLch', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLch', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCieLuv.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCieLuv', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCieLuv', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmy.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmy', 'equals(Object)')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmy', 'equals(Object)')": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorCmyk.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsl.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHsl', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHsl', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHsv.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHsv', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHsv', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorHunterLab.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorHunterLab', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorHunterLab', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/color/ColorXyz.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorXyz', 'equals(Object)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorXyz', 'equals(Object)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageContents.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageContents', None)": [
                        26
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageContents', None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsType.java": {
                "old": {
                    "(None, None)": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        202
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'assembleSegments(List)')": [
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/App14Segment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', None)": [
                        44,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#App14Segment', None)": [
                        44,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/AppnSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#AppnSegment', None)": [
                        26
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#AppnSegment', None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/ComSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#ComSegment', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#ComSegment', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/DhtSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        117,
                        121,
                        125,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#DhtSegment', None)": [
                        117,
                        121,
                        125,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/GenericSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', None)": [
                        29
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'getSegmentData(int)')": [
                        69
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'getSegmentDataAsString(String)')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', None)": [
                        29
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'getSegmentData(int)')": [
                        69
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.segments#GenericSegment', 'getSegmentDataAsString(String)')": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/segments/UnknownSegment.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#UnknownSegment', None)": [
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.segments#UnknownSegment', None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/InterlaceMethod.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngColorType.java": {
                "old": {
                    "(None, None)": [
                        38,
                        62,
                        66,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        62,
                        66,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getTransparencyFilter(PngColorType,PngChunk)')": [
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', 'getTransparencyFilter(PngColorType,PngChunk)')": [
                        309
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', None)": [
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ScanExpediter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getScanlineFilter(FilterType,int)')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediter', 'getScanlineFilter(FilterType,int)')": [
                        174
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/ScanExpediterInterlaced.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediterInterlaced', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#ScanExpediterInterlaced', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIdat.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIdat', None)": [
                        21
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIdat', None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIhdr.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIhdr', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkPhys.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkPhys', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkPhys', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkScal.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkScal', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilter', 'getByte(int)')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilter', 'getByte(int)')": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterGrayscale.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterGrayscale', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/transparencyfilters/TransparencyFilterTrueColor.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png.transparencyfilters#TransparencyFilterTrueColor', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PgmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PpmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/ImageResourceType.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceType', None)": [
                        130,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#ImageResourceType', None)": [
                        130,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdHeaderInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdHeaderInfo', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdHeaderInfo', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffDirectory.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', None)": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffDirectory', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageData.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffTags.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTagCount(int)')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffTags', 'getTagCount(int)')": [
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'isHomogenous(int)')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'isHomogenous(int)')": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/photometricinterpreters/PhotometricInterpreter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreter', 'getBitsPerSample(int)')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.photometricinterpreters#PhotometricInterpreter', 'getBitsPerSample(int)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/palette/ColorComponent.java": {
                "old": {
                    "(None, None)": [
                        27,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/ImagingGuessFormatTest.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', None)": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingGuessFormatTest', None)": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/RationalNumberTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', None)": [
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', None)": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', None)": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', None)": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', None)": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/GpsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', None)": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MakerNoteFieldTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MakerNoteFieldTest', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MakerNoteFieldTest', None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'cleanImage(File)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'cleanImage(File)')": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/SpecificExifTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', None)": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/TextFieldTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#TextFieldTest', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#TextFieldTest', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', None)": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', None)": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', None)": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', None)": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', None)": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcFullDiscardTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'addMetaData(byte)')": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeMetaData(byte,boolean)')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'addMetaData(byte)')": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcFullDiscardTest', 'removeMetaData(byte,boolean)')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', None)": [
                        54
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource)')": [
                        83
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data)')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', None)": [
                        54
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'removeIptc(ByteSource)')": [
                        83
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', 'writeIptc(ByteSource,PhotoshopApp13Data)')": [
                        163
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', None)": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', None)": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/palette/PaletteQuantizationTest.java": {
                "old": {
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPaletteDetails(BufferedImage,int,int)')": [
                        66
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkUniqueColors(BufferedImage,Palette)')": [
                        106
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPixelsAreIdentical(BufferedImage,Palette)')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPaletteDetails(BufferedImage,int,int)')": [
                        66
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkUniqueColors(BufferedImage,Palette)')": [
                        106
                    ],
                    "('org.apache.commons.imaging.palette#PaletteQuantizationTest', 'checkPixelsAreIdentical(BufferedImage,Palette)')": [
                        114
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/BitmapRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#BitmapRoundtripTest', 'testBitmapRoundtrip(BufferedImage,FormatInfo)')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#BitmapRoundtripTest', 'testBitmapRoundtrip(BufferedImage,FormatInfo)')": [
                        47
                    ]
                }
            }
        }
    },
    "b23253278ce0c42f83d7ea652a907f0e2cb8ff15": {
        "authored_data": "2016 Dec 23 18:50",
        "commit.message": "Add final modifier to private fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775887 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "eb8be124f7d1ebc75e3ed69c0a7d8802cea29d67",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/pnm/PbmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PbmWriter', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PbmWriter', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PgmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PgmWriter', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PpmWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PpmWriter', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/CompressedDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#CompressedDataReader', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#CompressedDataReader', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/datareaders/UncompressedDataReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#UncompressedDataReader', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd.datareaders#UncompressedDataReader', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/RationalNumberTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common#RationalNumberTest', None)": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceDataTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceDataTest', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', None)": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpReadTest', None)": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/dcx/DcxReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxReadTest', None)": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/gif/GifReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifReadTest', None)": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/icns/IcnsReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsReadTest', None)": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/ico/IcoReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoReadTest', None)": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/JpegReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegReadTest', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/ExifDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#ExifDumpTest', None)": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/GpsTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#GpsTest', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/SpecificExifTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#SpecificExifTagTest', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/WriteExifMetadataExampleTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#WriteExifMetadataExampleTest', None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcAddTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcAddTest', None)": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcDumpTest', None)": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/iptc/IptcUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', None)": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.iptc#IptcUpdateTest', None)": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpDumpTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpDumpTest', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/xmp/JpegXmpRewriteTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg.xmp#JpegXmpRewriteTest', None)": [
                        42
                    ]
                }
            }
        }
    },
    "eb8be124f7d1ebc75e3ed69c0a7d8802cea29d67": {
        "authored_data": "2016 Dec 23 18:50",
        "commit.message": "Always use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775886 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "e6799d87f014be14635e9db2e087614b16c87588",
        "changes": {
            "src/main/java/org/apache/commons/imaging/color/ColorCmyk.java": {
                "old": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.color#ColorCmyk', 'equals(Object)')": [
                        131,
                        132,
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(InputStream)')": [
                        159,
                        164,
                        169,
                        174,
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', 'readHeader(InputStream)')": [
                        159,
                        161,
                        165,
                        167,
                        171,
                        173,
                        177,
                        179,
                        183,
                        185
                    ]
                }
            }
        }
    },
    "e6799d87f014be14635e9db2e087614b16c87588": {
        "authored_data": "2016 Dec 23 18:27",
        "commit.message": "Refactor duplicate code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775883 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "0ac4d259f5d9d44cade33f2b7d38f8cf34dda80c",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceFile.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        67
                    ]
                }
            }
        }
    },
    "0ac4d259f5d9d44cade33f2b7d38f8cf34dda80c": {
        "authored_data": "2016 Dec 23 18:26",
        "commit.message": "Local variable is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775882 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "1743e64bd2f06425b12061850d012c7fc86ef7ad",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceFile.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        67
                    ]
                }
            }
        }
    },
    "1743e64bd2f06425b12061850d012c7fc86ef7ad": {
        "authored_data": "2016 Dec 23 18:24",
        "commit.message": "Local variable is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775881 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "7fe8373eb988de6f6f9895f55dde05a147ace2fc",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceFile.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        74,
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getAll')": [
                        74
                    ]
                }
            }
        }
    },
    "7fe8373eb988de6f6f9895f55dde05a147ace2fc": {
        "authored_data": "2016 Dec 23 18:22",
        "commit.message": "Local variable is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775880 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "23c17bfd1736ba20d14fdb9227ea6ac2bce0e8d9",
        "changes": {
            "src/main/java/org/apache/commons/imaging/common/bytesource/ByteSourceFile.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getBlock(long,int)')": [
                        53,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceFile', 'getBlock(long,int)')": [
                        53
                    ]
                }
            }
        }
    },
    "23c17bfd1736ba20d14fdb9227ea6ac2bce0e8d9": {
        "authored_data": "2016 Dec 23 18:19",
        "commit.message": "Local variable is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/imaging/trunk@1775879 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "650fa548a0e7f1192cbfa2297637c536b65f6f38",
        "changes": {
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'getImageInfo(ByteSource,Map)')": [
                        706,
                        707,
                        708
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'getImageInfo(ByteSource,Map)')": [
                        706
                    ]
                }
            }
        }
    }
}