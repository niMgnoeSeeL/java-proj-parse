{
    "90efae3789aed0eb138355ba6f44aacf489818ca": {
        "authored_data": "2015 Mar 08 19:48",
        "commit.message": "[IMAGING-136] Fix Imaging.getImageInfo() failing to read JPEG file\n",
        "commit.author.name": "Michael Gro\u00df",
        "pcid": "5e5483f11582c0774fc9b255c6e39cf3f1869853",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/jpeg/decoder/JpegDecoder.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        80,
                        112,
                        158
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'getIntervalStartPositions(int)')": [
                        483
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.decoder#JpegDecoder', 'visitSOS(int,byte,byte)')": [
                        102,
                        113,
                        114,
                        115,
                        116,
                        117,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ]
                }
            }
        }
    },
    "c2b7f9dc0209e322f8c31ccebc6f67515f009ccf": {
        "authored_data": "2019 May 29 20:33",
        "commit.message": "[IMAGING-239]: Add support for decompressing (inflating) using the deflate compression algorithm.\n",
        "commit.author.name": "Paul Austin",
        "pcid": "1602ac13345f5aec30cdc94381a0f6740fddb022",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffReader.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        389
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffReader', 'readDirectories(ByteSource,boolean,FormatCompliance)')": [
                        390,
                        391,
                        392
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/constants/TiffConstants.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.tiff.constants#TiffConstants', None)": [
                        40,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/datareaders/ImageDataReader.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff.datareaders#ImageDataReader', 'decompress(byte,int,int,int,int)')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/write/TiffImageWriterBase.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        418
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        53
                    ],
                    "('org.apache.commons.imaging.formats.tiff.write#TiffImageWriterBase', 'writeImage(BufferedImage,OutputStream,Map)')": [
                        416,
                        417,
                        418,
                        419,
                        424
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        58,
                        59
                    ]
                }
            }
        }
    },
    "296a6a1c54015b945b574d48f87891e023a4f1e7": {
        "authored_data": "2019 Nov 10 07:16",
        "commit.message": "[IMAGING-238]: Add javadocs for the PngChunkIccp class\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "ba80e124595066cc571380e5046d6511ce45da59",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/chunks/PngChunkIccp.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        35,
                        43,
                        44,
                        46,
                        50
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', 'getUncompressedProfile')": [
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        110,
                        111
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', None)": [
                        39,
                        40,
                        41,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        52,
                        53,
                        54,
                        56,
                        57,
                        58,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.imaging.formats.png.chunks#PngChunkIccp', 'getUncompressedProfile')": [
                        108,
                        109
                    ]
                }
            }
        }
    }
}