{
    "fe3199e9f1b78940119e1b66778066771b9f9095": {
        "authored_data": "2021 Aug 02 03:25",
        "commit.message": "[IMAGING-159] TIFF parameters implement single call to specify sub-image\n",
        "commit.author.name": "gwlucastrig",
        "pcid": "561945def97fc7ef95e69c2ced65662109c8937b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'checkForSubImage(TiffImagingParameters)')": [
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        357,
                        358,
                        359
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'checkForSubImage(TiffImagingParameters)')": [
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', None)": [
                        43,
                        48,
                        53,
                        58,
                        123,
                        124,
                        131,
                        132,
                        139,
                        140,
                        143,
                        144
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageX')": [
                        117
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'setSubImageX(Integer)')": [
                        121,
                        122
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageY')": [
                        125
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'setSubImageY(Integer)')": [
                        129,
                        130
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageWidth')": [
                        133
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'setSubImageWidth(Integer)')": [
                        137,
                        138
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageHeight')": [
                        141
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'setSubImageHeight(Integer)')": [
                        145,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', None)": [
                        43,
                        48,
                        53,
                        58,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'setSubImage(int,int,int,int)')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'clearSubImage')": [
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'isSubImageSet')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageX')": [
                        173
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageY')": [
                        183
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageWidth')": [
                        194
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', 'getSubImageHeight')": [
                        205
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffFloatingPointReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'checkSubImage(File,TiffRasterData,int,int,int,int)')": [
                        226,
                        227,
                        228,
                        229
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffFloatingPointReadTest', 'checkSubImage(File,TiffRasterData,int,int,int,int)')": [
                        226
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffSubImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testBadSubImage')": [
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'processBadParams(File,int,int,int,int,String)')": [
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', None)": [
                        88
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImageCorrectness')": [
                        105,
                        106,
                        107,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        45
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testBadSubImage')": [
                        59
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'processBadParams(File,int,int,int,int,String)')": [
                        76
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', None)": [
                        79
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImageCorrectness')": [
                        96
                    ]
                }
            }
        }
    },
    "561945def97fc7ef95e69c2ced65662109c8937b": {
        "authored_data": "2021 Jul 29 05:46",
        "commit.message": "[IMAGING-159] Remove formats from parameters (the parsers already know, thanks @darkma773r)\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "ad72bb1166b4f6b42f973c1b9ba5753778ee4b20",
        "changes": {
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'getXmpXml(File)')": [
                        957
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'getXmpXml(File)')": [
                        957
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingParameters', None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        94,
                        95,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.imaging#ImagingParameters', 'getImageFormat')": [
                        92,
                        93
                    ],
                    "(None, None)": [
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/XmpImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.common#XmpImagingParameters', None)": [
                        28,
                        29,
                        30,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        20,
                        31,
                        32
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpImagingParameters', None)": [
                        27,
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImagingParameters', None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        20,
                        31,
                        32
                    ],
                    "('org.apache.commons.imaging.formats.gif#GifImagingParameters', None)": [
                        27,
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImagingParameters', None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.icns#IcnsImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.ico#IcoImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg#JpegImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('org.apache.commons.imaging.formats.pcx#PcxImagingParameters', None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.imaging.formats.png#PngImagingParameters', None)": [
                        56,
                        57,
                        58,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImagingParameters', None)": [
                        34,
                        35,
                        36,
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        20,
                        31,
                        32
                    ],
                    "('org.apache.commons.imaging.formats.psd#PsdImagingParameters', None)": [
                        27,
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImagingParameters', None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', None)": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.xbm#XbmImagingParameters', None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImagingParameters', None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImagingParameters.java": {
                "old": {
                    "(None, None)": [
                        17,
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.imaging.formats.xpm#XpmImagingParameters', None)": [
                        24,
                        25,
                        26,
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImagingParameters', None)": [
                        23
                    ]
                }
            }
        }
    },
    "ad72bb1166b4f6b42f973c1b9ba5753778ee4b20": {
        "authored_data": "2021 Jul 18 10:25",
        "commit.message": "[IMAGING-159] Simplify how the ImageFormats enum creates parameters. Replace reflection by a supplier (thanks @darkma773r)\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "414d9e11c8e1fae1cad46b41867b4dd4e7bdd1a6",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        66,
                        69,
                        71,
                        73,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        63,
                        67,
                        68,
                        89
                    ]
                }
            }
        }
    },
    "414d9e11c8e1fae1cad46b41867b4dd4e7bdd1a6": {
        "authored_data": "2021 Jul 17 06:17",
        "commit.message": "[IMAGING-159] Use List with generics instead of Array, update related code, and fix few issues found after IDE analysis\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "4785f108f15e6e71dda0781557ba4170c466b05d",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "old": {
                    "(None, None)": [
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', 'getAllImageParsers')": [
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        118,
                        121
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'canAcceptExtension(String)')": [
                        901,
                        902,
                        908,
                        909,
                        910,
                        911,
                        912
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'getAllImageParsers')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.imaging#ImageParser', None)": [
                        118,
                        121
                    ],
                    "('org.apache.commons.imaging#ImageParser', 'canAcceptExtension(String)')": [
                        901,
                        902,
                        908,
                        909,
                        910
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.imaging#Imaging', 'getImageParser(ByteSource)')": [
                        752,
                        753,
                        757,
                        764,
                        768
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImageFormat,ImagingParameters)')": [
                        1545
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346
                    ],
                    "('org.apache.commons.imaging#Imaging', 'getImageParser(ByteSource)')": [
                        750,
                        754,
                        761,
                        765
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImageFormat,ImagingParameters)')": [
                        1542
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/itu_t4/T4_T6_Tables.java": {
                "old": {
                    "('org.apache.commons.imaging.common.itu_t4#T4_T6_Tables', None)": [
                        244,
                        245
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.common.itu_t4#T4_T6_Tables', None)": [
                        244,
                        245
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageData.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageData', None)": [
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        100,
                        101,
                        102,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        105,
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        105,
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        172,
                        173,
                        174,
                        175,
                        178,
                        179,
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        172,
                        173,
                        174,
                        175,
                        178,
                        179,
                        180
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/tiff/ExampleReadFloatingPointData.java": {
                "old": {
                    "('org.apache.commons.imaging.examples.tiff#ExampleReadFloatingPointData', 'main(String)')": [
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples.tiff#ExampleReadFloatingPointData', 'main(String)')": [
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/FormatInfo.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#FormatInfo', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#FormatInfo', None)": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/FullColorRoundtrip.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#FullColorRoundtrip', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#FullColorRoundtrip', None)": [
                        29
                    ]
                }
            }
        }
    },
    "4785f108f15e6e71dda0781557ba4170c466b05d": {
        "authored_data": "2021 Jul 17 05:30",
        "commit.message": "[IMAGING-159] @darkma773r feedback, making the image format of a parameter instance immutable\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "d9c1a0b7f37f39bf2efa5b61a2464bdf0a96b5c6",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "old": {
                    "(None, None)": [
                        101,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "('org.apache.commons.imaging#Imaging', 'getXmpXml(File)')": [
                        960
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#Imaging', 'getXmpXml(File)')": [
                        960
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingParameters', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        98,
                        99
                    ],
                    "('org.apache.commons.imaging#ImagingParameters', 'setImageFormat(ImageFormat)')": [
                        96,
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImagingParameters', None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        104,
                        105
                    ],
                    "(None, None)": [
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/common/XmpImagingParameters.java": {
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.imaging.common#XmpImagingParameters', None)": [
                        28,
                        29,
                        30,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImagingParameters', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImagingParameters', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImagingParameters', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImagingParameters', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/iptc/JpegIptcRewriter.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        236
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.iptc#JpegIptcRewriter', 'removeIPTC(ByteSource,OutputStream,boolean)')": [
                        236
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImagingParameters', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImagingParameters', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImagingParameters', None)": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImagingParameters', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImagingParameters', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImagingParameters', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImagingParameters', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImagingParameters', None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/rgbe/RgbeImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.rgbe#RgbeImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', None)": [
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImagingParameters', None)": [
                        104,
                        105,
                        106,
                        107,
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImagingParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImagingParameters', None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImagingParameters', None)": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImagingParameters', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageReadExample.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.imaging.examples#ImageReadExample', 'imageReadExample(File)')": [
                        35,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.imaging.examples#ImageReadExample', 'imageReadExample(File)')": [
                        32,
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/PixelDensityRoundtrip.java": {
                "old": {
                    "(None, None)": [
                        20,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        47,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        31
                    ],
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        44
                    ]
                }
            }
        }
    },
    "d9c1a0b7f37f39bf2efa5b61a2464bdf0a96b5c6": {
        "authored_data": "2021 Jul 15 05:15",
        "commit.message": "[IMAGING-159] Remove unused code\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "07e0761656a7d7d5af53ff6e9b3b94fd4d74633b",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImagingConstants.java": {
                "old": {
                    "('org.apache.commons.imaging#ImagingConstants', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        771,
                        773,
                        775,
                        776,
                        777,
                        778,
                        779
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        772
                    ]
                }
            }
        }
    },
    "07e0761656a7d7d5af53ff6e9b3b94fd4d74633b": {
        "authored_data": "2021 Jul 15 05:02",
        "commit.message": "[IMAGING-159] Fix spotbugs errors\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "98b3919710879808ee749235ffad15b08ee28280",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngImagingParameters.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImagingParameters', 'setTextChunks(List)')": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImagingParameters', 'setTextChunks(List)')": [
                        98
                    ]
                }
            }
        }
    },
    "98b3919710879808ee749235ffad15b08ee28280": {
        "authored_data": "2021 May 15 10:29",
        "commit.message": "[IMAGING-159] Fix CI build errors\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "dfaa6100da09ae09bac89ce2f72f143a73e86458",
        "changes": {
            "src/main/java/org/apache/commons/imaging/formats/png/PngWriter.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,PngImagingParameters)')": [
                        417
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngWriter', 'writeImage(BufferedImage,OutputStream,PngImagingParameters)')": [
                        417
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        352
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getFormatCompliance(ByteSource)')": [
                        393
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'dumpImageFile(PrintWriter,ByteSource)')": [
                        352
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getFormatCompliance(ByteSource)')": [
                        393
                    ]
                }
            }
        }
    },
    "dfaa6100da09ae09bac89ce2f72f143a73e86458": {
        "authored_data": "2021 May 15 10:10",
        "commit.message": "[IMAGING-159] Need to pass a format to some Imaging as we don't have the parameters. Fix remaining unit tests\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "461d385212fa255f8e105af555fec9bf69769165",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "old": {
                    "(None, None)": [
                        47,
                        50,
                        57,
                        61,
                        97,
                        100,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        50,
                        57,
                        61,
                        93,
                        98,
                        101,
                        103,
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging#ImageParser', 'canAcceptExtension(String)')": [
                        908,
                        912,
                        913
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging#ImageParser', 'canAcceptExtension(String)')": [
                        908,
                        912
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/Imaging.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        333
                    ],
                    "('org.apache.commons.imaging#Imaging', None)": [
                        1421,
                        1422
                    ],
                    "('org.apache.commons.imaging#Imaging', 'getBufferedImage(ByteSource,T)')": [
                        1426
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,File,ImagingParameters)')": [
                        1454,
                        1458
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImageToBytes(BufferedImage,ImagingParameters)')": [
                        1486,
                        1490
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImagingParameters)')": [
                        1520,
                        1522,
                        1527,
                        1533
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.imaging#Imaging', 'guessFormat(ByteSource)')": [
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.imaging#Imaging', None)": [
                        351,
                        1439,
                        1467,
                        1499,
                        1533
                    ],
                    "('org.apache.commons.imaging#Imaging', 'getBufferedImage(ByteSource,T)')": [
                        1444,
                        1445,
                        1446,
                        1447
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,File,ImageFormat,ImagingParameters)')": [
                        1475,
                        1479
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImageToBytes(BufferedImage,ImageFormat,ImagingParameters)')": [
                        1508,
                        1512
                    ],
                    "('org.apache.commons.imaging#Imaging', 'writeImage(BufferedImage,OutputStream,ImageFormat,ImagingParameters)')": [
                        1543,
                        1546,
                        1547,
                        1548,
                        1552,
                        1558
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/bmp/BmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', None)": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.bmp#BmpImageParser', None)": [
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', None)": [
                        45,
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', None)": [
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/gif/GifImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', None)": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.gif#GifImageParser', None)": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/icns/IcnsImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.icns#IcnsImageParser', None)": [
                        44,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/ico/IcoImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', None)": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.ico#IcoImageParser', None)": [
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', None)": [
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', None)": [
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pcx/PcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        65,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pcx#PcxImageParser', None)": [
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/png/PngImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', None)": [
                        77,
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.png#PngImageParser', None)": [
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/pnm/PnmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', None)": [
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParser', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/psd/PsdImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', None)": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.psd#PsdImageParser', None)": [
                        58,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/tiff/TiffImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        68,
                        69
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', 'getICCProfileBytes(ByteSource,TiffImagingParameters)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.tiff#TiffImageParser', None)": [
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/wbmp/WbmpImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.wbmp#WbmpImageParser', None)": [
                        44,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xbm/XbmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xbm#XbmImageParser', None)": [
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/xpm/XpmImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xpm#XpmImageParser', None)": [
                        55,
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/ImageWriteExample.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#ImageWriteExample', 'imageWriteExample(File)')": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.imaging.examples#ImageWriteExample', 'imageWriteExample(File)')": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/examples/SampleUsage.java": {
                "old": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        70,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.examples#SampleUsage', None)": [
                        70,
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/bmp/BmpRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.bmp#BmpRoundtripTest', 'writeAndReadImageData(int)')": [
                        147
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/jpeg/exif/MicrosoftTagTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.jpeg.exif#MicrosoftTagTest', 'testWrite')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/ConvertPngToGifTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.png#ConvertPngToGifTest', 'test')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngMultipleRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.png#PngMultipleRoundtripTest', 'test')": [
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngTextTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.imaging.formats.png#PngTextTest', 'test')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteForceTrueColorText.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteForceTrueColorText', 'test')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/png/PngWriteReadTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testTransparency')": [
                        109
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testPhysicalScaleMeters')": [
                        119
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testPhysicalScaleRadians')": [
                        133
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        177
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testTransparency')": [
                        110
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testPhysicalScaleMeters')": [
                        120
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'testPhysicalScaleRadians')": [
                        134
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadImageData(int)')": [
                        178
                    ],
                    "('org.apache.commons.imaging.formats.png#PngWriteReadTest', 'writeAndReadMultipletEXt(int)')": [
                        205
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/pnm/PnmImageParserTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.imaging.formats.pnm#PnmImageParserTest', 'testWriteImageRaw_happyCase')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffAlphaRoundTripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'test')": [
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffAlphaRoundTripTest', 'test')": [
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffCcittTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        162,
                        174,
                        186,
                        198,
                        210,
                        221
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffCcittTest', 'testAll5x2Images')": [
                        163,
                        175,
                        187,
                        199,
                        211,
                        222
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffRoundtripTest', 'test')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/tiff/TiffSubImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.imaging.formats.tiff#TiffSubImageTest', 'testSubImage')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xmp/XmpUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/NullParametersRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/PixelDensityRoundtrip.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        43,
                        45,
                        47,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        43,
                        45,
                        47,
                        61
                    ]
                }
            }
        }
    },
    "461d385212fa255f8e105af555fec9bf69769165": {
        "authored_data": "2021 May 15 07:26",
        "commit.message": "[IMAGING-159] Add a method to create a parameter object, and a list of extensions to each format, and a default extension. Update tests.\n",
        "commit.author.name": "Bruno P. Kinoshita",
        "pcid": "d689c03e73d9a6ac8bad147c19504e414fc368c2",
        "changes": {
            "src/main/java/org/apache/commons/imaging/ImageFormat.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        37,
                        39,
                        40,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/ImageFormats.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/dcx/DcxImageParser.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', None)": [
                        46,
                        47,
                        72
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAcceptedTypes')": [
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', None)": [
                        45,
                        47,
                        48
                    ],
                    "('org.apache.commons.imaging.formats.dcx#DcxImageParser', 'getAcceptedTypes')": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/imaging/formats/jpeg/JpegImageParser.java": {
                "new": {
                    "('org.apache.commons.imaging.formats.jpeg#JpegImageParser', 'getExifMetadata(ByteSource,JpegImagingParameters)')": [
                        362,
                        363,
                        364
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/common/bytesource/ByteSourceImageTest.java": {
                "old": {
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        163,
                        166,
                        167,
                        168,
                        170,
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.imaging.common.bytesource#ByteSourceImageTest', 'checkGetImageInfo(File,byte)')": [
                        166,
                        167,
                        168,
                        169,
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/formats/xmp/XmpUpdateTest.java": {
                "old": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.formats.xmp#XmpUpdateTest', 'test')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/NullParametersRoundtripTest.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#NullParametersRoundtripTest', 'testNullParametersRoundtrip(FormatInfo)')": [
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/PixelDensityRoundtrip.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#PixelDensityRoundtrip', 'testPixelDensityRoundtrip(FormatInfo)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/imaging/roundtrip/RoundtripBase.java": {
                "old": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        40,
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.imaging.roundtrip#RoundtripBase', 'roundtrip(FormatInfo,BufferedImage,String,boolean)')": [
                        40,
                        60
                    ]
                }
            }
        }
    }
}